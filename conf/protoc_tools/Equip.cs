// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: equip.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Proto {

  /// <summary>Holder for reflection information generated from equip.proto</summary>
  public static partial class EquipReflection {

    #region Descriptor
    /// <summary>File descriptor for equip.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EquipReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgtlcXVpcC5wcm90bxIFcHJvdG8inAIKDVBCRXF1aXBFbnRpdHkSEQoJZW50",
            "aXR5X2lkGAEgASgDEg8KB2NvbmZfaWQYAiABKAUSDQoFbGV2ZWwYAyABKAUS",
            "LgoFYXR0dHMYBCADKAsyHy5wcm90by5QQkVxdWlwRW50aXR5LkF0dHRzRW50",
            "cnkSFgoOamluZ2xpYW5fbGV2ZWwYBSABKAUSFAoMamluZ2xpYW5fZXhwGAYg",
            "ASgFEhIKCnN0YXJfbGV2ZWwYByABKAUSEAoIc3Rhcl9leHAYCSABKAUSEgoK",
            "c3Rhcl9ibGVzcxgKIAEoBRISCgpnb2xkX2xldmVsGAsgASgFGiwKCkF0dHRz",
            "RW50cnkSCwoDa2V5GAEgASgFEg0KBXZhbHVlGAIgASgFOgI4AWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.PBEquipEntity), global::Proto.PBEquipEntity.Parser, new[]{ "EntityId", "ConfId", "Level", "Attts", "JinglianLevel", "JinglianExp", "StarLevel", "StarExp", "StarBless", "GoldLevel" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// 这个位置需要属性吗， 假如装备可以洗练， 还是加上去
  /// </summary>
  public sealed partial class PBEquipEntity : pb::IMessage<PBEquipEntity> {
    private static readonly pb::MessageParser<PBEquipEntity> _parser = new pb::MessageParser<PBEquipEntity>(() => new PBEquipEntity());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBEquipEntity> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.EquipReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBEquipEntity() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBEquipEntity(PBEquipEntity other) : this() {
      entityId_ = other.entityId_;
      confId_ = other.confId_;
      level_ = other.level_;
      attts_ = other.attts_.Clone();
      jinglianLevel_ = other.jinglianLevel_;
      jinglianExp_ = other.jinglianExp_;
      starLevel_ = other.starLevel_;
      starExp_ = other.starExp_;
      starBless_ = other.starBless_;
      goldLevel_ = other.goldLevel_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBEquipEntity Clone() {
      return new PBEquipEntity(this);
    }

    /// <summary>Field number for the "entity_id" field.</summary>
    public const int EntityIdFieldNumber = 1;
    private long entityId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long EntityId {
      get { return entityId_; }
      set {
        entityId_ = value;
      }
    }

    /// <summary>Field number for the "conf_id" field.</summary>
    public const int ConfIdFieldNumber = 2;
    private int confId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ConfId {
      get { return confId_; }
      set {
        confId_ = value;
      }
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 3;
    private int level_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    /// <summary>Field number for the "attts" field.</summary>
    public const int AtttsFieldNumber = 4;
    private static readonly pbc::MapField<int, int>.Codec _map_attts_codec
        = new pbc::MapField<int, int>.Codec(pb::FieldCodec.ForInt32(8), pb::FieldCodec.ForInt32(16), 34);
    private readonly pbc::MapField<int, int> attts_ = new pbc::MapField<int, int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, int> Attts {
      get { return attts_; }
    }

    /// <summary>Field number for the "jinglian_level" field.</summary>
    public const int JinglianLevelFieldNumber = 5;
    private int jinglianLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int JinglianLevel {
      get { return jinglianLevel_; }
      set {
        jinglianLevel_ = value;
      }
    }

    /// <summary>Field number for the "jinglian_exp" field.</summary>
    public const int JinglianExpFieldNumber = 6;
    private int jinglianExp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int JinglianExp {
      get { return jinglianExp_; }
      set {
        jinglianExp_ = value;
      }
    }

    /// <summary>Field number for the "star_level" field.</summary>
    public const int StarLevelFieldNumber = 7;
    private int starLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int StarLevel {
      get { return starLevel_; }
      set {
        starLevel_ = value;
      }
    }

    /// <summary>Field number for the "star_exp" field.</summary>
    public const int StarExpFieldNumber = 9;
    private int starExp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int StarExp {
      get { return starExp_; }
      set {
        starExp_ = value;
      }
    }

    /// <summary>Field number for the "star_bless" field.</summary>
    public const int StarBlessFieldNumber = 10;
    private int starBless_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int StarBless {
      get { return starBless_; }
      set {
        starBless_ = value;
      }
    }

    /// <summary>Field number for the "gold_level" field.</summary>
    public const int GoldLevelFieldNumber = 11;
    private int goldLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GoldLevel {
      get { return goldLevel_; }
      set {
        goldLevel_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBEquipEntity);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBEquipEntity other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EntityId != other.EntityId) return false;
      if (ConfId != other.ConfId) return false;
      if (Level != other.Level) return false;
      if (!Attts.Equals(other.Attts)) return false;
      if (JinglianLevel != other.JinglianLevel) return false;
      if (JinglianExp != other.JinglianExp) return false;
      if (StarLevel != other.StarLevel) return false;
      if (StarExp != other.StarExp) return false;
      if (StarBless != other.StarBless) return false;
      if (GoldLevel != other.GoldLevel) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (EntityId != 0L) hash ^= EntityId.GetHashCode();
      if (ConfId != 0) hash ^= ConfId.GetHashCode();
      if (Level != 0) hash ^= Level.GetHashCode();
      hash ^= Attts.GetHashCode();
      if (JinglianLevel != 0) hash ^= JinglianLevel.GetHashCode();
      if (JinglianExp != 0) hash ^= JinglianExp.GetHashCode();
      if (StarLevel != 0) hash ^= StarLevel.GetHashCode();
      if (StarExp != 0) hash ^= StarExp.GetHashCode();
      if (StarBless != 0) hash ^= StarBless.GetHashCode();
      if (GoldLevel != 0) hash ^= GoldLevel.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (EntityId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(EntityId);
      }
      if (ConfId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ConfId);
      }
      if (Level != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Level);
      }
      attts_.WriteTo(output, _map_attts_codec);
      if (JinglianLevel != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(JinglianLevel);
      }
      if (JinglianExp != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(JinglianExp);
      }
      if (StarLevel != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(StarLevel);
      }
      if (StarExp != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(StarExp);
      }
      if (StarBless != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(StarBless);
      }
      if (GoldLevel != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(GoldLevel);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (EntityId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(EntityId);
      }
      if (ConfId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ConfId);
      }
      if (Level != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
      }
      size += attts_.CalculateSize(_map_attts_codec);
      if (JinglianLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(JinglianLevel);
      }
      if (JinglianExp != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(JinglianExp);
      }
      if (StarLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StarLevel);
      }
      if (StarExp != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StarExp);
      }
      if (StarBless != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StarBless);
      }
      if (GoldLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GoldLevel);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBEquipEntity other) {
      if (other == null) {
        return;
      }
      if (other.EntityId != 0L) {
        EntityId = other.EntityId;
      }
      if (other.ConfId != 0) {
        ConfId = other.ConfId;
      }
      if (other.Level != 0) {
        Level = other.Level;
      }
      attts_.Add(other.attts_);
      if (other.JinglianLevel != 0) {
        JinglianLevel = other.JinglianLevel;
      }
      if (other.JinglianExp != 0) {
        JinglianExp = other.JinglianExp;
      }
      if (other.StarLevel != 0) {
        StarLevel = other.StarLevel;
      }
      if (other.StarExp != 0) {
        StarExp = other.StarExp;
      }
      if (other.StarBless != 0) {
        StarBless = other.StarBless;
      }
      if (other.GoldLevel != 0) {
        GoldLevel = other.GoldLevel;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            EntityId = input.ReadInt64();
            break;
          }
          case 16: {
            ConfId = input.ReadInt32();
            break;
          }
          case 24: {
            Level = input.ReadInt32();
            break;
          }
          case 34: {
            attts_.AddEntriesFrom(input, _map_attts_codec);
            break;
          }
          case 40: {
            JinglianLevel = input.ReadInt32();
            break;
          }
          case 48: {
            JinglianExp = input.ReadInt32();
            break;
          }
          case 56: {
            StarLevel = input.ReadInt32();
            break;
          }
          case 72: {
            StarExp = input.ReadInt32();
            break;
          }
          case 80: {
            StarBless = input.ReadInt32();
            break;
          }
          case 88: {
            GoldLevel = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
