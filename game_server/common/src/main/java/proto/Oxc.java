// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: oxc.proto

package proto;

public final class Oxc {
  private Oxc() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface PBOXCGameStartOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 firstPos = 1;
    /**
     * <code>required int32 firstPos = 1;</code>
     *
     * <pre>
     *执行位置
     * </pre>
     */
    boolean hasFirstPos();
    /**
     * <code>required int32 firstPos = 1;</code>
     *
     * <pre>
     *执行位置
     * </pre>
     */
    int getFirstPos();

    // repeated int32 playPos = 2;
    /**
     * <code>repeated int32 playPos = 2;</code>
     *
     * <pre>
     *玩家列表
     * </pre>
     */
    java.util.List<java.lang.Integer> getPlayPosList();
    /**
     * <code>repeated int32 playPos = 2;</code>
     *
     * <pre>
     *玩家列表
     * </pre>
     */
    int getPlayPosCount();
    /**
     * <code>repeated int32 playPos = 2;</code>
     *
     * <pre>
     *玩家列表
     * </pre>
     */
    int getPlayPos(int index);

    // repeated int32 cards = 3;
    /**
     * <code>repeated int32 cards = 3;</code>
     *
     * <pre>
     *如果自己牌数据 
     * </pre>
     */
    java.util.List<java.lang.Integer> getCardsList();
    /**
     * <code>repeated int32 cards = 3;</code>
     *
     * <pre>
     *如果自己牌数据 
     * </pre>
     */
    int getCardsCount();
    /**
     * <code>repeated int32 cards = 3;</code>
     *
     * <pre>
     *如果自己牌数据 
     * </pre>
     */
    int getCards(int index);

    // required int32 countDown = 4;
    /**
     * <code>required int32 countDown = 4;</code>
     *
     * <pre>
     *抢庄倒计时
     * </pre>
     */
    boolean hasCountDown();
    /**
     * <code>required int32 countDown = 4;</code>
     *
     * <pre>
     *抢庄倒计时
     * </pre>
     */
    int getCountDown();
  }
  /**
   * Protobuf type {@code proto.PBOXCGameStart}
   */
  public static final class PBOXCGameStart extends
      com.google.protobuf.GeneratedMessage
      implements PBOXCGameStartOrBuilder {
    // Use PBOXCGameStart.newBuilder() to construct.
    private PBOXCGameStart(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PBOXCGameStart(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PBOXCGameStart defaultInstance;
    public static PBOXCGameStart getDefaultInstance() {
      return defaultInstance;
    }

    public PBOXCGameStart getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PBOXCGameStart(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              firstPos_ = input.readInt32();
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                playPos_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              playPos_.add(input.readInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                playPos_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                playPos_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                cards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              cards_.add(input.readInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                cards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                cards_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 32: {
              bitField0_ |= 0x00000002;
              countDown_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          playPos_ = java.util.Collections.unmodifiableList(playPos_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          cards_ = java.util.Collections.unmodifiableList(cards_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return proto.Oxc.internal_static_protobuf_PBOXCGameStart_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return proto.Oxc.internal_static_protobuf_PBOXCGameStart_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              proto.Oxc.PBOXCGameStart.class, proto.Oxc.PBOXCGameStart.Builder.class);
    }

    public static com.google.protobuf.Parser<PBOXCGameStart> PARSER =
        new com.google.protobuf.AbstractParser<PBOXCGameStart>() {
      public PBOXCGameStart parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PBOXCGameStart(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PBOXCGameStart> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 firstPos = 1;
    public static final int FIRSTPOS_FIELD_NUMBER = 1;
    private int firstPos_;
    /**
     * <code>required int32 firstPos = 1;</code>
     *
     * <pre>
     *执行位置
     * </pre>
     */
    public boolean hasFirstPos() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 firstPos = 1;</code>
     *
     * <pre>
     *执行位置
     * </pre>
     */
    public int getFirstPos() {
      return firstPos_;
    }

    // repeated int32 playPos = 2;
    public static final int PLAYPOS_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> playPos_;
    /**
     * <code>repeated int32 playPos = 2;</code>
     *
     * <pre>
     *玩家列表
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getPlayPosList() {
      return playPos_;
    }
    /**
     * <code>repeated int32 playPos = 2;</code>
     *
     * <pre>
     *玩家列表
     * </pre>
     */
    public int getPlayPosCount() {
      return playPos_.size();
    }
    /**
     * <code>repeated int32 playPos = 2;</code>
     *
     * <pre>
     *玩家列表
     * </pre>
     */
    public int getPlayPos(int index) {
      return playPos_.get(index);
    }

    // repeated int32 cards = 3;
    public static final int CARDS_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> cards_;
    /**
     * <code>repeated int32 cards = 3;</code>
     *
     * <pre>
     *如果自己牌数据 
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCardsList() {
      return cards_;
    }
    /**
     * <code>repeated int32 cards = 3;</code>
     *
     * <pre>
     *如果自己牌数据 
     * </pre>
     */
    public int getCardsCount() {
      return cards_.size();
    }
    /**
     * <code>repeated int32 cards = 3;</code>
     *
     * <pre>
     *如果自己牌数据 
     * </pre>
     */
    public int getCards(int index) {
      return cards_.get(index);
    }

    // required int32 countDown = 4;
    public static final int COUNTDOWN_FIELD_NUMBER = 4;
    private int countDown_;
    /**
     * <code>required int32 countDown = 4;</code>
     *
     * <pre>
     *抢庄倒计时
     * </pre>
     */
    public boolean hasCountDown() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 countDown = 4;</code>
     *
     * <pre>
     *抢庄倒计时
     * </pre>
     */
    public int getCountDown() {
      return countDown_;
    }

    private void initFields() {
      firstPos_ = 0;
      playPos_ = java.util.Collections.emptyList();
      cards_ = java.util.Collections.emptyList();
      countDown_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasFirstPos()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCountDown()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, firstPos_);
      }
      for (int i = 0; i < playPos_.size(); i++) {
        output.writeInt32(2, playPos_.get(i));
      }
      for (int i = 0; i < cards_.size(); i++) {
        output.writeInt32(3, cards_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(4, countDown_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, firstPos_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < playPos_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(playPos_.get(i));
        }
        size += dataSize;
        size += 1 * getPlayPosList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cards_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(cards_.get(i));
        }
        size += dataSize;
        size += 1 * getCardsList().size();
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, countDown_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static proto.Oxc.PBOXCGameStart parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.Oxc.PBOXCGameStart parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.Oxc.PBOXCGameStart parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.Oxc.PBOXCGameStart parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.Oxc.PBOXCGameStart parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static proto.Oxc.PBOXCGameStart parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static proto.Oxc.PBOXCGameStart parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static proto.Oxc.PBOXCGameStart parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static proto.Oxc.PBOXCGameStart parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static proto.Oxc.PBOXCGameStart parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(proto.Oxc.PBOXCGameStart prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code proto.PBOXCGameStart}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements proto.Oxc.PBOXCGameStartOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return proto.Oxc.internal_static_protobuf_PBOXCGameStart_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return proto.Oxc.internal_static_protobuf_PBOXCGameStart_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                proto.Oxc.PBOXCGameStart.class, proto.Oxc.PBOXCGameStart.Builder.class);
      }

      // Construct using proto.Oxc.PBOXCGameStart.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        firstPos_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        playPos_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        cards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        countDown_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return proto.Oxc.internal_static_protobuf_PBOXCGameStart_descriptor;
      }

      public proto.Oxc.PBOXCGameStart getDefaultInstanceForType() {
        return proto.Oxc.PBOXCGameStart.getDefaultInstance();
      }

      public proto.Oxc.PBOXCGameStart build() {
        proto.Oxc.PBOXCGameStart result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public proto.Oxc.PBOXCGameStart buildPartial() {
        proto.Oxc.PBOXCGameStart result = new proto.Oxc.PBOXCGameStart(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.firstPos_ = firstPos_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          playPos_ = java.util.Collections.unmodifiableList(playPos_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.playPos_ = playPos_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          cards_ = java.util.Collections.unmodifiableList(cards_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.cards_ = cards_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000002;
        }
        result.countDown_ = countDown_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof proto.Oxc.PBOXCGameStart) {
          return mergeFrom((proto.Oxc.PBOXCGameStart)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(proto.Oxc.PBOXCGameStart other) {
        if (other == proto.Oxc.PBOXCGameStart.getDefaultInstance()) return this;
        if (other.hasFirstPos()) {
          setFirstPos(other.getFirstPos());
        }
        if (!other.playPos_.isEmpty()) {
          if (playPos_.isEmpty()) {
            playPos_ = other.playPos_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensurePlayPosIsMutable();
            playPos_.addAll(other.playPos_);
          }
          onChanged();
        }
        if (!other.cards_.isEmpty()) {
          if (cards_.isEmpty()) {
            cards_ = other.cards_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureCardsIsMutable();
            cards_.addAll(other.cards_);
          }
          onChanged();
        }
        if (other.hasCountDown()) {
          setCountDown(other.getCountDown());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasFirstPos()) {
          
          return false;
        }
        if (!hasCountDown()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        proto.Oxc.PBOXCGameStart parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (proto.Oxc.PBOXCGameStart) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 firstPos = 1;
      private int firstPos_ ;
      /**
       * <code>required int32 firstPos = 1;</code>
       *
       * <pre>
       *执行位置
       * </pre>
       */
      public boolean hasFirstPos() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 firstPos = 1;</code>
       *
       * <pre>
       *执行位置
       * </pre>
       */
      public int getFirstPos() {
        return firstPos_;
      }
      /**
       * <code>required int32 firstPos = 1;</code>
       *
       * <pre>
       *执行位置
       * </pre>
       */
      public Builder setFirstPos(int value) {
        bitField0_ |= 0x00000001;
        firstPos_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 firstPos = 1;</code>
       *
       * <pre>
       *执行位置
       * </pre>
       */
      public Builder clearFirstPos() {
        bitField0_ = (bitField0_ & ~0x00000001);
        firstPos_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 playPos = 2;
      private java.util.List<java.lang.Integer> playPos_ = java.util.Collections.emptyList();
      private void ensurePlayPosIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          playPos_ = new java.util.ArrayList<java.lang.Integer>(playPos_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int32 playPos = 2;</code>
       *
       * <pre>
       *玩家列表
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getPlayPosList() {
        return java.util.Collections.unmodifiableList(playPos_);
      }
      /**
       * <code>repeated int32 playPos = 2;</code>
       *
       * <pre>
       *玩家列表
       * </pre>
       */
      public int getPlayPosCount() {
        return playPos_.size();
      }
      /**
       * <code>repeated int32 playPos = 2;</code>
       *
       * <pre>
       *玩家列表
       * </pre>
       */
      public int getPlayPos(int index) {
        return playPos_.get(index);
      }
      /**
       * <code>repeated int32 playPos = 2;</code>
       *
       * <pre>
       *玩家列表
       * </pre>
       */
      public Builder setPlayPos(
          int index, int value) {
        ensurePlayPosIsMutable();
        playPos_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 playPos = 2;</code>
       *
       * <pre>
       *玩家列表
       * </pre>
       */
      public Builder addPlayPos(int value) {
        ensurePlayPosIsMutable();
        playPos_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 playPos = 2;</code>
       *
       * <pre>
       *玩家列表
       * </pre>
       */
      public Builder addAllPlayPos(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensurePlayPosIsMutable();
        super.addAll(values, playPos_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 playPos = 2;</code>
       *
       * <pre>
       *玩家列表
       * </pre>
       */
      public Builder clearPlayPos() {
        playPos_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // repeated int32 cards = 3;
      private java.util.List<java.lang.Integer> cards_ = java.util.Collections.emptyList();
      private void ensureCardsIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          cards_ = new java.util.ArrayList<java.lang.Integer>(cards_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated int32 cards = 3;</code>
       *
       * <pre>
       *如果自己牌数据 
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCardsList() {
        return java.util.Collections.unmodifiableList(cards_);
      }
      /**
       * <code>repeated int32 cards = 3;</code>
       *
       * <pre>
       *如果自己牌数据 
       * </pre>
       */
      public int getCardsCount() {
        return cards_.size();
      }
      /**
       * <code>repeated int32 cards = 3;</code>
       *
       * <pre>
       *如果自己牌数据 
       * </pre>
       */
      public int getCards(int index) {
        return cards_.get(index);
      }
      /**
       * <code>repeated int32 cards = 3;</code>
       *
       * <pre>
       *如果自己牌数据 
       * </pre>
       */
      public Builder setCards(
          int index, int value) {
        ensureCardsIsMutable();
        cards_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards = 3;</code>
       *
       * <pre>
       *如果自己牌数据 
       * </pre>
       */
      public Builder addCards(int value) {
        ensureCardsIsMutable();
        cards_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards = 3;</code>
       *
       * <pre>
       *如果自己牌数据 
       * </pre>
       */
      public Builder addAllCards(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCardsIsMutable();
        super.addAll(values, cards_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards = 3;</code>
       *
       * <pre>
       *如果自己牌数据 
       * </pre>
       */
      public Builder clearCards() {
        cards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      // required int32 countDown = 4;
      private int countDown_ ;
      /**
       * <code>required int32 countDown = 4;</code>
       *
       * <pre>
       *抢庄倒计时
       * </pre>
       */
      public boolean hasCountDown() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int32 countDown = 4;</code>
       *
       * <pre>
       *抢庄倒计时
       * </pre>
       */
      public int getCountDown() {
        return countDown_;
      }
      /**
       * <code>required int32 countDown = 4;</code>
       *
       * <pre>
       *抢庄倒计时
       * </pre>
       */
      public Builder setCountDown(int value) {
        bitField0_ |= 0x00000008;
        countDown_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 countDown = 4;</code>
       *
       * <pre>
       *抢庄倒计时
       * </pre>
       */
      public Builder clearCountDown() {
        bitField0_ = (bitField0_ & ~0x00000008);
        countDown_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:proto.PBOXCGameStart)
    }

    static {
      defaultInstance = new PBOXCGameStart(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:proto.PBOXCGameStart)
  }

  public interface PBOXCBankerOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 bankerPos = 1;
    /**
     * <code>required int32 bankerPos = 1;</code>
     *
     * <pre>
     *庄位置
     * </pre>
     */
    boolean hasBankerPos();
    /**
     * <code>required int32 bankerPos = 1;</code>
     *
     * <pre>
     *庄位置
     * </pre>
     */
    int getBankerPos();

    // repeated .proto.PBPair times = 2;
    /**
     * <code>repeated .proto.PBPair times = 2;</code>
     *
     * <pre>
     *玩家抢庄倍数
     * </pre>
     */
    java.util.List<proto.Common.PBPair>
        getTimesList();
    /**
     * <code>repeated .proto.PBPair times = 2;</code>
     *
     * <pre>
     *玩家抢庄倍数
     * </pre>
     */
    proto.Common.PBPair getTimes(int index);
    /**
     * <code>repeated .proto.PBPair times = 2;</code>
     *
     * <pre>
     *玩家抢庄倍数
     * </pre>
     */
    int getTimesCount();
    /**
     * <code>repeated .proto.PBPair times = 2;</code>
     *
     * <pre>
     *玩家抢庄倍数
     * </pre>
     */
    java.util.List<? extends proto.Common.PBPairOrBuilder>
        getTimesOrBuilderList();
    /**
     * <code>repeated .proto.PBPair times = 2;</code>
     *
     * <pre>
     *玩家抢庄倍数
     * </pre>
     */
    proto.Common.PBPairOrBuilder getTimesOrBuilder(
        int index);

    // required int32 countDown = 3;
    /**
     * <code>required int32 countDown = 3;</code>
     *
     * <pre>
     *加注倒计时
     * </pre>
     */
    boolean hasCountDown();
    /**
     * <code>required int32 countDown = 3;</code>
     *
     * <pre>
     *加注倒计时
     * </pre>
     */
    int getCountDown();
  }
  /**
   * Protobuf type {@code proto.PBOXCBanker}
   */
  public static final class PBOXCBanker extends
      com.google.protobuf.GeneratedMessage
      implements PBOXCBankerOrBuilder {
    // Use PBOXCBanker.newBuilder() to construct.
    private PBOXCBanker(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PBOXCBanker(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PBOXCBanker defaultInstance;
    public static PBOXCBanker getDefaultInstance() {
      return defaultInstance;
    }

    public PBOXCBanker getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PBOXCBanker(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              bankerPos_ = input.readInt32();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                times_ = new java.util.ArrayList<proto.Common.PBPair>();
                mutable_bitField0_ |= 0x00000002;
              }
              times_.add(input.readMessage(proto.Common.PBPair.PARSER, extensionRegistry));
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              countDown_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          times_ = java.util.Collections.unmodifiableList(times_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return proto.Oxc.internal_static_protobuf_PBOXCBanker_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return proto.Oxc.internal_static_protobuf_PBOXCBanker_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              proto.Oxc.PBOXCBanker.class, proto.Oxc.PBOXCBanker.Builder.class);
    }

    public static com.google.protobuf.Parser<PBOXCBanker> PARSER =
        new com.google.protobuf.AbstractParser<PBOXCBanker>() {
      public PBOXCBanker parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PBOXCBanker(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PBOXCBanker> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 bankerPos = 1;
    public static final int BANKERPOS_FIELD_NUMBER = 1;
    private int bankerPos_;
    /**
     * <code>required int32 bankerPos = 1;</code>
     *
     * <pre>
     *庄位置
     * </pre>
     */
    public boolean hasBankerPos() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 bankerPos = 1;</code>
     *
     * <pre>
     *庄位置
     * </pre>
     */
    public int getBankerPos() {
      return bankerPos_;
    }

    // repeated .proto.PBPair times = 2;
    public static final int TIMES_FIELD_NUMBER = 2;
    private java.util.List<proto.Common.PBPair> times_;
    /**
     * <code>repeated .proto.PBPair times = 2;</code>
     *
     * <pre>
     *玩家抢庄倍数
     * </pre>
     */
    public java.util.List<proto.Common.PBPair> getTimesList() {
      return times_;
    }
    /**
     * <code>repeated .proto.PBPair times = 2;</code>
     *
     * <pre>
     *玩家抢庄倍数
     * </pre>
     */
    public java.util.List<? extends proto.Common.PBPairOrBuilder>
        getTimesOrBuilderList() {
      return times_;
    }
    /**
     * <code>repeated .proto.PBPair times = 2;</code>
     *
     * <pre>
     *玩家抢庄倍数
     * </pre>
     */
    public int getTimesCount() {
      return times_.size();
    }
    /**
     * <code>repeated .proto.PBPair times = 2;</code>
     *
     * <pre>
     *玩家抢庄倍数
     * </pre>
     */
    public proto.Common.PBPair getTimes(int index) {
      return times_.get(index);
    }
    /**
     * <code>repeated .proto.PBPair times = 2;</code>
     *
     * <pre>
     *玩家抢庄倍数
     * </pre>
     */
    public proto.Common.PBPairOrBuilder getTimesOrBuilder(
        int index) {
      return times_.get(index);
    }

    // required int32 countDown = 3;
    public static final int COUNTDOWN_FIELD_NUMBER = 3;
    private int countDown_;
    /**
     * <code>required int32 countDown = 3;</code>
     *
     * <pre>
     *加注倒计时
     * </pre>
     */
    public boolean hasCountDown() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 countDown = 3;</code>
     *
     * <pre>
     *加注倒计时
     * </pre>
     */
    public int getCountDown() {
      return countDown_;
    }

    private void initFields() {
      bankerPos_ = 0;
      times_ = java.util.Collections.emptyList();
      countDown_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasBankerPos()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCountDown()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getTimesCount(); i++) {
        if (!getTimes(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, bankerPos_);
      }
      for (int i = 0; i < times_.size(); i++) {
        output.writeMessage(2, times_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(3, countDown_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, bankerPos_);
      }
      for (int i = 0; i < times_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, times_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, countDown_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static proto.Oxc.PBOXCBanker parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.Oxc.PBOXCBanker parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.Oxc.PBOXCBanker parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.Oxc.PBOXCBanker parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.Oxc.PBOXCBanker parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static proto.Oxc.PBOXCBanker parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static proto.Oxc.PBOXCBanker parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static proto.Oxc.PBOXCBanker parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static proto.Oxc.PBOXCBanker parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static proto.Oxc.PBOXCBanker parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(proto.Oxc.PBOXCBanker prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code proto.PBOXCBanker}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements proto.Oxc.PBOXCBankerOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return proto.Oxc.internal_static_protobuf_PBOXCBanker_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return proto.Oxc.internal_static_protobuf_PBOXCBanker_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                proto.Oxc.PBOXCBanker.class, proto.Oxc.PBOXCBanker.Builder.class);
      }

      // Construct using proto.Oxc.PBOXCBanker.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getTimesFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        bankerPos_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (timesBuilder_ == null) {
          times_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          timesBuilder_.clear();
        }
        countDown_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return proto.Oxc.internal_static_protobuf_PBOXCBanker_descriptor;
      }

      public proto.Oxc.PBOXCBanker getDefaultInstanceForType() {
        return proto.Oxc.PBOXCBanker.getDefaultInstance();
      }

      public proto.Oxc.PBOXCBanker build() {
        proto.Oxc.PBOXCBanker result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public proto.Oxc.PBOXCBanker buildPartial() {
        proto.Oxc.PBOXCBanker result = new proto.Oxc.PBOXCBanker(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.bankerPos_ = bankerPos_;
        if (timesBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            times_ = java.util.Collections.unmodifiableList(times_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.times_ = times_;
        } else {
          result.times_ = timesBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.countDown_ = countDown_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof proto.Oxc.PBOXCBanker) {
          return mergeFrom((proto.Oxc.PBOXCBanker)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(proto.Oxc.PBOXCBanker other) {
        if (other == proto.Oxc.PBOXCBanker.getDefaultInstance()) return this;
        if (other.hasBankerPos()) {
          setBankerPos(other.getBankerPos());
        }
        if (timesBuilder_ == null) {
          if (!other.times_.isEmpty()) {
            if (times_.isEmpty()) {
              times_ = other.times_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureTimesIsMutable();
              times_.addAll(other.times_);
            }
            onChanged();
          }
        } else {
          if (!other.times_.isEmpty()) {
            if (timesBuilder_.isEmpty()) {
              timesBuilder_.dispose();
              timesBuilder_ = null;
              times_ = other.times_;
              bitField0_ = (bitField0_ & ~0x00000002);
              timesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getTimesFieldBuilder() : null;
            } else {
              timesBuilder_.addAllMessages(other.times_);
            }
          }
        }
        if (other.hasCountDown()) {
          setCountDown(other.getCountDown());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasBankerPos()) {
          
          return false;
        }
        if (!hasCountDown()) {
          
          return false;
        }
        for (int i = 0; i < getTimesCount(); i++) {
          if (!getTimes(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        proto.Oxc.PBOXCBanker parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (proto.Oxc.PBOXCBanker) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 bankerPos = 1;
      private int bankerPos_ ;
      /**
       * <code>required int32 bankerPos = 1;</code>
       *
       * <pre>
       *庄位置
       * </pre>
       */
      public boolean hasBankerPos() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 bankerPos = 1;</code>
       *
       * <pre>
       *庄位置
       * </pre>
       */
      public int getBankerPos() {
        return bankerPos_;
      }
      /**
       * <code>required int32 bankerPos = 1;</code>
       *
       * <pre>
       *庄位置
       * </pre>
       */
      public Builder setBankerPos(int value) {
        bitField0_ |= 0x00000001;
        bankerPos_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 bankerPos = 1;</code>
       *
       * <pre>
       *庄位置
       * </pre>
       */
      public Builder clearBankerPos() {
        bitField0_ = (bitField0_ & ~0x00000001);
        bankerPos_ = 0;
        onChanged();
        return this;
      }

      // repeated .proto.PBPair times = 2;
      private java.util.List<proto.Common.PBPair> times_ =
        java.util.Collections.emptyList();
      private void ensureTimesIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          times_ = new java.util.ArrayList<proto.Common.PBPair>(times_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          proto.Common.PBPair, proto.Common.PBPair.Builder, proto.Common.PBPairOrBuilder> timesBuilder_;

      /**
       * <code>repeated .proto.PBPair times = 2;</code>
       *
       * <pre>
       *玩家抢庄倍数
       * </pre>
       */
      public java.util.List<proto.Common.PBPair> getTimesList() {
        if (timesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(times_);
        } else {
          return timesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .proto.PBPair times = 2;</code>
       *
       * <pre>
       *玩家抢庄倍数
       * </pre>
       */
      public int getTimesCount() {
        if (timesBuilder_ == null) {
          return times_.size();
        } else {
          return timesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .proto.PBPair times = 2;</code>
       *
       * <pre>
       *玩家抢庄倍数
       * </pre>
       */
      public proto.Common.PBPair getTimes(int index) {
        if (timesBuilder_ == null) {
          return times_.get(index);
        } else {
          return timesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .proto.PBPair times = 2;</code>
       *
       * <pre>
       *玩家抢庄倍数
       * </pre>
       */
      public Builder setTimes(
			  int index, proto.Common.PBPair value) {
        if (timesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTimesIsMutable();
          times_.set(index, value);
          onChanged();
        } else {
          timesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .proto.PBPair times = 2;</code>
       *
       * <pre>
       *玩家抢庄倍数
       * </pre>
       */
      public Builder setTimes(
			  int index, proto.Common.PBPair.Builder builderForValue) {
        if (timesBuilder_ == null) {
          ensureTimesIsMutable();
          times_.set(index, builderForValue.build());
          onChanged();
        } else {
          timesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .proto.PBPair times = 2;</code>
       *
       * <pre>
       *玩家抢庄倍数
       * </pre>
       */
      public Builder addTimes(proto.Common.PBPair value) {
        if (timesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTimesIsMutable();
          times_.add(value);
          onChanged();
        } else {
          timesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .proto.PBPair times = 2;</code>
       *
       * <pre>
       *玩家抢庄倍数
       * </pre>
       */
      public Builder addTimes(
			  int index, proto.Common.PBPair value) {
        if (timesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTimesIsMutable();
          times_.add(index, value);
          onChanged();
        } else {
          timesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .proto.PBPair times = 2;</code>
       *
       * <pre>
       *玩家抢庄倍数
       * </pre>
       */
      public Builder addTimes(
			  proto.Common.PBPair.Builder builderForValue) {
        if (timesBuilder_ == null) {
          ensureTimesIsMutable();
          times_.add(builderForValue.build());
          onChanged();
        } else {
          timesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .proto.PBPair times = 2;</code>
       *
       * <pre>
       *玩家抢庄倍数
       * </pre>
       */
      public Builder addTimes(
			  int index, proto.Common.PBPair.Builder builderForValue) {
        if (timesBuilder_ == null) {
          ensureTimesIsMutable();
          times_.add(index, builderForValue.build());
          onChanged();
        } else {
          timesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .proto.PBPair times = 2;</code>
       *
       * <pre>
       *玩家抢庄倍数
       * </pre>
       */
      public Builder addAllTimes(
          java.lang.Iterable<? extends proto.Common.PBPair> values) {
        if (timesBuilder_ == null) {
          ensureTimesIsMutable();
          super.addAll(values, times_);
          onChanged();
        } else {
          timesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .proto.PBPair times = 2;</code>
       *
       * <pre>
       *玩家抢庄倍数
       * </pre>
       */
      public Builder clearTimes() {
        if (timesBuilder_ == null) {
          times_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          timesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .proto.PBPair times = 2;</code>
       *
       * <pre>
       *玩家抢庄倍数
       * </pre>
       */
      public Builder removeTimes(int index) {
        if (timesBuilder_ == null) {
          ensureTimesIsMutable();
          times_.remove(index);
          onChanged();
        } else {
          timesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .proto.PBPair times = 2;</code>
       *
       * <pre>
       *玩家抢庄倍数
       * </pre>
       */
      public proto.Common.PBPair.Builder getTimesBuilder(
          int index) {
        return getTimesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .proto.PBPair times = 2;</code>
       *
       * <pre>
       *玩家抢庄倍数
       * </pre>
       */
      public proto.Common.PBPairOrBuilder getTimesOrBuilder(
          int index) {
        if (timesBuilder_ == null) {
          return times_.get(index);  } else {
          return timesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .proto.PBPair times = 2;</code>
       *
       * <pre>
       *玩家抢庄倍数
       * </pre>
       */
      public java.util.List<? extends proto.Common.PBPairOrBuilder>
           getTimesOrBuilderList() {
        if (timesBuilder_ != null) {
          return timesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(times_);
        }
      }
      /**
       * <code>repeated .proto.PBPair times = 2;</code>
       *
       * <pre>
       *玩家抢庄倍数
       * </pre>
       */
      public proto.Common.PBPair.Builder addTimesBuilder() {
        return getTimesFieldBuilder().addBuilder(
            proto.Common.PBPair.getDefaultInstance());
      }
      /**
       * <code>repeated .proto.PBPair times = 2;</code>
       *
       * <pre>
       *玩家抢庄倍数
       * </pre>
       */
      public proto.Common.PBPair.Builder addTimesBuilder(
          int index) {
        return getTimesFieldBuilder().addBuilder(
            index, proto.Common.PBPair.getDefaultInstance());
      }
      /**
       * <code>repeated .proto.PBPair times = 2;</code>
       *
       * <pre>
       *玩家抢庄倍数
       * </pre>
       */
      public java.util.List<proto.Common.PBPair.Builder>
           getTimesBuilderList() {
        return getTimesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          proto.Common.PBPair, proto.Common.PBPair.Builder, proto.Common.PBPairOrBuilder>
          getTimesFieldBuilder() {
        if (timesBuilder_ == null) {
          timesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              proto.Common.PBPair, proto.Common.PBPair.Builder, proto.Common.PBPairOrBuilder>(
                  times_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          times_ = null;
        }
        return timesBuilder_;
      }

      // required int32 countDown = 3;
      private int countDown_ ;
      /**
       * <code>required int32 countDown = 3;</code>
       *
       * <pre>
       *加注倒计时
       * </pre>
       */
      public boolean hasCountDown() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 countDown = 3;</code>
       *
       * <pre>
       *加注倒计时
       * </pre>
       */
      public int getCountDown() {
        return countDown_;
      }
      /**
       * <code>required int32 countDown = 3;</code>
       *
       * <pre>
       *加注倒计时
       * </pre>
       */
      public Builder setCountDown(int value) {
        bitField0_ |= 0x00000004;
        countDown_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 countDown = 3;</code>
       *
       * <pre>
       *加注倒计时
       * </pre>
       */
      public Builder clearCountDown() {
        bitField0_ = (bitField0_ & ~0x00000004);
        countDown_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:proto.PBOXCBanker)
    }

    static {
      defaultInstance = new PBOXCBanker(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:proto.PBOXCBanker)
  }

  public interface PBOXCDealCardsOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated int32 cards = 1;
    /**
     * <code>repeated int32 cards = 1;</code>
     *
     * <pre>
     *发牌 自己牌 旁观者没有
     * </pre>
     */
    java.util.List<java.lang.Integer> getCardsList();
    /**
     * <code>repeated int32 cards = 1;</code>
     *
     * <pre>
     *发牌 自己牌 旁观者没有
     * </pre>
     */
    int getCardsCount();
    /**
     * <code>repeated int32 cards = 1;</code>
     *
     * <pre>
     *发牌 自己牌 旁观者没有
     * </pre>
     */
    int getCards(int index);

    // optional int32 typed = 2;
    /**
     * <code>optional int32 typed = 2;</code>
     *
     * <pre>
     *牛多少
     * </pre>
     */
    boolean hasTyped();
    /**
     * <code>optional int32 typed = 2;</code>
     *
     * <pre>
     *牛多少
     * </pre>
     */
    int getTyped();

    // required int32 countDown = 3;
    /**
     * <code>required int32 countDown = 3;</code>
     *
     * <pre>
     *算牌倒计时
     * </pre>
     */
    boolean hasCountDown();
    /**
     * <code>required int32 countDown = 3;</code>
     *
     * <pre>
     *算牌倒计时
     * </pre>
     */
    int getCountDown();

    // required int32 cardNum = 4;
    /**
     * <code>required int32 cardNum = 4;</code>
     *
     * <pre>
     *发牌数 主要给傍观者
     * </pre>
     */
    boolean hasCardNum();
    /**
     * <code>required int32 cardNum = 4;</code>
     *
     * <pre>
     *发牌数 主要给傍观者
     * </pre>
     */
    int getCardNum();
  }
  /**
   * Protobuf type {@code proto.PBOXCDealCards}
   */
  public static final class PBOXCDealCards extends
      com.google.protobuf.GeneratedMessage
      implements PBOXCDealCardsOrBuilder {
    // Use PBOXCDealCards.newBuilder() to construct.
    private PBOXCDealCards(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PBOXCDealCards(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PBOXCDealCards defaultInstance;
    public static PBOXCDealCards getDefaultInstance() {
      return defaultInstance;
    }

    public PBOXCDealCards getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PBOXCDealCards(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                cards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              cards_.add(input.readInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                cards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                cards_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 16: {
              bitField0_ |= 0x00000001;
              typed_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              countDown_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              cardNum_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          cards_ = java.util.Collections.unmodifiableList(cards_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return proto.Oxc.internal_static_protobuf_PBOXCDealCards_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return proto.Oxc.internal_static_protobuf_PBOXCDealCards_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              proto.Oxc.PBOXCDealCards.class, proto.Oxc.PBOXCDealCards.Builder.class);
    }

    public static com.google.protobuf.Parser<PBOXCDealCards> PARSER =
        new com.google.protobuf.AbstractParser<PBOXCDealCards>() {
      public PBOXCDealCards parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PBOXCDealCards(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PBOXCDealCards> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // repeated int32 cards = 1;
    public static final int CARDS_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Integer> cards_;
    /**
     * <code>repeated int32 cards = 1;</code>
     *
     * <pre>
     *发牌 自己牌 旁观者没有
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCardsList() {
      return cards_;
    }
    /**
     * <code>repeated int32 cards = 1;</code>
     *
     * <pre>
     *发牌 自己牌 旁观者没有
     * </pre>
     */
    public int getCardsCount() {
      return cards_.size();
    }
    /**
     * <code>repeated int32 cards = 1;</code>
     *
     * <pre>
     *发牌 自己牌 旁观者没有
     * </pre>
     */
    public int getCards(int index) {
      return cards_.get(index);
    }

    // optional int32 typed = 2;
    public static final int TYPED_FIELD_NUMBER = 2;
    private int typed_;
    /**
     * <code>optional int32 typed = 2;</code>
     *
     * <pre>
     *牛多少
     * </pre>
     */
    public boolean hasTyped() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 typed = 2;</code>
     *
     * <pre>
     *牛多少
     * </pre>
     */
    public int getTyped() {
      return typed_;
    }

    // required int32 countDown = 3;
    public static final int COUNTDOWN_FIELD_NUMBER = 3;
    private int countDown_;
    /**
     * <code>required int32 countDown = 3;</code>
     *
     * <pre>
     *算牌倒计时
     * </pre>
     */
    public boolean hasCountDown() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 countDown = 3;</code>
     *
     * <pre>
     *算牌倒计时
     * </pre>
     */
    public int getCountDown() {
      return countDown_;
    }

    // required int32 cardNum = 4;
    public static final int CARDNUM_FIELD_NUMBER = 4;
    private int cardNum_;
    /**
     * <code>required int32 cardNum = 4;</code>
     *
     * <pre>
     *发牌数 主要给傍观者
     * </pre>
     */
    public boolean hasCardNum() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 cardNum = 4;</code>
     *
     * <pre>
     *发牌数 主要给傍观者
     * </pre>
     */
    public int getCardNum() {
      return cardNum_;
    }

    private void initFields() {
      cards_ = java.util.Collections.emptyList();
      typed_ = 0;
      countDown_ = 0;
      cardNum_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasCountDown()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCardNum()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < cards_.size(); i++) {
        output.writeInt32(1, cards_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(2, typed_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(3, countDown_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(4, cardNum_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < cards_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(cards_.get(i));
        }
        size += dataSize;
        size += 1 * getCardsList().size();
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, typed_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, countDown_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, cardNum_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static proto.Oxc.PBOXCDealCards parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.Oxc.PBOXCDealCards parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.Oxc.PBOXCDealCards parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.Oxc.PBOXCDealCards parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.Oxc.PBOXCDealCards parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static proto.Oxc.PBOXCDealCards parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static proto.Oxc.PBOXCDealCards parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static proto.Oxc.PBOXCDealCards parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static proto.Oxc.PBOXCDealCards parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static proto.Oxc.PBOXCDealCards parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(proto.Oxc.PBOXCDealCards prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code proto.PBOXCDealCards}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements proto.Oxc.PBOXCDealCardsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return proto.Oxc.internal_static_protobuf_PBOXCDealCards_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return proto.Oxc.internal_static_protobuf_PBOXCDealCards_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                proto.Oxc.PBOXCDealCards.class, proto.Oxc.PBOXCDealCards.Builder.class);
      }

      // Construct using proto.Oxc.PBOXCDealCards.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        cards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        typed_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        countDown_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        cardNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return proto.Oxc.internal_static_protobuf_PBOXCDealCards_descriptor;
      }

      public proto.Oxc.PBOXCDealCards getDefaultInstanceForType() {
        return proto.Oxc.PBOXCDealCards.getDefaultInstance();
      }

      public proto.Oxc.PBOXCDealCards build() {
        proto.Oxc.PBOXCDealCards result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public proto.Oxc.PBOXCDealCards buildPartial() {
        proto.Oxc.PBOXCDealCards result = new proto.Oxc.PBOXCDealCards(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          cards_ = java.util.Collections.unmodifiableList(cards_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.cards_ = cards_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000001;
        }
        result.typed_ = typed_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.countDown_ = countDown_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.cardNum_ = cardNum_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof proto.Oxc.PBOXCDealCards) {
          return mergeFrom((proto.Oxc.PBOXCDealCards)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(proto.Oxc.PBOXCDealCards other) {
        if (other == proto.Oxc.PBOXCDealCards.getDefaultInstance()) return this;
        if (!other.cards_.isEmpty()) {
          if (cards_.isEmpty()) {
            cards_ = other.cards_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureCardsIsMutable();
            cards_.addAll(other.cards_);
          }
          onChanged();
        }
        if (other.hasTyped()) {
          setTyped(other.getTyped());
        }
        if (other.hasCountDown()) {
          setCountDown(other.getCountDown());
        }
        if (other.hasCardNum()) {
          setCardNum(other.getCardNum());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasCountDown()) {
          
          return false;
        }
        if (!hasCardNum()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        proto.Oxc.PBOXCDealCards parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (proto.Oxc.PBOXCDealCards) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated int32 cards = 1;
      private java.util.List<java.lang.Integer> cards_ = java.util.Collections.emptyList();
      private void ensureCardsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          cards_ = new java.util.ArrayList<java.lang.Integer>(cards_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated int32 cards = 1;</code>
       *
       * <pre>
       *发牌 自己牌 旁观者没有
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCardsList() {
        return java.util.Collections.unmodifiableList(cards_);
      }
      /**
       * <code>repeated int32 cards = 1;</code>
       *
       * <pre>
       *发牌 自己牌 旁观者没有
       * </pre>
       */
      public int getCardsCount() {
        return cards_.size();
      }
      /**
       * <code>repeated int32 cards = 1;</code>
       *
       * <pre>
       *发牌 自己牌 旁观者没有
       * </pre>
       */
      public int getCards(int index) {
        return cards_.get(index);
      }
      /**
       * <code>repeated int32 cards = 1;</code>
       *
       * <pre>
       *发牌 自己牌 旁观者没有
       * </pre>
       */
      public Builder setCards(
          int index, int value) {
        ensureCardsIsMutable();
        cards_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards = 1;</code>
       *
       * <pre>
       *发牌 自己牌 旁观者没有
       * </pre>
       */
      public Builder addCards(int value) {
        ensureCardsIsMutable();
        cards_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards = 1;</code>
       *
       * <pre>
       *发牌 自己牌 旁观者没有
       * </pre>
       */
      public Builder addAllCards(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCardsIsMutable();
        super.addAll(values, cards_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards = 1;</code>
       *
       * <pre>
       *发牌 自己牌 旁观者没有
       * </pre>
       */
      public Builder clearCards() {
        cards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      // optional int32 typed = 2;
      private int typed_ ;
      /**
       * <code>optional int32 typed = 2;</code>
       *
       * <pre>
       *牛多少
       * </pre>
       */
      public boolean hasTyped() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 typed = 2;</code>
       *
       * <pre>
       *牛多少
       * </pre>
       */
      public int getTyped() {
        return typed_;
      }
      /**
       * <code>optional int32 typed = 2;</code>
       *
       * <pre>
       *牛多少
       * </pre>
       */
      public Builder setTyped(int value) {
        bitField0_ |= 0x00000002;
        typed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 typed = 2;</code>
       *
       * <pre>
       *牛多少
       * </pre>
       */
      public Builder clearTyped() {
        bitField0_ = (bitField0_ & ~0x00000002);
        typed_ = 0;
        onChanged();
        return this;
      }

      // required int32 countDown = 3;
      private int countDown_ ;
      /**
       * <code>required int32 countDown = 3;</code>
       *
       * <pre>
       *算牌倒计时
       * </pre>
       */
      public boolean hasCountDown() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 countDown = 3;</code>
       *
       * <pre>
       *算牌倒计时
       * </pre>
       */
      public int getCountDown() {
        return countDown_;
      }
      /**
       * <code>required int32 countDown = 3;</code>
       *
       * <pre>
       *算牌倒计时
       * </pre>
       */
      public Builder setCountDown(int value) {
        bitField0_ |= 0x00000004;
        countDown_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 countDown = 3;</code>
       *
       * <pre>
       *算牌倒计时
       * </pre>
       */
      public Builder clearCountDown() {
        bitField0_ = (bitField0_ & ~0x00000004);
        countDown_ = 0;
        onChanged();
        return this;
      }

      // required int32 cardNum = 4;
      private int cardNum_ ;
      /**
       * <code>required int32 cardNum = 4;</code>
       *
       * <pre>
       *发牌数 主要给傍观者
       * </pre>
       */
      public boolean hasCardNum() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int32 cardNum = 4;</code>
       *
       * <pre>
       *发牌数 主要给傍观者
       * </pre>
       */
      public int getCardNum() {
        return cardNum_;
      }
      /**
       * <code>required int32 cardNum = 4;</code>
       *
       * <pre>
       *发牌数 主要给傍观者
       * </pre>
       */
      public Builder setCardNum(int value) {
        bitField0_ |= 0x00000008;
        cardNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 cardNum = 4;</code>
       *
       * <pre>
       *发牌数 主要给傍观者
       * </pre>
       */
      public Builder clearCardNum() {
        bitField0_ = (bitField0_ & ~0x00000008);
        cardNum_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:proto.PBOXCDealCards)
    }

    static {
      defaultInstance = new PBOXCDealCards(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:proto.PBOXCDealCards)
  }

  public interface PBOXCItemResultOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 pos = 1;
    /**
     * <code>required int32 pos = 1;</code>
     *
     * <pre>
     *位置
     * </pre>
     */
    boolean hasPos();
    /**
     * <code>required int32 pos = 1;</code>
     *
     * <pre>
     *位置
     * </pre>
     */
    int getPos();

    // repeated int32 cardsMain = 2;
    /**
     * <code>repeated int32 cardsMain = 2;</code>
     *
     * <pre>
     *牌数据 形成牛的牌 ，五张
     * </pre>
     */
    java.util.List<java.lang.Integer> getCardsMainList();
    /**
     * <code>repeated int32 cardsMain = 2;</code>
     *
     * <pre>
     *牌数据 形成牛的牌 ，五张
     * </pre>
     */
    int getCardsMainCount();
    /**
     * <code>repeated int32 cardsMain = 2;</code>
     *
     * <pre>
     *牌数据 形成牛的牌 ，五张
     * </pre>
     */
    int getCardsMain(int index);

    // repeated int32 cardsAdd = 3;
    /**
     * <code>repeated int32 cardsAdd = 3;</code>
     *
     * <pre>
     *牌数据 配牌， 2张
     * </pre>
     */
    java.util.List<java.lang.Integer> getCardsAddList();
    /**
     * <code>repeated int32 cardsAdd = 3;</code>
     *
     * <pre>
     *牌数据 配牌， 2张
     * </pre>
     */
    int getCardsAddCount();
    /**
     * <code>repeated int32 cardsAdd = 3;</code>
     *
     * <pre>
     *牌数据 配牌， 2张
     * </pre>
     */
    int getCardsAdd(int index);

    // required int32 typed = 4;
    /**
     * <code>required int32 typed = 4;</code>
     *
     * <pre>
     *牌型
     * </pre>
     */
    boolean hasTyped();
    /**
     * <code>required int32 typed = 4;</code>
     *
     * <pre>
     *牌型
     * </pre>
     */
    int getTyped();

    // required int32 winCoin = 5;
    /**
     * <code>required int32 winCoin = 5;</code>
     *
     * <pre>
     *税后 赢钱
     * </pre>
     */
    boolean hasWinCoin();
    /**
     * <code>required int32 winCoin = 5;</code>
     *
     * <pre>
     *税后 赢钱
     * </pre>
     */
    int getWinCoin();
  }
  /**
   * Protobuf type {@code proto.PBOXCItemResult}
   */
  public static final class PBOXCItemResult extends
      com.google.protobuf.GeneratedMessage
      implements PBOXCItemResultOrBuilder {
    // Use PBOXCItemResult.newBuilder() to construct.
    private PBOXCItemResult(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PBOXCItemResult(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PBOXCItemResult defaultInstance;
    public static PBOXCItemResult getDefaultInstance() {
      return defaultInstance;
    }

    public PBOXCItemResult getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PBOXCItemResult(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              pos_ = input.readInt32();
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                cardsMain_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              cardsMain_.add(input.readInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                cardsMain_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                cardsMain_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                cardsAdd_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              cardsAdd_.add(input.readInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                cardsAdd_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                cardsAdd_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 32: {
              bitField0_ |= 0x00000002;
              typed_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000004;
              winCoin_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          cardsMain_ = java.util.Collections.unmodifiableList(cardsMain_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          cardsAdd_ = java.util.Collections.unmodifiableList(cardsAdd_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return proto.Oxc.internal_static_protobuf_PBOXCItemResult_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return proto.Oxc.internal_static_protobuf_PBOXCItemResult_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              proto.Oxc.PBOXCItemResult.class, proto.Oxc.PBOXCItemResult.Builder.class);
    }

    public static com.google.protobuf.Parser<PBOXCItemResult> PARSER =
        new com.google.protobuf.AbstractParser<PBOXCItemResult>() {
      public PBOXCItemResult parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PBOXCItemResult(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PBOXCItemResult> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 pos = 1;
    public static final int POS_FIELD_NUMBER = 1;
    private int pos_;
    /**
     * <code>required int32 pos = 1;</code>
     *
     * <pre>
     *位置
     * </pre>
     */
    public boolean hasPos() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 pos = 1;</code>
     *
     * <pre>
     *位置
     * </pre>
     */
    public int getPos() {
      return pos_;
    }

    // repeated int32 cardsMain = 2;
    public static final int CARDSMAIN_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> cardsMain_;
    /**
     * <code>repeated int32 cardsMain = 2;</code>
     *
     * <pre>
     *牌数据 形成牛的牌 ，五张
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCardsMainList() {
      return cardsMain_;
    }
    /**
     * <code>repeated int32 cardsMain = 2;</code>
     *
     * <pre>
     *牌数据 形成牛的牌 ，五张
     * </pre>
     */
    public int getCardsMainCount() {
      return cardsMain_.size();
    }
    /**
     * <code>repeated int32 cardsMain = 2;</code>
     *
     * <pre>
     *牌数据 形成牛的牌 ，五张
     * </pre>
     */
    public int getCardsMain(int index) {
      return cardsMain_.get(index);
    }

    // repeated int32 cardsAdd = 3;
    public static final int CARDSADD_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> cardsAdd_;
    /**
     * <code>repeated int32 cardsAdd = 3;</code>
     *
     * <pre>
     *牌数据 配牌， 2张
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCardsAddList() {
      return cardsAdd_;
    }
    /**
     * <code>repeated int32 cardsAdd = 3;</code>
     *
     * <pre>
     *牌数据 配牌， 2张
     * </pre>
     */
    public int getCardsAddCount() {
      return cardsAdd_.size();
    }
    /**
     * <code>repeated int32 cardsAdd = 3;</code>
     *
     * <pre>
     *牌数据 配牌， 2张
     * </pre>
     */
    public int getCardsAdd(int index) {
      return cardsAdd_.get(index);
    }

    // required int32 typed = 4;
    public static final int TYPED_FIELD_NUMBER = 4;
    private int typed_;
    /**
     * <code>required int32 typed = 4;</code>
     *
     * <pre>
     *牌型
     * </pre>
     */
    public boolean hasTyped() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 typed = 4;</code>
     *
     * <pre>
     *牌型
     * </pre>
     */
    public int getTyped() {
      return typed_;
    }

    // required int32 winCoin = 5;
    public static final int WINCOIN_FIELD_NUMBER = 5;
    private int winCoin_;
    /**
     * <code>required int32 winCoin = 5;</code>
     *
     * <pre>
     *税后 赢钱
     * </pre>
     */
    public boolean hasWinCoin() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 winCoin = 5;</code>
     *
     * <pre>
     *税后 赢钱
     * </pre>
     */
    public int getWinCoin() {
      return winCoin_;
    }

    private void initFields() {
      pos_ = 0;
      cardsMain_ = java.util.Collections.emptyList();
      cardsAdd_ = java.util.Collections.emptyList();
      typed_ = 0;
      winCoin_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasPos()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTyped()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasWinCoin()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, pos_);
      }
      for (int i = 0; i < cardsMain_.size(); i++) {
        output.writeInt32(2, cardsMain_.get(i));
      }
      for (int i = 0; i < cardsAdd_.size(); i++) {
        output.writeInt32(3, cardsAdd_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(4, typed_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(5, winCoin_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, pos_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cardsMain_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(cardsMain_.get(i));
        }
        size += dataSize;
        size += 1 * getCardsMainList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cardsAdd_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(cardsAdd_.get(i));
        }
        size += dataSize;
        size += 1 * getCardsAddList().size();
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, typed_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, winCoin_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static proto.Oxc.PBOXCItemResult parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.Oxc.PBOXCItemResult parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.Oxc.PBOXCItemResult parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.Oxc.PBOXCItemResult parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.Oxc.PBOXCItemResult parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static proto.Oxc.PBOXCItemResult parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static proto.Oxc.PBOXCItemResult parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static proto.Oxc.PBOXCItemResult parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static proto.Oxc.PBOXCItemResult parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static proto.Oxc.PBOXCItemResult parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(proto.Oxc.PBOXCItemResult prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code proto.PBOXCItemResult}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements proto.Oxc.PBOXCItemResultOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return proto.Oxc.internal_static_protobuf_PBOXCItemResult_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return proto.Oxc.internal_static_protobuf_PBOXCItemResult_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                proto.Oxc.PBOXCItemResult.class, proto.Oxc.PBOXCItemResult.Builder.class);
      }

      // Construct using proto.Oxc.PBOXCItemResult.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        pos_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        cardsMain_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        cardsAdd_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        typed_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        winCoin_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return proto.Oxc.internal_static_protobuf_PBOXCItemResult_descriptor;
      }

      public proto.Oxc.PBOXCItemResult getDefaultInstanceForType() {
        return proto.Oxc.PBOXCItemResult.getDefaultInstance();
      }

      public proto.Oxc.PBOXCItemResult build() {
        proto.Oxc.PBOXCItemResult result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public proto.Oxc.PBOXCItemResult buildPartial() {
        proto.Oxc.PBOXCItemResult result = new proto.Oxc.PBOXCItemResult(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.pos_ = pos_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          cardsMain_ = java.util.Collections.unmodifiableList(cardsMain_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.cardsMain_ = cardsMain_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          cardsAdd_ = java.util.Collections.unmodifiableList(cardsAdd_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.cardsAdd_ = cardsAdd_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000002;
        }
        result.typed_ = typed_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000004;
        }
        result.winCoin_ = winCoin_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof proto.Oxc.PBOXCItemResult) {
          return mergeFrom((proto.Oxc.PBOXCItemResult)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(proto.Oxc.PBOXCItemResult other) {
        if (other == proto.Oxc.PBOXCItemResult.getDefaultInstance()) return this;
        if (other.hasPos()) {
          setPos(other.getPos());
        }
        if (!other.cardsMain_.isEmpty()) {
          if (cardsMain_.isEmpty()) {
            cardsMain_ = other.cardsMain_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureCardsMainIsMutable();
            cardsMain_.addAll(other.cardsMain_);
          }
          onChanged();
        }
        if (!other.cardsAdd_.isEmpty()) {
          if (cardsAdd_.isEmpty()) {
            cardsAdd_ = other.cardsAdd_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureCardsAddIsMutable();
            cardsAdd_.addAll(other.cardsAdd_);
          }
          onChanged();
        }
        if (other.hasTyped()) {
          setTyped(other.getTyped());
        }
        if (other.hasWinCoin()) {
          setWinCoin(other.getWinCoin());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasPos()) {
          
          return false;
        }
        if (!hasTyped()) {
          
          return false;
        }
        if (!hasWinCoin()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        proto.Oxc.PBOXCItemResult parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (proto.Oxc.PBOXCItemResult) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 pos = 1;
      private int pos_ ;
      /**
       * <code>required int32 pos = 1;</code>
       *
       * <pre>
       *位置
       * </pre>
       */
      public boolean hasPos() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 pos = 1;</code>
       *
       * <pre>
       *位置
       * </pre>
       */
      public int getPos() {
        return pos_;
      }
      /**
       * <code>required int32 pos = 1;</code>
       *
       * <pre>
       *位置
       * </pre>
       */
      public Builder setPos(int value) {
        bitField0_ |= 0x00000001;
        pos_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 pos = 1;</code>
       *
       * <pre>
       *位置
       * </pre>
       */
      public Builder clearPos() {
        bitField0_ = (bitField0_ & ~0x00000001);
        pos_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 cardsMain = 2;
      private java.util.List<java.lang.Integer> cardsMain_ = java.util.Collections.emptyList();
      private void ensureCardsMainIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          cardsMain_ = new java.util.ArrayList<java.lang.Integer>(cardsMain_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int32 cardsMain = 2;</code>
       *
       * <pre>
       *牌数据 形成牛的牌 ，五张
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCardsMainList() {
        return java.util.Collections.unmodifiableList(cardsMain_);
      }
      /**
       * <code>repeated int32 cardsMain = 2;</code>
       *
       * <pre>
       *牌数据 形成牛的牌 ，五张
       * </pre>
       */
      public int getCardsMainCount() {
        return cardsMain_.size();
      }
      /**
       * <code>repeated int32 cardsMain = 2;</code>
       *
       * <pre>
       *牌数据 形成牛的牌 ，五张
       * </pre>
       */
      public int getCardsMain(int index) {
        return cardsMain_.get(index);
      }
      /**
       * <code>repeated int32 cardsMain = 2;</code>
       *
       * <pre>
       *牌数据 形成牛的牌 ，五张
       * </pre>
       */
      public Builder setCardsMain(
          int index, int value) {
        ensureCardsMainIsMutable();
        cardsMain_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cardsMain = 2;</code>
       *
       * <pre>
       *牌数据 形成牛的牌 ，五张
       * </pre>
       */
      public Builder addCardsMain(int value) {
        ensureCardsMainIsMutable();
        cardsMain_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cardsMain = 2;</code>
       *
       * <pre>
       *牌数据 形成牛的牌 ，五张
       * </pre>
       */
      public Builder addAllCardsMain(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCardsMainIsMutable();
        super.addAll(values, cardsMain_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cardsMain = 2;</code>
       *
       * <pre>
       *牌数据 形成牛的牌 ，五张
       * </pre>
       */
      public Builder clearCardsMain() {
        cardsMain_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // repeated int32 cardsAdd = 3;
      private java.util.List<java.lang.Integer> cardsAdd_ = java.util.Collections.emptyList();
      private void ensureCardsAddIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          cardsAdd_ = new java.util.ArrayList<java.lang.Integer>(cardsAdd_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated int32 cardsAdd = 3;</code>
       *
       * <pre>
       *牌数据 配牌， 2张
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCardsAddList() {
        return java.util.Collections.unmodifiableList(cardsAdd_);
      }
      /**
       * <code>repeated int32 cardsAdd = 3;</code>
       *
       * <pre>
       *牌数据 配牌， 2张
       * </pre>
       */
      public int getCardsAddCount() {
        return cardsAdd_.size();
      }
      /**
       * <code>repeated int32 cardsAdd = 3;</code>
       *
       * <pre>
       *牌数据 配牌， 2张
       * </pre>
       */
      public int getCardsAdd(int index) {
        return cardsAdd_.get(index);
      }
      /**
       * <code>repeated int32 cardsAdd = 3;</code>
       *
       * <pre>
       *牌数据 配牌， 2张
       * </pre>
       */
      public Builder setCardsAdd(
          int index, int value) {
        ensureCardsAddIsMutable();
        cardsAdd_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cardsAdd = 3;</code>
       *
       * <pre>
       *牌数据 配牌， 2张
       * </pre>
       */
      public Builder addCardsAdd(int value) {
        ensureCardsAddIsMutable();
        cardsAdd_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cardsAdd = 3;</code>
       *
       * <pre>
       *牌数据 配牌， 2张
       * </pre>
       */
      public Builder addAllCardsAdd(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCardsAddIsMutable();
        super.addAll(values, cardsAdd_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cardsAdd = 3;</code>
       *
       * <pre>
       *牌数据 配牌， 2张
       * </pre>
       */
      public Builder clearCardsAdd() {
        cardsAdd_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      // required int32 typed = 4;
      private int typed_ ;
      /**
       * <code>required int32 typed = 4;</code>
       *
       * <pre>
       *牌型
       * </pre>
       */
      public boolean hasTyped() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int32 typed = 4;</code>
       *
       * <pre>
       *牌型
       * </pre>
       */
      public int getTyped() {
        return typed_;
      }
      /**
       * <code>required int32 typed = 4;</code>
       *
       * <pre>
       *牌型
       * </pre>
       */
      public Builder setTyped(int value) {
        bitField0_ |= 0x00000008;
        typed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 typed = 4;</code>
       *
       * <pre>
       *牌型
       * </pre>
       */
      public Builder clearTyped() {
        bitField0_ = (bitField0_ & ~0x00000008);
        typed_ = 0;
        onChanged();
        return this;
      }

      // required int32 winCoin = 5;
      private int winCoin_ ;
      /**
       * <code>required int32 winCoin = 5;</code>
       *
       * <pre>
       *税后 赢钱
       * </pre>
       */
      public boolean hasWinCoin() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required int32 winCoin = 5;</code>
       *
       * <pre>
       *税后 赢钱
       * </pre>
       */
      public int getWinCoin() {
        return winCoin_;
      }
      /**
       * <code>required int32 winCoin = 5;</code>
       *
       * <pre>
       *税后 赢钱
       * </pre>
       */
      public Builder setWinCoin(int value) {
        bitField0_ |= 0x00000010;
        winCoin_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 winCoin = 5;</code>
       *
       * <pre>
       *税后 赢钱
       * </pre>
       */
      public Builder clearWinCoin() {
        bitField0_ = (bitField0_ & ~0x00000010);
        winCoin_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:proto.PBOXCItemResult)
    }

    static {
      defaultInstance = new PBOXCItemResult(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:proto.PBOXCItemResult)
  }

  public interface PBOXCGameEndOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .proto.PBOXCItemResult result = 1;
    /**
     * <code>repeated .proto.PBOXCItemResult result = 1;</code>
     *
     * <pre>
     *结果
     * </pre>
     */
    java.util.List<proto.Oxc.PBOXCItemResult>
        getResultList();
    /**
     * <code>repeated .proto.PBOXCItemResult result = 1;</code>
     *
     * <pre>
     *结果
     * </pre>
     */
    proto.Oxc.PBOXCItemResult getResult(int index);
    /**
     * <code>repeated .proto.PBOXCItemResult result = 1;</code>
     *
     * <pre>
     *结果
     * </pre>
     */
    int getResultCount();
    /**
     * <code>repeated .proto.PBOXCItemResult result = 1;</code>
     *
     * <pre>
     *结果
     * </pre>
     */
    java.util.List<? extends proto.Oxc.PBOXCItemResultOrBuilder>
        getResultOrBuilderList();
    /**
     * <code>repeated .proto.PBOXCItemResult result = 1;</code>
     *
     * <pre>
     *结果
     * </pre>
     */
    proto.Oxc.PBOXCItemResultOrBuilder getResultOrBuilder(
        int index);

    // required int32 countDown = 2;
    /**
     * <code>required int32 countDown = 2;</code>
     *
     * <pre>
     *倒计时
     * </pre>
     */
    boolean hasCountDown();
    /**
     * <code>required int32 countDown = 2;</code>
     *
     * <pre>
     *倒计时
     * </pre>
     */
    int getCountDown();
  }
  /**
   * Protobuf type {@code proto.PBOXCGameEnd}
   */
  public static final class PBOXCGameEnd extends
      com.google.protobuf.GeneratedMessage
      implements PBOXCGameEndOrBuilder {
    // Use PBOXCGameEnd.newBuilder() to construct.
    private PBOXCGameEnd(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PBOXCGameEnd(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PBOXCGameEnd defaultInstance;
    public static PBOXCGameEnd getDefaultInstance() {
      return defaultInstance;
    }

    public PBOXCGameEnd getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PBOXCGameEnd(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                result_ = new java.util.ArrayList<proto.Oxc.PBOXCItemResult>();
                mutable_bitField0_ |= 0x00000001;
              }
              result_.add(input.readMessage(proto.Oxc.PBOXCItemResult.PARSER, extensionRegistry));
              break;
            }
            case 16: {
              bitField0_ |= 0x00000001;
              countDown_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          result_ = java.util.Collections.unmodifiableList(result_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return proto.Oxc.internal_static_protobuf_PBOXCGameEnd_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return proto.Oxc.internal_static_protobuf_PBOXCGameEnd_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              proto.Oxc.PBOXCGameEnd.class, proto.Oxc.PBOXCGameEnd.Builder.class);
    }

    public static com.google.protobuf.Parser<PBOXCGameEnd> PARSER =
        new com.google.protobuf.AbstractParser<PBOXCGameEnd>() {
      public PBOXCGameEnd parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PBOXCGameEnd(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PBOXCGameEnd> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // repeated .proto.PBOXCItemResult result = 1;
    public static final int RESULT_FIELD_NUMBER = 1;
    private java.util.List<proto.Oxc.PBOXCItemResult> result_;
    /**
     * <code>repeated .proto.PBOXCItemResult result = 1;</code>
     *
     * <pre>
     *结果
     * </pre>
     */
    public java.util.List<proto.Oxc.PBOXCItemResult> getResultList() {
      return result_;
    }
    /**
     * <code>repeated .proto.PBOXCItemResult result = 1;</code>
     *
     * <pre>
     *结果
     * </pre>
     */
    public java.util.List<? extends proto.Oxc.PBOXCItemResultOrBuilder>
        getResultOrBuilderList() {
      return result_;
    }
    /**
     * <code>repeated .proto.PBOXCItemResult result = 1;</code>
     *
     * <pre>
     *结果
     * </pre>
     */
    public int getResultCount() {
      return result_.size();
    }
    /**
     * <code>repeated .proto.PBOXCItemResult result = 1;</code>
     *
     * <pre>
     *结果
     * </pre>
     */
    public proto.Oxc.PBOXCItemResult getResult(int index) {
      return result_.get(index);
    }
    /**
     * <code>repeated .proto.PBOXCItemResult result = 1;</code>
     *
     * <pre>
     *结果
     * </pre>
     */
    public proto.Oxc.PBOXCItemResultOrBuilder getResultOrBuilder(
        int index) {
      return result_.get(index);
    }

    // required int32 countDown = 2;
    public static final int COUNTDOWN_FIELD_NUMBER = 2;
    private int countDown_;
    /**
     * <code>required int32 countDown = 2;</code>
     *
     * <pre>
     *倒计时
     * </pre>
     */
    public boolean hasCountDown() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 countDown = 2;</code>
     *
     * <pre>
     *倒计时
     * </pre>
     */
    public int getCountDown() {
      return countDown_;
    }

    private void initFields() {
      result_ = java.util.Collections.emptyList();
      countDown_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasCountDown()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getResultCount(); i++) {
        if (!getResult(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < result_.size(); i++) {
        output.writeMessage(1, result_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(2, countDown_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < result_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, result_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, countDown_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static proto.Oxc.PBOXCGameEnd parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.Oxc.PBOXCGameEnd parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.Oxc.PBOXCGameEnd parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.Oxc.PBOXCGameEnd parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.Oxc.PBOXCGameEnd parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static proto.Oxc.PBOXCGameEnd parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static proto.Oxc.PBOXCGameEnd parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static proto.Oxc.PBOXCGameEnd parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static proto.Oxc.PBOXCGameEnd parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static proto.Oxc.PBOXCGameEnd parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(proto.Oxc.PBOXCGameEnd prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code proto.PBOXCGameEnd}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements proto.Oxc.PBOXCGameEndOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return proto.Oxc.internal_static_protobuf_PBOXCGameEnd_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return proto.Oxc.internal_static_protobuf_PBOXCGameEnd_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                proto.Oxc.PBOXCGameEnd.class, proto.Oxc.PBOXCGameEnd.Builder.class);
      }

      // Construct using proto.Oxc.PBOXCGameEnd.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getResultFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (resultBuilder_ == null) {
          result_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          resultBuilder_.clear();
        }
        countDown_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return proto.Oxc.internal_static_protobuf_PBOXCGameEnd_descriptor;
      }

      public proto.Oxc.PBOXCGameEnd getDefaultInstanceForType() {
        return proto.Oxc.PBOXCGameEnd.getDefaultInstance();
      }

      public proto.Oxc.PBOXCGameEnd build() {
        proto.Oxc.PBOXCGameEnd result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public proto.Oxc.PBOXCGameEnd buildPartial() {
        proto.Oxc.PBOXCGameEnd result = new proto.Oxc.PBOXCGameEnd(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (resultBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            result_ = java.util.Collections.unmodifiableList(result_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.result_ = result_;
        } else {
          result.result_ = resultBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000001;
        }
        result.countDown_ = countDown_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof proto.Oxc.PBOXCGameEnd) {
          return mergeFrom((proto.Oxc.PBOXCGameEnd)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(proto.Oxc.PBOXCGameEnd other) {
        if (other == proto.Oxc.PBOXCGameEnd.getDefaultInstance()) return this;
        if (resultBuilder_ == null) {
          if (!other.result_.isEmpty()) {
            if (result_.isEmpty()) {
              result_ = other.result_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureResultIsMutable();
              result_.addAll(other.result_);
            }
            onChanged();
          }
        } else {
          if (!other.result_.isEmpty()) {
            if (resultBuilder_.isEmpty()) {
              resultBuilder_.dispose();
              resultBuilder_ = null;
              result_ = other.result_;
              bitField0_ = (bitField0_ & ~0x00000001);
              resultBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getResultFieldBuilder() : null;
            } else {
              resultBuilder_.addAllMessages(other.result_);
            }
          }
        }
        if (other.hasCountDown()) {
          setCountDown(other.getCountDown());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasCountDown()) {
          
          return false;
        }
        for (int i = 0; i < getResultCount(); i++) {
          if (!getResult(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        proto.Oxc.PBOXCGameEnd parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (proto.Oxc.PBOXCGameEnd) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .proto.PBOXCItemResult result = 1;
      private java.util.List<proto.Oxc.PBOXCItemResult> result_ =
        java.util.Collections.emptyList();
      private void ensureResultIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          result_ = new java.util.ArrayList<proto.Oxc.PBOXCItemResult>(result_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          proto.Oxc.PBOXCItemResult, proto.Oxc.PBOXCItemResult.Builder, proto.Oxc.PBOXCItemResultOrBuilder> resultBuilder_;

      /**
       * <code>repeated .proto.PBOXCItemResult result = 1;</code>
       *
       * <pre>
       *结果
       * </pre>
       */
      public java.util.List<proto.Oxc.PBOXCItemResult> getResultList() {
        if (resultBuilder_ == null) {
          return java.util.Collections.unmodifiableList(result_);
        } else {
          return resultBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .proto.PBOXCItemResult result = 1;</code>
       *
       * <pre>
       *结果
       * </pre>
       */
      public int getResultCount() {
        if (resultBuilder_ == null) {
          return result_.size();
        } else {
          return resultBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .proto.PBOXCItemResult result = 1;</code>
       *
       * <pre>
       *结果
       * </pre>
       */
      public proto.Oxc.PBOXCItemResult getResult(int index) {
        if (resultBuilder_ == null) {
          return result_.get(index);
        } else {
          return resultBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .proto.PBOXCItemResult result = 1;</code>
       *
       * <pre>
       *结果
       * </pre>
       */
      public Builder setResult(
			  int index, proto.Oxc.PBOXCItemResult value) {
        if (resultBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureResultIsMutable();
          result_.set(index, value);
          onChanged();
        } else {
          resultBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .proto.PBOXCItemResult result = 1;</code>
       *
       * <pre>
       *结果
       * </pre>
       */
      public Builder setResult(
			  int index, proto.Oxc.PBOXCItemResult.Builder builderForValue) {
        if (resultBuilder_ == null) {
          ensureResultIsMutable();
          result_.set(index, builderForValue.build());
          onChanged();
        } else {
          resultBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .proto.PBOXCItemResult result = 1;</code>
       *
       * <pre>
       *结果
       * </pre>
       */
      public Builder addResult(proto.Oxc.PBOXCItemResult value) {
        if (resultBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureResultIsMutable();
          result_.add(value);
          onChanged();
        } else {
          resultBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .proto.PBOXCItemResult result = 1;</code>
       *
       * <pre>
       *结果
       * </pre>
       */
      public Builder addResult(
			  int index, proto.Oxc.PBOXCItemResult value) {
        if (resultBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureResultIsMutable();
          result_.add(index, value);
          onChanged();
        } else {
          resultBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .proto.PBOXCItemResult result = 1;</code>
       *
       * <pre>
       *结果
       * </pre>
       */
      public Builder addResult(
			  proto.Oxc.PBOXCItemResult.Builder builderForValue) {
        if (resultBuilder_ == null) {
          ensureResultIsMutable();
          result_.add(builderForValue.build());
          onChanged();
        } else {
          resultBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .proto.PBOXCItemResult result = 1;</code>
       *
       * <pre>
       *结果
       * </pre>
       */
      public Builder addResult(
			  int index, proto.Oxc.PBOXCItemResult.Builder builderForValue) {
        if (resultBuilder_ == null) {
          ensureResultIsMutable();
          result_.add(index, builderForValue.build());
          onChanged();
        } else {
          resultBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .proto.PBOXCItemResult result = 1;</code>
       *
       * <pre>
       *结果
       * </pre>
       */
      public Builder addAllResult(
          java.lang.Iterable<? extends proto.Oxc.PBOXCItemResult> values) {
        if (resultBuilder_ == null) {
          ensureResultIsMutable();
          super.addAll(values, result_);
          onChanged();
        } else {
          resultBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .proto.PBOXCItemResult result = 1;</code>
       *
       * <pre>
       *结果
       * </pre>
       */
      public Builder clearResult() {
        if (resultBuilder_ == null) {
          result_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          resultBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .proto.PBOXCItemResult result = 1;</code>
       *
       * <pre>
       *结果
       * </pre>
       */
      public Builder removeResult(int index) {
        if (resultBuilder_ == null) {
          ensureResultIsMutable();
          result_.remove(index);
          onChanged();
        } else {
          resultBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .proto.PBOXCItemResult result = 1;</code>
       *
       * <pre>
       *结果
       * </pre>
       */
      public proto.Oxc.PBOXCItemResult.Builder getResultBuilder(
          int index) {
        return getResultFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .proto.PBOXCItemResult result = 1;</code>
       *
       * <pre>
       *结果
       * </pre>
       */
      public proto.Oxc.PBOXCItemResultOrBuilder getResultOrBuilder(
          int index) {
        if (resultBuilder_ == null) {
          return result_.get(index);  } else {
          return resultBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .proto.PBOXCItemResult result = 1;</code>
       *
       * <pre>
       *结果
       * </pre>
       */
      public java.util.List<? extends proto.Oxc.PBOXCItemResultOrBuilder>
           getResultOrBuilderList() {
        if (resultBuilder_ != null) {
          return resultBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(result_);
        }
      }
      /**
       * <code>repeated .proto.PBOXCItemResult result = 1;</code>
       *
       * <pre>
       *结果
       * </pre>
       */
      public proto.Oxc.PBOXCItemResult.Builder addResultBuilder() {
        return getResultFieldBuilder().addBuilder(
            proto.Oxc.PBOXCItemResult.getDefaultInstance());
      }
      /**
       * <code>repeated .proto.PBOXCItemResult result = 1;</code>
       *
       * <pre>
       *结果
       * </pre>
       */
      public proto.Oxc.PBOXCItemResult.Builder addResultBuilder(
          int index) {
        return getResultFieldBuilder().addBuilder(
            index, proto.Oxc.PBOXCItemResult.getDefaultInstance());
      }
      /**
       * <code>repeated .proto.PBOXCItemResult result = 1;</code>
       *
       * <pre>
       *结果
       * </pre>
       */
      public java.util.List<proto.Oxc.PBOXCItemResult.Builder>
           getResultBuilderList() {
        return getResultFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          proto.Oxc.PBOXCItemResult, proto.Oxc.PBOXCItemResult.Builder, proto.Oxc.PBOXCItemResultOrBuilder>
          getResultFieldBuilder() {
        if (resultBuilder_ == null) {
          resultBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              proto.Oxc.PBOXCItemResult, proto.Oxc.PBOXCItemResult.Builder, proto.Oxc.PBOXCItemResultOrBuilder>(
                  result_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          result_ = null;
        }
        return resultBuilder_;
      }

      // required int32 countDown = 2;
      private int countDown_ ;
      /**
       * <code>required int32 countDown = 2;</code>
       *
       * <pre>
       *倒计时
       * </pre>
       */
      public boolean hasCountDown() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 countDown = 2;</code>
       *
       * <pre>
       *倒计时
       * </pre>
       */
      public int getCountDown() {
        return countDown_;
      }
      /**
       * <code>required int32 countDown = 2;</code>
       *
       * <pre>
       *倒计时
       * </pre>
       */
      public Builder setCountDown(int value) {
        bitField0_ |= 0x00000002;
        countDown_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 countDown = 2;</code>
       *
       * <pre>
       *倒计时
       * </pre>
       */
      public Builder clearCountDown() {
        bitField0_ = (bitField0_ & ~0x00000002);
        countDown_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:proto.PBOXCGameEnd)
    }

    static {
      defaultInstance = new PBOXCGameEnd(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:proto.PBOXCGameEnd)
  }

  public interface PBOXCDeskInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required .proto.PBPlayerInfoList player_list = 1;
    /**
     * <code>required .proto.PBPlayerInfoList player_list = 1;</code>
     *
     * <pre>
     *所有玩家的信息
     * </pre>
     */
    boolean hasPlayerList();
    /**
     * <code>required .proto.PBPlayerInfoList player_list = 1;</code>
     *
     * <pre>
     *所有玩家的信息
     * </pre>
     */
    proto.Common.PBPlayerInfoList getPlayerList();
    /**
     * <code>required .proto.PBPlayerInfoList player_list = 1;</code>
     *
     * <pre>
     *所有玩家的信息
     * </pre>
     */
    proto.Common.PBPlayerInfoListOrBuilder getPlayerListOrBuilder();

    // required int32 roomId = 2;
    /**
     * <code>required int32 roomId = 2;</code>
     *
     * <pre>
     *房间号
     * </pre>
     */
    boolean hasRoomId();
    /**
     * <code>required int32 roomId = 2;</code>
     *
     * <pre>
     *房间号
     * </pre>
     */
    int getRoomId();

    // required int32 gameState = 3;
    /**
     * <code>required int32 gameState = 3;</code>
     *
     * <pre>
     *当前游戏状态0创建桌后等待，1检测是否开始一局游戏，2发四张牌，3抢庄，4下注，5发最后一张，6玩家算牌，7等待下一局
     * </pre>
     */
    boolean hasGameState();
    /**
     * <code>required int32 gameState = 3;</code>
     *
     * <pre>
     *当前游戏状态0创建桌后等待，1检测是否开始一局游戏，2发四张牌，3抢庄，4下注，5发最后一张，6玩家算牌，7等待下一局
     * </pre>
     */
    int getGameState();

    // required int32 remainTime = 4;
    /**
     * <code>required int32 remainTime = 4;</code>
     *
     * <pre>
     *剩余倒计时
     * </pre>
     */
    boolean hasRemainTime();
    /**
     * <code>required int32 remainTime = 4;</code>
     *
     * <pre>
     *剩余倒计时
     * </pre>
     */
    int getRemainTime();

    // repeated .proto.PBOXCPlayerDeskInfo playerDeskInfo = 5;
    /**
     * <code>repeated .proto.PBOXCPlayerDeskInfo playerDeskInfo = 5;</code>
     *
     * <pre>
     *桌上牌面信息
     * </pre>
     */
    java.util.List<proto.Oxc.PBOXCPlayerDeskInfo>
        getPlayerDeskInfoList();
    /**
     * <code>repeated .proto.PBOXCPlayerDeskInfo playerDeskInfo = 5;</code>
     *
     * <pre>
     *桌上牌面信息
     * </pre>
     */
    proto.Oxc.PBOXCPlayerDeskInfo getPlayerDeskInfo(int index);
    /**
     * <code>repeated .proto.PBOXCPlayerDeskInfo playerDeskInfo = 5;</code>
     *
     * <pre>
     *桌上牌面信息
     * </pre>
     */
    int getPlayerDeskInfoCount();
    /**
     * <code>repeated .proto.PBOXCPlayerDeskInfo playerDeskInfo = 5;</code>
     *
     * <pre>
     *桌上牌面信息
     * </pre>
     */
    java.util.List<? extends proto.Oxc.PBOXCPlayerDeskInfoOrBuilder>
        getPlayerDeskInfoOrBuilderList();
    /**
     * <code>repeated .proto.PBOXCPlayerDeskInfo playerDeskInfo = 5;</code>
     *
     * <pre>
     *桌上牌面信息
     * </pre>
     */
    proto.Oxc.PBOXCPlayerDeskInfoOrBuilder getPlayerDeskInfoOrBuilder(
        int index);

    // required int32 round = 6;
    /**
     * <code>required int32 round = 6;</code>
     *
     * <pre>
     *当前多少局
     * </pre>
     */
    boolean hasRound();
    /**
     * <code>required int32 round = 6;</code>
     *
     * <pre>
     *当前多少局
     * </pre>
     */
    int getRound();
  }
  /**
   * Protobuf type {@code proto.PBOXCDeskInfo}
   */
  public static final class PBOXCDeskInfo extends
      com.google.protobuf.GeneratedMessage
      implements PBOXCDeskInfoOrBuilder {
    // Use PBOXCDeskInfo.newBuilder() to construct.
    private PBOXCDeskInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PBOXCDeskInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PBOXCDeskInfo defaultInstance;
    public static PBOXCDeskInfo getDefaultInstance() {
      return defaultInstance;
    }

    public PBOXCDeskInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PBOXCDeskInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              proto.Common.PBPlayerInfoList.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = playerList_.toBuilder();
              }
              playerList_ = input.readMessage(proto.Common.PBPlayerInfoList.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(playerList_);
                playerList_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              roomId_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              gameState_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              remainTime_ = input.readInt32();
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                playerDeskInfo_ = new java.util.ArrayList<proto.Oxc.PBOXCPlayerDeskInfo>();
                mutable_bitField0_ |= 0x00000010;
              }
              playerDeskInfo_.add(input.readMessage(proto.Oxc.PBOXCPlayerDeskInfo.PARSER, extensionRegistry));
              break;
            }
            case 48: {
              bitField0_ |= 0x00000010;
              round_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          playerDeskInfo_ = java.util.Collections.unmodifiableList(playerDeskInfo_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return proto.Oxc.internal_static_protobuf_PBOXCDeskInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return proto.Oxc.internal_static_protobuf_PBOXCDeskInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              proto.Oxc.PBOXCDeskInfo.class, proto.Oxc.PBOXCDeskInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<PBOXCDeskInfo> PARSER =
        new com.google.protobuf.AbstractParser<PBOXCDeskInfo>() {
      public PBOXCDeskInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PBOXCDeskInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PBOXCDeskInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required .proto.PBPlayerInfoList player_list = 1;
    public static final int PLAYER_LIST_FIELD_NUMBER = 1;
    private proto.Common.PBPlayerInfoList playerList_;
    /**
     * <code>required .proto.PBPlayerInfoList player_list = 1;</code>
     *
     * <pre>
     *所有玩家的信息
     * </pre>
     */
    public boolean hasPlayerList() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .proto.PBPlayerInfoList player_list = 1;</code>
     *
     * <pre>
     *所有玩家的信息
     * </pre>
     */
    public proto.Common.PBPlayerInfoList getPlayerList() {
      return playerList_;
    }
    /**
     * <code>required .proto.PBPlayerInfoList player_list = 1;</code>
     *
     * <pre>
     *所有玩家的信息
     * </pre>
     */
    public proto.Common.PBPlayerInfoListOrBuilder getPlayerListOrBuilder() {
      return playerList_;
    }

    // required int32 roomId = 2;
    public static final int ROOMID_FIELD_NUMBER = 2;
    private int roomId_;
    /**
     * <code>required int32 roomId = 2;</code>
     *
     * <pre>
     *房间号
     * </pre>
     */
    public boolean hasRoomId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 roomId = 2;</code>
     *
     * <pre>
     *房间号
     * </pre>
     */
    public int getRoomId() {
      return roomId_;
    }

    // required int32 gameState = 3;
    public static final int GAMESTATE_FIELD_NUMBER = 3;
    private int gameState_;
    /**
     * <code>required int32 gameState = 3;</code>
     *
     * <pre>
     *当前游戏状态0创建桌后等待，1检测是否开始一局游戏，2发四张牌，3抢庄，4下注，5发最后一张，6玩家算牌，7等待下一局
     * </pre>
     */
    public boolean hasGameState() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 gameState = 3;</code>
     *
     * <pre>
     *当前游戏状态0创建桌后等待，1检测是否开始一局游戏，2发四张牌，3抢庄，4下注，5发最后一张，6玩家算牌，7等待下一局
     * </pre>
     */
    public int getGameState() {
      return gameState_;
    }

    // required int32 remainTime = 4;
    public static final int REMAINTIME_FIELD_NUMBER = 4;
    private int remainTime_;
    /**
     * <code>required int32 remainTime = 4;</code>
     *
     * <pre>
     *剩余倒计时
     * </pre>
     */
    public boolean hasRemainTime() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int32 remainTime = 4;</code>
     *
     * <pre>
     *剩余倒计时
     * </pre>
     */
    public int getRemainTime() {
      return remainTime_;
    }

    // repeated .proto.PBOXCPlayerDeskInfo playerDeskInfo = 5;
    public static final int PLAYERDESKINFO_FIELD_NUMBER = 5;
    private java.util.List<proto.Oxc.PBOXCPlayerDeskInfo> playerDeskInfo_;
    /**
     * <code>repeated .proto.PBOXCPlayerDeskInfo playerDeskInfo = 5;</code>
     *
     * <pre>
     *桌上牌面信息
     * </pre>
     */
    public java.util.List<proto.Oxc.PBOXCPlayerDeskInfo> getPlayerDeskInfoList() {
      return playerDeskInfo_;
    }
    /**
     * <code>repeated .proto.PBOXCPlayerDeskInfo playerDeskInfo = 5;</code>
     *
     * <pre>
     *桌上牌面信息
     * </pre>
     */
    public java.util.List<? extends proto.Oxc.PBOXCPlayerDeskInfoOrBuilder>
        getPlayerDeskInfoOrBuilderList() {
      return playerDeskInfo_;
    }
    /**
     * <code>repeated .proto.PBOXCPlayerDeskInfo playerDeskInfo = 5;</code>
     *
     * <pre>
     *桌上牌面信息
     * </pre>
     */
    public int getPlayerDeskInfoCount() {
      return playerDeskInfo_.size();
    }
    /**
     * <code>repeated .proto.PBOXCPlayerDeskInfo playerDeskInfo = 5;</code>
     *
     * <pre>
     *桌上牌面信息
     * </pre>
     */
    public proto.Oxc.PBOXCPlayerDeskInfo getPlayerDeskInfo(int index) {
      return playerDeskInfo_.get(index);
    }
    /**
     * <code>repeated .proto.PBOXCPlayerDeskInfo playerDeskInfo = 5;</code>
     *
     * <pre>
     *桌上牌面信息
     * </pre>
     */
    public proto.Oxc.PBOXCPlayerDeskInfoOrBuilder getPlayerDeskInfoOrBuilder(
        int index) {
      return playerDeskInfo_.get(index);
    }

    // required int32 round = 6;
    public static final int ROUND_FIELD_NUMBER = 6;
    private int round_;
    /**
     * <code>required int32 round = 6;</code>
     *
     * <pre>
     *当前多少局
     * </pre>
     */
    public boolean hasRound() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int32 round = 6;</code>
     *
     * <pre>
     *当前多少局
     * </pre>
     */
    public int getRound() {
      return round_;
    }

    private void initFields() {
      playerList_ = proto.Common.PBPlayerInfoList.getDefaultInstance();
      roomId_ = 0;
      gameState_ = 0;
      remainTime_ = 0;
      playerDeskInfo_ = java.util.Collections.emptyList();
      round_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasPlayerList()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRoomId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasGameState()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRemainTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRound()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getPlayerList().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getPlayerDeskInfoCount(); i++) {
        if (!getPlayerDeskInfo(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, playerList_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, roomId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, gameState_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, remainTime_);
      }
      for (int i = 0; i < playerDeskInfo_.size(); i++) {
        output.writeMessage(5, playerDeskInfo_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(6, round_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, playerList_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, roomId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, gameState_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, remainTime_);
      }
      for (int i = 0; i < playerDeskInfo_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, playerDeskInfo_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, round_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static proto.Oxc.PBOXCDeskInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.Oxc.PBOXCDeskInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.Oxc.PBOXCDeskInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.Oxc.PBOXCDeskInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.Oxc.PBOXCDeskInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static proto.Oxc.PBOXCDeskInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static proto.Oxc.PBOXCDeskInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static proto.Oxc.PBOXCDeskInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static proto.Oxc.PBOXCDeskInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static proto.Oxc.PBOXCDeskInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(proto.Oxc.PBOXCDeskInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code proto.PBOXCDeskInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements proto.Oxc.PBOXCDeskInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return proto.Oxc.internal_static_protobuf_PBOXCDeskInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return proto.Oxc.internal_static_protobuf_PBOXCDeskInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                proto.Oxc.PBOXCDeskInfo.class, proto.Oxc.PBOXCDeskInfo.Builder.class);
      }

      // Construct using proto.Oxc.PBOXCDeskInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getPlayerListFieldBuilder();
          getPlayerDeskInfoFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (playerListBuilder_ == null) {
          playerList_ = proto.Common.PBPlayerInfoList.getDefaultInstance();
        } else {
          playerListBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        roomId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        gameState_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        remainTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        if (playerDeskInfoBuilder_ == null) {
          playerDeskInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          playerDeskInfoBuilder_.clear();
        }
        round_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return proto.Oxc.internal_static_protobuf_PBOXCDeskInfo_descriptor;
      }

      public proto.Oxc.PBOXCDeskInfo getDefaultInstanceForType() {
        return proto.Oxc.PBOXCDeskInfo.getDefaultInstance();
      }

      public proto.Oxc.PBOXCDeskInfo build() {
        proto.Oxc.PBOXCDeskInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public proto.Oxc.PBOXCDeskInfo buildPartial() {
        proto.Oxc.PBOXCDeskInfo result = new proto.Oxc.PBOXCDeskInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (playerListBuilder_ == null) {
          result.playerList_ = playerList_;
        } else {
          result.playerList_ = playerListBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.roomId_ = roomId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.gameState_ = gameState_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.remainTime_ = remainTime_;
        if (playerDeskInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            playerDeskInfo_ = java.util.Collections.unmodifiableList(playerDeskInfo_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.playerDeskInfo_ = playerDeskInfo_;
        } else {
          result.playerDeskInfo_ = playerDeskInfoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.round_ = round_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof proto.Oxc.PBOXCDeskInfo) {
          return mergeFrom((proto.Oxc.PBOXCDeskInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(proto.Oxc.PBOXCDeskInfo other) {
        if (other == proto.Oxc.PBOXCDeskInfo.getDefaultInstance()) return this;
        if (other.hasPlayerList()) {
          mergePlayerList(other.getPlayerList());
        }
        if (other.hasRoomId()) {
          setRoomId(other.getRoomId());
        }
        if (other.hasGameState()) {
          setGameState(other.getGameState());
        }
        if (other.hasRemainTime()) {
          setRemainTime(other.getRemainTime());
        }
        if (playerDeskInfoBuilder_ == null) {
          if (!other.playerDeskInfo_.isEmpty()) {
            if (playerDeskInfo_.isEmpty()) {
              playerDeskInfo_ = other.playerDeskInfo_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensurePlayerDeskInfoIsMutable();
              playerDeskInfo_.addAll(other.playerDeskInfo_);
            }
            onChanged();
          }
        } else {
          if (!other.playerDeskInfo_.isEmpty()) {
            if (playerDeskInfoBuilder_.isEmpty()) {
              playerDeskInfoBuilder_.dispose();
              playerDeskInfoBuilder_ = null;
              playerDeskInfo_ = other.playerDeskInfo_;
              bitField0_ = (bitField0_ & ~0x00000010);
              playerDeskInfoBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPlayerDeskInfoFieldBuilder() : null;
            } else {
              playerDeskInfoBuilder_.addAllMessages(other.playerDeskInfo_);
            }
          }
        }
        if (other.hasRound()) {
          setRound(other.getRound());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasPlayerList()) {
          
          return false;
        }
        if (!hasRoomId()) {
          
          return false;
        }
        if (!hasGameState()) {
          
          return false;
        }
        if (!hasRemainTime()) {
          
          return false;
        }
        if (!hasRound()) {
          
          return false;
        }
        if (!getPlayerList().isInitialized()) {
          
          return false;
        }
        for (int i = 0; i < getPlayerDeskInfoCount(); i++) {
          if (!getPlayerDeskInfo(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        proto.Oxc.PBOXCDeskInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (proto.Oxc.PBOXCDeskInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required .proto.PBPlayerInfoList player_list = 1;
      private proto.Common.PBPlayerInfoList playerList_ = proto.Common.PBPlayerInfoList.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          proto.Common.PBPlayerInfoList, proto.Common.PBPlayerInfoList.Builder, proto.Common.PBPlayerInfoListOrBuilder> playerListBuilder_;
      /**
       * <code>required .proto.PBPlayerInfoList player_list = 1;</code>
       *
       * <pre>
       *所有玩家的信息
       * </pre>
       */
      public boolean hasPlayerList() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .proto.PBPlayerInfoList player_list = 1;</code>
       *
       * <pre>
       *所有玩家的信息
       * </pre>
       */
      public proto.Common.PBPlayerInfoList getPlayerList() {
        if (playerListBuilder_ == null) {
          return playerList_;
        } else {
          return playerListBuilder_.getMessage();
        }
      }
      /**
       * <code>required .proto.PBPlayerInfoList player_list = 1;</code>
       *
       * <pre>
       *所有玩家的信息
       * </pre>
       */
      public Builder setPlayerList(proto.Common.PBPlayerInfoList value) {
        if (playerListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          playerList_ = value;
          onChanged();
        } else {
          playerListBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .proto.PBPlayerInfoList player_list = 1;</code>
       *
       * <pre>
       *所有玩家的信息
       * </pre>
       */
      public Builder setPlayerList(
			  proto.Common.PBPlayerInfoList.Builder builderForValue) {
        if (playerListBuilder_ == null) {
          playerList_ = builderForValue.build();
          onChanged();
        } else {
          playerListBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .proto.PBPlayerInfoList player_list = 1;</code>
       *
       * <pre>
       *所有玩家的信息
       * </pre>
       */
      public Builder mergePlayerList(proto.Common.PBPlayerInfoList value) {
        if (playerListBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              playerList_ != proto.Common.PBPlayerInfoList.getDefaultInstance()) {
            playerList_ =
              proto.Common.PBPlayerInfoList.newBuilder(playerList_).mergeFrom(value).buildPartial();
          } else {
            playerList_ = value;
          }
          onChanged();
        } else {
          playerListBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .proto.PBPlayerInfoList player_list = 1;</code>
       *
       * <pre>
       *所有玩家的信息
       * </pre>
       */
      public Builder clearPlayerList() {
        if (playerListBuilder_ == null) {
          playerList_ = proto.Common.PBPlayerInfoList.getDefaultInstance();
          onChanged();
        } else {
          playerListBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>required .proto.PBPlayerInfoList player_list = 1;</code>
       *
       * <pre>
       *所有玩家的信息
       * </pre>
       */
      public proto.Common.PBPlayerInfoList.Builder getPlayerListBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getPlayerListFieldBuilder().getBuilder();
      }
      /**
       * <code>required .proto.PBPlayerInfoList player_list = 1;</code>
       *
       * <pre>
       *所有玩家的信息
       * </pre>
       */
      public proto.Common.PBPlayerInfoListOrBuilder getPlayerListOrBuilder() {
        if (playerListBuilder_ != null) {
          return playerListBuilder_.getMessageOrBuilder();
        } else {
          return playerList_;
        }
      }
      /**
       * <code>required .proto.PBPlayerInfoList player_list = 1;</code>
       *
       * <pre>
       *所有玩家的信息
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          proto.Common.PBPlayerInfoList, proto.Common.PBPlayerInfoList.Builder, proto.Common.PBPlayerInfoListOrBuilder>
          getPlayerListFieldBuilder() {
        if (playerListBuilder_ == null) {
          playerListBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              proto.Common.PBPlayerInfoList, proto.Common.PBPlayerInfoList.Builder, proto.Common.PBPlayerInfoListOrBuilder>(
                  playerList_,
                  getParentForChildren(),
                  isClean());
          playerList_ = null;
        }
        return playerListBuilder_;
      }

      // required int32 roomId = 2;
      private int roomId_ ;
      /**
       * <code>required int32 roomId = 2;</code>
       *
       * <pre>
       *房间号
       * </pre>
       */
      public boolean hasRoomId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 roomId = 2;</code>
       *
       * <pre>
       *房间号
       * </pre>
       */
      public int getRoomId() {
        return roomId_;
      }
      /**
       * <code>required int32 roomId = 2;</code>
       *
       * <pre>
       *房间号
       * </pre>
       */
      public Builder setRoomId(int value) {
        bitField0_ |= 0x00000002;
        roomId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 roomId = 2;</code>
       *
       * <pre>
       *房间号
       * </pre>
       */
      public Builder clearRoomId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        roomId_ = 0;
        onChanged();
        return this;
      }

      // required int32 gameState = 3;
      private int gameState_ ;
      /**
       * <code>required int32 gameState = 3;</code>
       *
       * <pre>
       *当前游戏状态0创建桌后等待，1检测是否开始一局游戏，2发四张牌，3抢庄，4下注，5发最后一张，6玩家算牌，7等待下一局
       * </pre>
       */
      public boolean hasGameState() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 gameState = 3;</code>
       *
       * <pre>
       *当前游戏状态0创建桌后等待，1检测是否开始一局游戏，2发四张牌，3抢庄，4下注，5发最后一张，6玩家算牌，7等待下一局
       * </pre>
       */
      public int getGameState() {
        return gameState_;
      }
      /**
       * <code>required int32 gameState = 3;</code>
       *
       * <pre>
       *当前游戏状态0创建桌后等待，1检测是否开始一局游戏，2发四张牌，3抢庄，4下注，5发最后一张，6玩家算牌，7等待下一局
       * </pre>
       */
      public Builder setGameState(int value) {
        bitField0_ |= 0x00000004;
        gameState_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 gameState = 3;</code>
       *
       * <pre>
       *当前游戏状态0创建桌后等待，1检测是否开始一局游戏，2发四张牌，3抢庄，4下注，5发最后一张，6玩家算牌，7等待下一局
       * </pre>
       */
      public Builder clearGameState() {
        bitField0_ = (bitField0_ & ~0x00000004);
        gameState_ = 0;
        onChanged();
        return this;
      }

      // required int32 remainTime = 4;
      private int remainTime_ ;
      /**
       * <code>required int32 remainTime = 4;</code>
       *
       * <pre>
       *剩余倒计时
       * </pre>
       */
      public boolean hasRemainTime() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int32 remainTime = 4;</code>
       *
       * <pre>
       *剩余倒计时
       * </pre>
       */
      public int getRemainTime() {
        return remainTime_;
      }
      /**
       * <code>required int32 remainTime = 4;</code>
       *
       * <pre>
       *剩余倒计时
       * </pre>
       */
      public Builder setRemainTime(int value) {
        bitField0_ |= 0x00000008;
        remainTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 remainTime = 4;</code>
       *
       * <pre>
       *剩余倒计时
       * </pre>
       */
      public Builder clearRemainTime() {
        bitField0_ = (bitField0_ & ~0x00000008);
        remainTime_ = 0;
        onChanged();
        return this;
      }

      // repeated .proto.PBOXCPlayerDeskInfo playerDeskInfo = 5;
      private java.util.List<proto.Oxc.PBOXCPlayerDeskInfo> playerDeskInfo_ =
        java.util.Collections.emptyList();
      private void ensurePlayerDeskInfoIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          playerDeskInfo_ = new java.util.ArrayList<proto.Oxc.PBOXCPlayerDeskInfo>(playerDeskInfo_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          proto.Oxc.PBOXCPlayerDeskInfo, proto.Oxc.PBOXCPlayerDeskInfo.Builder, proto.Oxc.PBOXCPlayerDeskInfoOrBuilder> playerDeskInfoBuilder_;

      /**
       * <code>repeated .proto.PBOXCPlayerDeskInfo playerDeskInfo = 5;</code>
       *
       * <pre>
       *桌上牌面信息
       * </pre>
       */
      public java.util.List<proto.Oxc.PBOXCPlayerDeskInfo> getPlayerDeskInfoList() {
        if (playerDeskInfoBuilder_ == null) {
          return java.util.Collections.unmodifiableList(playerDeskInfo_);
        } else {
          return playerDeskInfoBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .proto.PBOXCPlayerDeskInfo playerDeskInfo = 5;</code>
       *
       * <pre>
       *桌上牌面信息
       * </pre>
       */
      public int getPlayerDeskInfoCount() {
        if (playerDeskInfoBuilder_ == null) {
          return playerDeskInfo_.size();
        } else {
          return playerDeskInfoBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .proto.PBOXCPlayerDeskInfo playerDeskInfo = 5;</code>
       *
       * <pre>
       *桌上牌面信息
       * </pre>
       */
      public proto.Oxc.PBOXCPlayerDeskInfo getPlayerDeskInfo(int index) {
        if (playerDeskInfoBuilder_ == null) {
          return playerDeskInfo_.get(index);
        } else {
          return playerDeskInfoBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .proto.PBOXCPlayerDeskInfo playerDeskInfo = 5;</code>
       *
       * <pre>
       *桌上牌面信息
       * </pre>
       */
      public Builder setPlayerDeskInfo(
			  int index, proto.Oxc.PBOXCPlayerDeskInfo value) {
        if (playerDeskInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayerDeskInfoIsMutable();
          playerDeskInfo_.set(index, value);
          onChanged();
        } else {
          playerDeskInfoBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .proto.PBOXCPlayerDeskInfo playerDeskInfo = 5;</code>
       *
       * <pre>
       *桌上牌面信息
       * </pre>
       */
      public Builder setPlayerDeskInfo(
			  int index, proto.Oxc.PBOXCPlayerDeskInfo.Builder builderForValue) {
        if (playerDeskInfoBuilder_ == null) {
          ensurePlayerDeskInfoIsMutable();
          playerDeskInfo_.set(index, builderForValue.build());
          onChanged();
        } else {
          playerDeskInfoBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .proto.PBOXCPlayerDeskInfo playerDeskInfo = 5;</code>
       *
       * <pre>
       *桌上牌面信息
       * </pre>
       */
      public Builder addPlayerDeskInfo(proto.Oxc.PBOXCPlayerDeskInfo value) {
        if (playerDeskInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayerDeskInfoIsMutable();
          playerDeskInfo_.add(value);
          onChanged();
        } else {
          playerDeskInfoBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .proto.PBOXCPlayerDeskInfo playerDeskInfo = 5;</code>
       *
       * <pre>
       *桌上牌面信息
       * </pre>
       */
      public Builder addPlayerDeskInfo(
			  int index, proto.Oxc.PBOXCPlayerDeskInfo value) {
        if (playerDeskInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayerDeskInfoIsMutable();
          playerDeskInfo_.add(index, value);
          onChanged();
        } else {
          playerDeskInfoBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .proto.PBOXCPlayerDeskInfo playerDeskInfo = 5;</code>
       *
       * <pre>
       *桌上牌面信息
       * </pre>
       */
      public Builder addPlayerDeskInfo(
			  proto.Oxc.PBOXCPlayerDeskInfo.Builder builderForValue) {
        if (playerDeskInfoBuilder_ == null) {
          ensurePlayerDeskInfoIsMutable();
          playerDeskInfo_.add(builderForValue.build());
          onChanged();
        } else {
          playerDeskInfoBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .proto.PBOXCPlayerDeskInfo playerDeskInfo = 5;</code>
       *
       * <pre>
       *桌上牌面信息
       * </pre>
       */
      public Builder addPlayerDeskInfo(
			  int index, proto.Oxc.PBOXCPlayerDeskInfo.Builder builderForValue) {
        if (playerDeskInfoBuilder_ == null) {
          ensurePlayerDeskInfoIsMutable();
          playerDeskInfo_.add(index, builderForValue.build());
          onChanged();
        } else {
          playerDeskInfoBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .proto.PBOXCPlayerDeskInfo playerDeskInfo = 5;</code>
       *
       * <pre>
       *桌上牌面信息
       * </pre>
       */
      public Builder addAllPlayerDeskInfo(
          java.lang.Iterable<? extends proto.Oxc.PBOXCPlayerDeskInfo> values) {
        if (playerDeskInfoBuilder_ == null) {
          ensurePlayerDeskInfoIsMutable();
          super.addAll(values, playerDeskInfo_);
          onChanged();
        } else {
          playerDeskInfoBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .proto.PBOXCPlayerDeskInfo playerDeskInfo = 5;</code>
       *
       * <pre>
       *桌上牌面信息
       * </pre>
       */
      public Builder clearPlayerDeskInfo() {
        if (playerDeskInfoBuilder_ == null) {
          playerDeskInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          playerDeskInfoBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .proto.PBOXCPlayerDeskInfo playerDeskInfo = 5;</code>
       *
       * <pre>
       *桌上牌面信息
       * </pre>
       */
      public Builder removePlayerDeskInfo(int index) {
        if (playerDeskInfoBuilder_ == null) {
          ensurePlayerDeskInfoIsMutable();
          playerDeskInfo_.remove(index);
          onChanged();
        } else {
          playerDeskInfoBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .proto.PBOXCPlayerDeskInfo playerDeskInfo = 5;</code>
       *
       * <pre>
       *桌上牌面信息
       * </pre>
       */
      public proto.Oxc.PBOXCPlayerDeskInfo.Builder getPlayerDeskInfoBuilder(
          int index) {
        return getPlayerDeskInfoFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .proto.PBOXCPlayerDeskInfo playerDeskInfo = 5;</code>
       *
       * <pre>
       *桌上牌面信息
       * </pre>
       */
      public proto.Oxc.PBOXCPlayerDeskInfoOrBuilder getPlayerDeskInfoOrBuilder(
          int index) {
        if (playerDeskInfoBuilder_ == null) {
          return playerDeskInfo_.get(index);  } else {
          return playerDeskInfoBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .proto.PBOXCPlayerDeskInfo playerDeskInfo = 5;</code>
       *
       * <pre>
       *桌上牌面信息
       * </pre>
       */
      public java.util.List<? extends proto.Oxc.PBOXCPlayerDeskInfoOrBuilder>
           getPlayerDeskInfoOrBuilderList() {
        if (playerDeskInfoBuilder_ != null) {
          return playerDeskInfoBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(playerDeskInfo_);
        }
      }
      /**
       * <code>repeated .proto.PBOXCPlayerDeskInfo playerDeskInfo = 5;</code>
       *
       * <pre>
       *桌上牌面信息
       * </pre>
       */
      public proto.Oxc.PBOXCPlayerDeskInfo.Builder addPlayerDeskInfoBuilder() {
        return getPlayerDeskInfoFieldBuilder().addBuilder(
            proto.Oxc.PBOXCPlayerDeskInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .proto.PBOXCPlayerDeskInfo playerDeskInfo = 5;</code>
       *
       * <pre>
       *桌上牌面信息
       * </pre>
       */
      public proto.Oxc.PBOXCPlayerDeskInfo.Builder addPlayerDeskInfoBuilder(
          int index) {
        return getPlayerDeskInfoFieldBuilder().addBuilder(
            index, proto.Oxc.PBOXCPlayerDeskInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .proto.PBOXCPlayerDeskInfo playerDeskInfo = 5;</code>
       *
       * <pre>
       *桌上牌面信息
       * </pre>
       */
      public java.util.List<proto.Oxc.PBOXCPlayerDeskInfo.Builder>
           getPlayerDeskInfoBuilderList() {
        return getPlayerDeskInfoFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          proto.Oxc.PBOXCPlayerDeskInfo, proto.Oxc.PBOXCPlayerDeskInfo.Builder, proto.Oxc.PBOXCPlayerDeskInfoOrBuilder>
          getPlayerDeskInfoFieldBuilder() {
        if (playerDeskInfoBuilder_ == null) {
          playerDeskInfoBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              proto.Oxc.PBOXCPlayerDeskInfo, proto.Oxc.PBOXCPlayerDeskInfo.Builder, proto.Oxc.PBOXCPlayerDeskInfoOrBuilder>(
                  playerDeskInfo_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          playerDeskInfo_ = null;
        }
        return playerDeskInfoBuilder_;
      }

      // required int32 round = 6;
      private int round_ ;
      /**
       * <code>required int32 round = 6;</code>
       *
       * <pre>
       *当前多少局
       * </pre>
       */
      public boolean hasRound() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required int32 round = 6;</code>
       *
       * <pre>
       *当前多少局
       * </pre>
       */
      public int getRound() {
        return round_;
      }
      /**
       * <code>required int32 round = 6;</code>
       *
       * <pre>
       *当前多少局
       * </pre>
       */
      public Builder setRound(int value) {
        bitField0_ |= 0x00000020;
        round_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 round = 6;</code>
       *
       * <pre>
       *当前多少局
       * </pre>
       */
      public Builder clearRound() {
        bitField0_ = (bitField0_ & ~0x00000020);
        round_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:proto.PBOXCDeskInfo)
    }

    static {
      defaultInstance = new PBOXCDeskInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:proto.PBOXCDeskInfo)
  }

  public interface PBOXCPlayerDeskInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 pos = 1;
    /**
     * <code>required int32 pos = 1;</code>
     *
     * <pre>
     *位置
     * </pre>
     */
    boolean hasPos();
    /**
     * <code>required int32 pos = 1;</code>
     *
     * <pre>
     *位置
     * </pre>
     */
    int getPos();

    // required int32 cardsNum = 2;
    /**
     * <code>required int32 cardsNum = 2;</code>
     *
     * <pre>
     *当前牌数量
     * </pre>
     */
    boolean hasCardsNum();
    /**
     * <code>required int32 cardsNum = 2;</code>
     *
     * <pre>
     *当前牌数量
     * </pre>
     */
    int getCardsNum();

    // optional bool zhuang = 3;
    /**
     * <code>optional bool zhuang = 3;</code>
     *
     * <pre>
     *是否庄    当状态为大于4时判断显示庄	
     * </pre>
     */
    boolean hasZhuang();
    /**
     * <code>optional bool zhuang = 3;</code>
     *
     * <pre>
     *是否庄    当状态为大于4时判断显示庄	
     * </pre>
     */
    boolean getZhuang();

    // optional int32 userTimes = 4;
    /**
     * <code>optional int32 userTimes = 4;</code>
     *
     * <pre>
     *玩家选择倍数   当状态为大于4时判断显示倍数  未下注时值为-1
     * </pre>
     */
    boolean hasUserTimes();
    /**
     * <code>optional int32 userTimes = 4;</code>
     *
     * <pre>
     *玩家选择倍数   当状态为大于4时判断显示倍数  未下注时值为-1
     * </pre>
     */
    int getUserTimes();

    // optional int32 bankerTimes = 5;
    /**
     * <code>optional int32 bankerTimes = 5;</code>
     *
     * <pre>
     *抢庄倍数  当状态为3时  且当前玩家是自己才有此变量
     * </pre>
     */
    boolean hasBankerTimes();
    /**
     * <code>optional int32 bankerTimes = 5;</code>
     *
     * <pre>
     *抢庄倍数  当状态为3时  且当前玩家是自己才有此变量
     * </pre>
     */
    int getBankerTimes();

    // optional bool playerCaled = 6;
    /**
     * <code>optional bool playerCaled = 6;</code>
     *
     * <pre>
     *已经算牌
     * </pre>
     */
    boolean hasPlayerCaled();
    /**
     * <code>optional bool playerCaled = 6;</code>
     *
     * <pre>
     *已经算牌
     * </pre>
     */
    boolean getPlayerCaled();

    // optional int32 typed = 7;
    /**
     * <code>optional int32 typed = 7;</code>
     *
     * <pre>
     *牛多少
     * </pre>
     */
    boolean hasTyped();
    /**
     * <code>optional int32 typed = 7;</code>
     *
     * <pre>
     *牛多少
     * </pre>
     */
    int getTyped();

    // repeated int32 cardsAdd = 8;
    /**
     * <code>repeated int32 cardsAdd = 8;</code>
     *
     * <pre>
     *牌数据 配牌， 2张
     * </pre>
     */
    java.util.List<java.lang.Integer> getCardsAddList();
    /**
     * <code>repeated int32 cardsAdd = 8;</code>
     *
     * <pre>
     *牌数据 配牌， 2张
     * </pre>
     */
    int getCardsAddCount();
    /**
     * <code>repeated int32 cardsAdd = 8;</code>
     *
     * <pre>
     *牌数据 配牌， 2张
     * </pre>
     */
    int getCardsAdd(int index);

    // repeated int32 cards = 9;
    /**
     * <code>repeated int32 cards = 9;</code>
     *
     * <pre>
     *所有牌
     * </pre>
     */
    java.util.List<java.lang.Integer> getCardsList();
    /**
     * <code>repeated int32 cards = 9;</code>
     *
     * <pre>
     *所有牌
     * </pre>
     */
    int getCardsCount();
    /**
     * <code>repeated int32 cards = 9;</code>
     *
     * <pre>
     *所有牌
     * </pre>
     */
    int getCards(int index);
  }
  /**
   * Protobuf type {@code proto.PBOXCPlayerDeskInfo}
   */
  public static final class PBOXCPlayerDeskInfo extends
      com.google.protobuf.GeneratedMessage
      implements PBOXCPlayerDeskInfoOrBuilder {
    // Use PBOXCPlayerDeskInfo.newBuilder() to construct.
    private PBOXCPlayerDeskInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PBOXCPlayerDeskInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PBOXCPlayerDeskInfo defaultInstance;
    public static PBOXCPlayerDeskInfo getDefaultInstance() {
      return defaultInstance;
    }

    public PBOXCPlayerDeskInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PBOXCPlayerDeskInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              pos_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              cardsNum_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              zhuang_ = input.readBool();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              userTimes_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              bankerTimes_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              playerCaled_ = input.readBool();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              typed_ = input.readInt32();
              break;
            }
            case 64: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                cardsAdd_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000080;
              }
              cardsAdd_.add(input.readInt32());
              break;
            }
            case 66: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080) && input.getBytesUntilLimit() > 0) {
                cardsAdd_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000080;
              }
              while (input.getBytesUntilLimit() > 0) {
                cardsAdd_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 72: {
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                cards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000100;
              }
              cards_.add(input.readInt32());
              break;
            }
            case 74: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100) && input.getBytesUntilLimit() > 0) {
                cards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000100;
              }
              while (input.getBytesUntilLimit() > 0) {
                cards_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
          cardsAdd_ = java.util.Collections.unmodifiableList(cardsAdd_);
        }
        if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
          cards_ = java.util.Collections.unmodifiableList(cards_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return proto.Oxc.internal_static_protobuf_PBOXCPlayerDeskInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return proto.Oxc.internal_static_protobuf_PBOXCPlayerDeskInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              proto.Oxc.PBOXCPlayerDeskInfo.class, proto.Oxc.PBOXCPlayerDeskInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<PBOXCPlayerDeskInfo> PARSER =
        new com.google.protobuf.AbstractParser<PBOXCPlayerDeskInfo>() {
      public PBOXCPlayerDeskInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PBOXCPlayerDeskInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PBOXCPlayerDeskInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 pos = 1;
    public static final int POS_FIELD_NUMBER = 1;
    private int pos_;
    /**
     * <code>required int32 pos = 1;</code>
     *
     * <pre>
     *位置
     * </pre>
     */
    public boolean hasPos() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 pos = 1;</code>
     *
     * <pre>
     *位置
     * </pre>
     */
    public int getPos() {
      return pos_;
    }

    // required int32 cardsNum = 2;
    public static final int CARDSNUM_FIELD_NUMBER = 2;
    private int cardsNum_;
    /**
     * <code>required int32 cardsNum = 2;</code>
     *
     * <pre>
     *当前牌数量
     * </pre>
     */
    public boolean hasCardsNum() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 cardsNum = 2;</code>
     *
     * <pre>
     *当前牌数量
     * </pre>
     */
    public int getCardsNum() {
      return cardsNum_;
    }

    // optional bool zhuang = 3;
    public static final int ZHUANG_FIELD_NUMBER = 3;
    private boolean zhuang_;
    /**
     * <code>optional bool zhuang = 3;</code>
     *
     * <pre>
     *是否庄    当状态为大于4时判断显示庄	
     * </pre>
     */
    public boolean hasZhuang() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bool zhuang = 3;</code>
     *
     * <pre>
     *是否庄    当状态为大于4时判断显示庄	
     * </pre>
     */
    public boolean getZhuang() {
      return zhuang_;
    }

    // optional int32 userTimes = 4;
    public static final int USERTIMES_FIELD_NUMBER = 4;
    private int userTimes_;
    /**
     * <code>optional int32 userTimes = 4;</code>
     *
     * <pre>
     *玩家选择倍数   当状态为大于4时判断显示倍数  未下注时值为-1
     * </pre>
     */
    public boolean hasUserTimes() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 userTimes = 4;</code>
     *
     * <pre>
     *玩家选择倍数   当状态为大于4时判断显示倍数  未下注时值为-1
     * </pre>
     */
    public int getUserTimes() {
      return userTimes_;
    }

    // optional int32 bankerTimes = 5;
    public static final int BANKERTIMES_FIELD_NUMBER = 5;
    private int bankerTimes_;
    /**
     * <code>optional int32 bankerTimes = 5;</code>
     *
     * <pre>
     *抢庄倍数  当状态为3时  且当前玩家是自己才有此变量
     * </pre>
     */
    public boolean hasBankerTimes() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 bankerTimes = 5;</code>
     *
     * <pre>
     *抢庄倍数  当状态为3时  且当前玩家是自己才有此变量
     * </pre>
     */
    public int getBankerTimes() {
      return bankerTimes_;
    }

    // optional bool playerCaled = 6;
    public static final int PLAYERCALED_FIELD_NUMBER = 6;
    private boolean playerCaled_;
    /**
     * <code>optional bool playerCaled = 6;</code>
     *
     * <pre>
     *已经算牌
     * </pre>
     */
    public boolean hasPlayerCaled() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional bool playerCaled = 6;</code>
     *
     * <pre>
     *已经算牌
     * </pre>
     */
    public boolean getPlayerCaled() {
      return playerCaled_;
    }

    // optional int32 typed = 7;
    public static final int TYPED_FIELD_NUMBER = 7;
    private int typed_;
    /**
     * <code>optional int32 typed = 7;</code>
     *
     * <pre>
     *牛多少
     * </pre>
     */
    public boolean hasTyped() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 typed = 7;</code>
     *
     * <pre>
     *牛多少
     * </pre>
     */
    public int getTyped() {
      return typed_;
    }

    // repeated int32 cardsAdd = 8;
    public static final int CARDSADD_FIELD_NUMBER = 8;
    private java.util.List<java.lang.Integer> cardsAdd_;
    /**
     * <code>repeated int32 cardsAdd = 8;</code>
     *
     * <pre>
     *牌数据 配牌， 2张
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCardsAddList() {
      return cardsAdd_;
    }
    /**
     * <code>repeated int32 cardsAdd = 8;</code>
     *
     * <pre>
     *牌数据 配牌， 2张
     * </pre>
     */
    public int getCardsAddCount() {
      return cardsAdd_.size();
    }
    /**
     * <code>repeated int32 cardsAdd = 8;</code>
     *
     * <pre>
     *牌数据 配牌， 2张
     * </pre>
     */
    public int getCardsAdd(int index) {
      return cardsAdd_.get(index);
    }

    // repeated int32 cards = 9;
    public static final int CARDS_FIELD_NUMBER = 9;
    private java.util.List<java.lang.Integer> cards_;
    /**
     * <code>repeated int32 cards = 9;</code>
     *
     * <pre>
     *所有牌
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCardsList() {
      return cards_;
    }
    /**
     * <code>repeated int32 cards = 9;</code>
     *
     * <pre>
     *所有牌
     * </pre>
     */
    public int getCardsCount() {
      return cards_.size();
    }
    /**
     * <code>repeated int32 cards = 9;</code>
     *
     * <pre>
     *所有牌
     * </pre>
     */
    public int getCards(int index) {
      return cards_.get(index);
    }

    private void initFields() {
      pos_ = 0;
      cardsNum_ = 0;
      zhuang_ = false;
      userTimes_ = 0;
      bankerTimes_ = 0;
      playerCaled_ = false;
      typed_ = 0;
      cardsAdd_ = java.util.Collections.emptyList();
      cards_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasPos()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCardsNum()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, pos_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, cardsNum_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBool(3, zhuang_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, userTimes_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, bankerTimes_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBool(6, playerCaled_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, typed_);
      }
      for (int i = 0; i < cardsAdd_.size(); i++) {
        output.writeInt32(8, cardsAdd_.get(i));
      }
      for (int i = 0; i < cards_.size(); i++) {
        output.writeInt32(9, cards_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, pos_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, cardsNum_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, zhuang_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, userTimes_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, bankerTimes_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, playerCaled_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, typed_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cardsAdd_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(cardsAdd_.get(i));
        }
        size += dataSize;
        size += 1 * getCardsAddList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cards_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(cards_.get(i));
        }
        size += dataSize;
        size += 1 * getCardsList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static proto.Oxc.PBOXCPlayerDeskInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.Oxc.PBOXCPlayerDeskInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.Oxc.PBOXCPlayerDeskInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.Oxc.PBOXCPlayerDeskInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.Oxc.PBOXCPlayerDeskInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static proto.Oxc.PBOXCPlayerDeskInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static proto.Oxc.PBOXCPlayerDeskInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static proto.Oxc.PBOXCPlayerDeskInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static proto.Oxc.PBOXCPlayerDeskInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static proto.Oxc.PBOXCPlayerDeskInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(proto.Oxc.PBOXCPlayerDeskInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code proto.PBOXCPlayerDeskInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements proto.Oxc.PBOXCPlayerDeskInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return proto.Oxc.internal_static_protobuf_PBOXCPlayerDeskInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return proto.Oxc.internal_static_protobuf_PBOXCPlayerDeskInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                proto.Oxc.PBOXCPlayerDeskInfo.class, proto.Oxc.PBOXCPlayerDeskInfo.Builder.class);
      }

      // Construct using proto.Oxc.PBOXCPlayerDeskInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        pos_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        cardsNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        zhuang_ = false;
        bitField0_ = (bitField0_ & ~0x00000004);
        userTimes_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        bankerTimes_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        playerCaled_ = false;
        bitField0_ = (bitField0_ & ~0x00000020);
        typed_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        cardsAdd_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        cards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return proto.Oxc.internal_static_protobuf_PBOXCPlayerDeskInfo_descriptor;
      }

      public proto.Oxc.PBOXCPlayerDeskInfo getDefaultInstanceForType() {
        return proto.Oxc.PBOXCPlayerDeskInfo.getDefaultInstance();
      }

      public proto.Oxc.PBOXCPlayerDeskInfo build() {
        proto.Oxc.PBOXCPlayerDeskInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public proto.Oxc.PBOXCPlayerDeskInfo buildPartial() {
        proto.Oxc.PBOXCPlayerDeskInfo result = new proto.Oxc.PBOXCPlayerDeskInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.pos_ = pos_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.cardsNum_ = cardsNum_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.zhuang_ = zhuang_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.userTimes_ = userTimes_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.bankerTimes_ = bankerTimes_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.playerCaled_ = playerCaled_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.typed_ = typed_;
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          cardsAdd_ = java.util.Collections.unmodifiableList(cardsAdd_);
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.cardsAdd_ = cardsAdd_;
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          cards_ = java.util.Collections.unmodifiableList(cards_);
          bitField0_ = (bitField0_ & ~0x00000100);
        }
        result.cards_ = cards_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof proto.Oxc.PBOXCPlayerDeskInfo) {
          return mergeFrom((proto.Oxc.PBOXCPlayerDeskInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(proto.Oxc.PBOXCPlayerDeskInfo other) {
        if (other == proto.Oxc.PBOXCPlayerDeskInfo.getDefaultInstance()) return this;
        if (other.hasPos()) {
          setPos(other.getPos());
        }
        if (other.hasCardsNum()) {
          setCardsNum(other.getCardsNum());
        }
        if (other.hasZhuang()) {
          setZhuang(other.getZhuang());
        }
        if (other.hasUserTimes()) {
          setUserTimes(other.getUserTimes());
        }
        if (other.hasBankerTimes()) {
          setBankerTimes(other.getBankerTimes());
        }
        if (other.hasPlayerCaled()) {
          setPlayerCaled(other.getPlayerCaled());
        }
        if (other.hasTyped()) {
          setTyped(other.getTyped());
        }
        if (!other.cardsAdd_.isEmpty()) {
          if (cardsAdd_.isEmpty()) {
            cardsAdd_ = other.cardsAdd_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensureCardsAddIsMutable();
            cardsAdd_.addAll(other.cardsAdd_);
          }
          onChanged();
        }
        if (!other.cards_.isEmpty()) {
          if (cards_.isEmpty()) {
            cards_ = other.cards_;
            bitField0_ = (bitField0_ & ~0x00000100);
          } else {
            ensureCardsIsMutable();
            cards_.addAll(other.cards_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasPos()) {
          
          return false;
        }
        if (!hasCardsNum()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        proto.Oxc.PBOXCPlayerDeskInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (proto.Oxc.PBOXCPlayerDeskInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 pos = 1;
      private int pos_ ;
      /**
       * <code>required int32 pos = 1;</code>
       *
       * <pre>
       *位置
       * </pre>
       */
      public boolean hasPos() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 pos = 1;</code>
       *
       * <pre>
       *位置
       * </pre>
       */
      public int getPos() {
        return pos_;
      }
      /**
       * <code>required int32 pos = 1;</code>
       *
       * <pre>
       *位置
       * </pre>
       */
      public Builder setPos(int value) {
        bitField0_ |= 0x00000001;
        pos_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 pos = 1;</code>
       *
       * <pre>
       *位置
       * </pre>
       */
      public Builder clearPos() {
        bitField0_ = (bitField0_ & ~0x00000001);
        pos_ = 0;
        onChanged();
        return this;
      }

      // required int32 cardsNum = 2;
      private int cardsNum_ ;
      /**
       * <code>required int32 cardsNum = 2;</code>
       *
       * <pre>
       *当前牌数量
       * </pre>
       */
      public boolean hasCardsNum() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 cardsNum = 2;</code>
       *
       * <pre>
       *当前牌数量
       * </pre>
       */
      public int getCardsNum() {
        return cardsNum_;
      }
      /**
       * <code>required int32 cardsNum = 2;</code>
       *
       * <pre>
       *当前牌数量
       * </pre>
       */
      public Builder setCardsNum(int value) {
        bitField0_ |= 0x00000002;
        cardsNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 cardsNum = 2;</code>
       *
       * <pre>
       *当前牌数量
       * </pre>
       */
      public Builder clearCardsNum() {
        bitField0_ = (bitField0_ & ~0x00000002);
        cardsNum_ = 0;
        onChanged();
        return this;
      }

      // optional bool zhuang = 3;
      private boolean zhuang_ ;
      /**
       * <code>optional bool zhuang = 3;</code>
       *
       * <pre>
       *是否庄    当状态为大于4时判断显示庄	
       * </pre>
       */
      public boolean hasZhuang() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bool zhuang = 3;</code>
       *
       * <pre>
       *是否庄    当状态为大于4时判断显示庄	
       * </pre>
       */
      public boolean getZhuang() {
        return zhuang_;
      }
      /**
       * <code>optional bool zhuang = 3;</code>
       *
       * <pre>
       *是否庄    当状态为大于4时判断显示庄	
       * </pre>
       */
      public Builder setZhuang(boolean value) {
        bitField0_ |= 0x00000004;
        zhuang_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool zhuang = 3;</code>
       *
       * <pre>
       *是否庄    当状态为大于4时判断显示庄	
       * </pre>
       */
      public Builder clearZhuang() {
        bitField0_ = (bitField0_ & ~0x00000004);
        zhuang_ = false;
        onChanged();
        return this;
      }

      // optional int32 userTimes = 4;
      private int userTimes_ ;
      /**
       * <code>optional int32 userTimes = 4;</code>
       *
       * <pre>
       *玩家选择倍数   当状态为大于4时判断显示倍数  未下注时值为-1
       * </pre>
       */
      public boolean hasUserTimes() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 userTimes = 4;</code>
       *
       * <pre>
       *玩家选择倍数   当状态为大于4时判断显示倍数  未下注时值为-1
       * </pre>
       */
      public int getUserTimes() {
        return userTimes_;
      }
      /**
       * <code>optional int32 userTimes = 4;</code>
       *
       * <pre>
       *玩家选择倍数   当状态为大于4时判断显示倍数  未下注时值为-1
       * </pre>
       */
      public Builder setUserTimes(int value) {
        bitField0_ |= 0x00000008;
        userTimes_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 userTimes = 4;</code>
       *
       * <pre>
       *玩家选择倍数   当状态为大于4时判断显示倍数  未下注时值为-1
       * </pre>
       */
      public Builder clearUserTimes() {
        bitField0_ = (bitField0_ & ~0x00000008);
        userTimes_ = 0;
        onChanged();
        return this;
      }

      // optional int32 bankerTimes = 5;
      private int bankerTimes_ ;
      /**
       * <code>optional int32 bankerTimes = 5;</code>
       *
       * <pre>
       *抢庄倍数  当状态为3时  且当前玩家是自己才有此变量
       * </pre>
       */
      public boolean hasBankerTimes() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 bankerTimes = 5;</code>
       *
       * <pre>
       *抢庄倍数  当状态为3时  且当前玩家是自己才有此变量
       * </pre>
       */
      public int getBankerTimes() {
        return bankerTimes_;
      }
      /**
       * <code>optional int32 bankerTimes = 5;</code>
       *
       * <pre>
       *抢庄倍数  当状态为3时  且当前玩家是自己才有此变量
       * </pre>
       */
      public Builder setBankerTimes(int value) {
        bitField0_ |= 0x00000010;
        bankerTimes_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 bankerTimes = 5;</code>
       *
       * <pre>
       *抢庄倍数  当状态为3时  且当前玩家是自己才有此变量
       * </pre>
       */
      public Builder clearBankerTimes() {
        bitField0_ = (bitField0_ & ~0x00000010);
        bankerTimes_ = 0;
        onChanged();
        return this;
      }

      // optional bool playerCaled = 6;
      private boolean playerCaled_ ;
      /**
       * <code>optional bool playerCaled = 6;</code>
       *
       * <pre>
       *已经算牌
       * </pre>
       */
      public boolean hasPlayerCaled() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional bool playerCaled = 6;</code>
       *
       * <pre>
       *已经算牌
       * </pre>
       */
      public boolean getPlayerCaled() {
        return playerCaled_;
      }
      /**
       * <code>optional bool playerCaled = 6;</code>
       *
       * <pre>
       *已经算牌
       * </pre>
       */
      public Builder setPlayerCaled(boolean value) {
        bitField0_ |= 0x00000020;
        playerCaled_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool playerCaled = 6;</code>
       *
       * <pre>
       *已经算牌
       * </pre>
       */
      public Builder clearPlayerCaled() {
        bitField0_ = (bitField0_ & ~0x00000020);
        playerCaled_ = false;
        onChanged();
        return this;
      }

      // optional int32 typed = 7;
      private int typed_ ;
      /**
       * <code>optional int32 typed = 7;</code>
       *
       * <pre>
       *牛多少
       * </pre>
       */
      public boolean hasTyped() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 typed = 7;</code>
       *
       * <pre>
       *牛多少
       * </pre>
       */
      public int getTyped() {
        return typed_;
      }
      /**
       * <code>optional int32 typed = 7;</code>
       *
       * <pre>
       *牛多少
       * </pre>
       */
      public Builder setTyped(int value) {
        bitField0_ |= 0x00000040;
        typed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 typed = 7;</code>
       *
       * <pre>
       *牛多少
       * </pre>
       */
      public Builder clearTyped() {
        bitField0_ = (bitField0_ & ~0x00000040);
        typed_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 cardsAdd = 8;
      private java.util.List<java.lang.Integer> cardsAdd_ = java.util.Collections.emptyList();
      private void ensureCardsAddIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          cardsAdd_ = new java.util.ArrayList<java.lang.Integer>(cardsAdd_);
          bitField0_ |= 0x00000080;
         }
      }
      /**
       * <code>repeated int32 cardsAdd = 8;</code>
       *
       * <pre>
       *牌数据 配牌， 2张
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCardsAddList() {
        return java.util.Collections.unmodifiableList(cardsAdd_);
      }
      /**
       * <code>repeated int32 cardsAdd = 8;</code>
       *
       * <pre>
       *牌数据 配牌， 2张
       * </pre>
       */
      public int getCardsAddCount() {
        return cardsAdd_.size();
      }
      /**
       * <code>repeated int32 cardsAdd = 8;</code>
       *
       * <pre>
       *牌数据 配牌， 2张
       * </pre>
       */
      public int getCardsAdd(int index) {
        return cardsAdd_.get(index);
      }
      /**
       * <code>repeated int32 cardsAdd = 8;</code>
       *
       * <pre>
       *牌数据 配牌， 2张
       * </pre>
       */
      public Builder setCardsAdd(
          int index, int value) {
        ensureCardsAddIsMutable();
        cardsAdd_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cardsAdd = 8;</code>
       *
       * <pre>
       *牌数据 配牌， 2张
       * </pre>
       */
      public Builder addCardsAdd(int value) {
        ensureCardsAddIsMutable();
        cardsAdd_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cardsAdd = 8;</code>
       *
       * <pre>
       *牌数据 配牌， 2张
       * </pre>
       */
      public Builder addAllCardsAdd(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCardsAddIsMutable();
        super.addAll(values, cardsAdd_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cardsAdd = 8;</code>
       *
       * <pre>
       *牌数据 配牌， 2张
       * </pre>
       */
      public Builder clearCardsAdd() {
        cardsAdd_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
        return this;
      }

      // repeated int32 cards = 9;
      private java.util.List<java.lang.Integer> cards_ = java.util.Collections.emptyList();
      private void ensureCardsIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          cards_ = new java.util.ArrayList<java.lang.Integer>(cards_);
          bitField0_ |= 0x00000100;
         }
      }
      /**
       * <code>repeated int32 cards = 9;</code>
       *
       * <pre>
       *所有牌
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCardsList() {
        return java.util.Collections.unmodifiableList(cards_);
      }
      /**
       * <code>repeated int32 cards = 9;</code>
       *
       * <pre>
       *所有牌
       * </pre>
       */
      public int getCardsCount() {
        return cards_.size();
      }
      /**
       * <code>repeated int32 cards = 9;</code>
       *
       * <pre>
       *所有牌
       * </pre>
       */
      public int getCards(int index) {
        return cards_.get(index);
      }
      /**
       * <code>repeated int32 cards = 9;</code>
       *
       * <pre>
       *所有牌
       * </pre>
       */
      public Builder setCards(
          int index, int value) {
        ensureCardsIsMutable();
        cards_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards = 9;</code>
       *
       * <pre>
       *所有牌
       * </pre>
       */
      public Builder addCards(int value) {
        ensureCardsIsMutable();
        cards_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards = 9;</code>
       *
       * <pre>
       *所有牌
       * </pre>
       */
      public Builder addAllCards(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCardsIsMutable();
        super.addAll(values, cards_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards = 9;</code>
       *
       * <pre>
       *所有牌
       * </pre>
       */
      public Builder clearCards() {
        cards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:proto.PBOXCPlayerDeskInfo)
    }

    static {
      defaultInstance = new PBOXCPlayerDeskInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:proto.PBOXCPlayerDeskInfo)
  }

  public interface PBOXCPlayerCalOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 pos = 1;
    /**
     * <code>required int32 pos = 1;</code>
     *
     * <pre>
     *位置
     * </pre>
     */
    boolean hasPos();
    /**
     * <code>required int32 pos = 1;</code>
     *
     * <pre>
     *位置
     * </pre>
     */
    int getPos();

    // repeated int32 cardsMain = 2;
    /**
     * <code>repeated int32 cardsMain = 2;</code>
     *
     * <pre>
     *牌数据 形成牛的牌 ，五张
     * </pre>
     */
    java.util.List<java.lang.Integer> getCardsMainList();
    /**
     * <code>repeated int32 cardsMain = 2;</code>
     *
     * <pre>
     *牌数据 形成牛的牌 ，五张
     * </pre>
     */
    int getCardsMainCount();
    /**
     * <code>repeated int32 cardsMain = 2;</code>
     *
     * <pre>
     *牌数据 形成牛的牌 ，五张
     * </pre>
     */
    int getCardsMain(int index);

    // repeated int32 cardsAdd = 3;
    /**
     * <code>repeated int32 cardsAdd = 3;</code>
     *
     * <pre>
     *牌数据 配牌， 2张
     * </pre>
     */
    java.util.List<java.lang.Integer> getCardsAddList();
    /**
     * <code>repeated int32 cardsAdd = 3;</code>
     *
     * <pre>
     *牌数据 配牌， 2张
     * </pre>
     */
    int getCardsAddCount();
    /**
     * <code>repeated int32 cardsAdd = 3;</code>
     *
     * <pre>
     *牌数据 配牌， 2张
     * </pre>
     */
    int getCardsAdd(int index);

    // required int32 typed = 4;
    /**
     * <code>required int32 typed = 4;</code>
     *
     * <pre>
     *牌型
     * </pre>
     */
    boolean hasTyped();
    /**
     * <code>required int32 typed = 4;</code>
     *
     * <pre>
     *牌型
     * </pre>
     */
    int getTyped();
  }
  /**
   * Protobuf type {@code proto.PBOXCPlayerCal}
   */
  public static final class PBOXCPlayerCal extends
      com.google.protobuf.GeneratedMessage
      implements PBOXCPlayerCalOrBuilder {
    // Use PBOXCPlayerCal.newBuilder() to construct.
    private PBOXCPlayerCal(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PBOXCPlayerCal(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PBOXCPlayerCal defaultInstance;
    public static PBOXCPlayerCal getDefaultInstance() {
      return defaultInstance;
    }

    public PBOXCPlayerCal getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PBOXCPlayerCal(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              pos_ = input.readInt32();
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                cardsMain_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              cardsMain_.add(input.readInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                cardsMain_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                cardsMain_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                cardsAdd_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              cardsAdd_.add(input.readInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                cardsAdd_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                cardsAdd_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 32: {
              bitField0_ |= 0x00000002;
              typed_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          cardsMain_ = java.util.Collections.unmodifiableList(cardsMain_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          cardsAdd_ = java.util.Collections.unmodifiableList(cardsAdd_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return proto.Oxc.internal_static_protobuf_PBOXCPlayerCal_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return proto.Oxc.internal_static_protobuf_PBOXCPlayerCal_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              proto.Oxc.PBOXCPlayerCal.class, proto.Oxc.PBOXCPlayerCal.Builder.class);
    }

    public static com.google.protobuf.Parser<PBOXCPlayerCal> PARSER =
        new com.google.protobuf.AbstractParser<PBOXCPlayerCal>() {
      public PBOXCPlayerCal parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PBOXCPlayerCal(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PBOXCPlayerCal> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 pos = 1;
    public static final int POS_FIELD_NUMBER = 1;
    private int pos_;
    /**
     * <code>required int32 pos = 1;</code>
     *
     * <pre>
     *位置
     * </pre>
     */
    public boolean hasPos() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 pos = 1;</code>
     *
     * <pre>
     *位置
     * </pre>
     */
    public int getPos() {
      return pos_;
    }

    // repeated int32 cardsMain = 2;
    public static final int CARDSMAIN_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> cardsMain_;
    /**
     * <code>repeated int32 cardsMain = 2;</code>
     *
     * <pre>
     *牌数据 形成牛的牌 ，五张
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCardsMainList() {
      return cardsMain_;
    }
    /**
     * <code>repeated int32 cardsMain = 2;</code>
     *
     * <pre>
     *牌数据 形成牛的牌 ，五张
     * </pre>
     */
    public int getCardsMainCount() {
      return cardsMain_.size();
    }
    /**
     * <code>repeated int32 cardsMain = 2;</code>
     *
     * <pre>
     *牌数据 形成牛的牌 ，五张
     * </pre>
     */
    public int getCardsMain(int index) {
      return cardsMain_.get(index);
    }

    // repeated int32 cardsAdd = 3;
    public static final int CARDSADD_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> cardsAdd_;
    /**
     * <code>repeated int32 cardsAdd = 3;</code>
     *
     * <pre>
     *牌数据 配牌， 2张
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCardsAddList() {
      return cardsAdd_;
    }
    /**
     * <code>repeated int32 cardsAdd = 3;</code>
     *
     * <pre>
     *牌数据 配牌， 2张
     * </pre>
     */
    public int getCardsAddCount() {
      return cardsAdd_.size();
    }
    /**
     * <code>repeated int32 cardsAdd = 3;</code>
     *
     * <pre>
     *牌数据 配牌， 2张
     * </pre>
     */
    public int getCardsAdd(int index) {
      return cardsAdd_.get(index);
    }

    // required int32 typed = 4;
    public static final int TYPED_FIELD_NUMBER = 4;
    private int typed_;
    /**
     * <code>required int32 typed = 4;</code>
     *
     * <pre>
     *牌型
     * </pre>
     */
    public boolean hasTyped() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 typed = 4;</code>
     *
     * <pre>
     *牌型
     * </pre>
     */
    public int getTyped() {
      return typed_;
    }

    private void initFields() {
      pos_ = 0;
      cardsMain_ = java.util.Collections.emptyList();
      cardsAdd_ = java.util.Collections.emptyList();
      typed_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasPos()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTyped()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, pos_);
      }
      for (int i = 0; i < cardsMain_.size(); i++) {
        output.writeInt32(2, cardsMain_.get(i));
      }
      for (int i = 0; i < cardsAdd_.size(); i++) {
        output.writeInt32(3, cardsAdd_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(4, typed_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, pos_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cardsMain_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(cardsMain_.get(i));
        }
        size += dataSize;
        size += 1 * getCardsMainList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cardsAdd_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(cardsAdd_.get(i));
        }
        size += dataSize;
        size += 1 * getCardsAddList().size();
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, typed_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static proto.Oxc.PBOXCPlayerCal parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.Oxc.PBOXCPlayerCal parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.Oxc.PBOXCPlayerCal parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.Oxc.PBOXCPlayerCal parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.Oxc.PBOXCPlayerCal parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static proto.Oxc.PBOXCPlayerCal parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static proto.Oxc.PBOXCPlayerCal parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static proto.Oxc.PBOXCPlayerCal parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static proto.Oxc.PBOXCPlayerCal parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static proto.Oxc.PBOXCPlayerCal parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(proto.Oxc.PBOXCPlayerCal prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code proto.PBOXCPlayerCal}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements proto.Oxc.PBOXCPlayerCalOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return proto.Oxc.internal_static_protobuf_PBOXCPlayerCal_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return proto.Oxc.internal_static_protobuf_PBOXCPlayerCal_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                proto.Oxc.PBOXCPlayerCal.class, proto.Oxc.PBOXCPlayerCal.Builder.class);
      }

      // Construct using proto.Oxc.PBOXCPlayerCal.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        pos_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        cardsMain_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        cardsAdd_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        typed_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return proto.Oxc.internal_static_protobuf_PBOXCPlayerCal_descriptor;
      }

      public proto.Oxc.PBOXCPlayerCal getDefaultInstanceForType() {
        return proto.Oxc.PBOXCPlayerCal.getDefaultInstance();
      }

      public proto.Oxc.PBOXCPlayerCal build() {
        proto.Oxc.PBOXCPlayerCal result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public proto.Oxc.PBOXCPlayerCal buildPartial() {
        proto.Oxc.PBOXCPlayerCal result = new proto.Oxc.PBOXCPlayerCal(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.pos_ = pos_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          cardsMain_ = java.util.Collections.unmodifiableList(cardsMain_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.cardsMain_ = cardsMain_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          cardsAdd_ = java.util.Collections.unmodifiableList(cardsAdd_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.cardsAdd_ = cardsAdd_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000002;
        }
        result.typed_ = typed_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof proto.Oxc.PBOXCPlayerCal) {
          return mergeFrom((proto.Oxc.PBOXCPlayerCal)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(proto.Oxc.PBOXCPlayerCal other) {
        if (other == proto.Oxc.PBOXCPlayerCal.getDefaultInstance()) return this;
        if (other.hasPos()) {
          setPos(other.getPos());
        }
        if (!other.cardsMain_.isEmpty()) {
          if (cardsMain_.isEmpty()) {
            cardsMain_ = other.cardsMain_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureCardsMainIsMutable();
            cardsMain_.addAll(other.cardsMain_);
          }
          onChanged();
        }
        if (!other.cardsAdd_.isEmpty()) {
          if (cardsAdd_.isEmpty()) {
            cardsAdd_ = other.cardsAdd_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureCardsAddIsMutable();
            cardsAdd_.addAll(other.cardsAdd_);
          }
          onChanged();
        }
        if (other.hasTyped()) {
          setTyped(other.getTyped());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasPos()) {
          
          return false;
        }
        if (!hasTyped()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        proto.Oxc.PBOXCPlayerCal parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (proto.Oxc.PBOXCPlayerCal) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 pos = 1;
      private int pos_ ;
      /**
       * <code>required int32 pos = 1;</code>
       *
       * <pre>
       *位置
       * </pre>
       */
      public boolean hasPos() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 pos = 1;</code>
       *
       * <pre>
       *位置
       * </pre>
       */
      public int getPos() {
        return pos_;
      }
      /**
       * <code>required int32 pos = 1;</code>
       *
       * <pre>
       *位置
       * </pre>
       */
      public Builder setPos(int value) {
        bitField0_ |= 0x00000001;
        pos_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 pos = 1;</code>
       *
       * <pre>
       *位置
       * </pre>
       */
      public Builder clearPos() {
        bitField0_ = (bitField0_ & ~0x00000001);
        pos_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 cardsMain = 2;
      private java.util.List<java.lang.Integer> cardsMain_ = java.util.Collections.emptyList();
      private void ensureCardsMainIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          cardsMain_ = new java.util.ArrayList<java.lang.Integer>(cardsMain_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int32 cardsMain = 2;</code>
       *
       * <pre>
       *牌数据 形成牛的牌 ，五张
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCardsMainList() {
        return java.util.Collections.unmodifiableList(cardsMain_);
      }
      /**
       * <code>repeated int32 cardsMain = 2;</code>
       *
       * <pre>
       *牌数据 形成牛的牌 ，五张
       * </pre>
       */
      public int getCardsMainCount() {
        return cardsMain_.size();
      }
      /**
       * <code>repeated int32 cardsMain = 2;</code>
       *
       * <pre>
       *牌数据 形成牛的牌 ，五张
       * </pre>
       */
      public int getCardsMain(int index) {
        return cardsMain_.get(index);
      }
      /**
       * <code>repeated int32 cardsMain = 2;</code>
       *
       * <pre>
       *牌数据 形成牛的牌 ，五张
       * </pre>
       */
      public Builder setCardsMain(
          int index, int value) {
        ensureCardsMainIsMutable();
        cardsMain_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cardsMain = 2;</code>
       *
       * <pre>
       *牌数据 形成牛的牌 ，五张
       * </pre>
       */
      public Builder addCardsMain(int value) {
        ensureCardsMainIsMutable();
        cardsMain_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cardsMain = 2;</code>
       *
       * <pre>
       *牌数据 形成牛的牌 ，五张
       * </pre>
       */
      public Builder addAllCardsMain(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCardsMainIsMutable();
        super.addAll(values, cardsMain_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cardsMain = 2;</code>
       *
       * <pre>
       *牌数据 形成牛的牌 ，五张
       * </pre>
       */
      public Builder clearCardsMain() {
        cardsMain_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // repeated int32 cardsAdd = 3;
      private java.util.List<java.lang.Integer> cardsAdd_ = java.util.Collections.emptyList();
      private void ensureCardsAddIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          cardsAdd_ = new java.util.ArrayList<java.lang.Integer>(cardsAdd_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated int32 cardsAdd = 3;</code>
       *
       * <pre>
       *牌数据 配牌， 2张
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCardsAddList() {
        return java.util.Collections.unmodifiableList(cardsAdd_);
      }
      /**
       * <code>repeated int32 cardsAdd = 3;</code>
       *
       * <pre>
       *牌数据 配牌， 2张
       * </pre>
       */
      public int getCardsAddCount() {
        return cardsAdd_.size();
      }
      /**
       * <code>repeated int32 cardsAdd = 3;</code>
       *
       * <pre>
       *牌数据 配牌， 2张
       * </pre>
       */
      public int getCardsAdd(int index) {
        return cardsAdd_.get(index);
      }
      /**
       * <code>repeated int32 cardsAdd = 3;</code>
       *
       * <pre>
       *牌数据 配牌， 2张
       * </pre>
       */
      public Builder setCardsAdd(
          int index, int value) {
        ensureCardsAddIsMutable();
        cardsAdd_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cardsAdd = 3;</code>
       *
       * <pre>
       *牌数据 配牌， 2张
       * </pre>
       */
      public Builder addCardsAdd(int value) {
        ensureCardsAddIsMutable();
        cardsAdd_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cardsAdd = 3;</code>
       *
       * <pre>
       *牌数据 配牌， 2张
       * </pre>
       */
      public Builder addAllCardsAdd(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCardsAddIsMutable();
        super.addAll(values, cardsAdd_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cardsAdd = 3;</code>
       *
       * <pre>
       *牌数据 配牌， 2张
       * </pre>
       */
      public Builder clearCardsAdd() {
        cardsAdd_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      // required int32 typed = 4;
      private int typed_ ;
      /**
       * <code>required int32 typed = 4;</code>
       *
       * <pre>
       *牌型
       * </pre>
       */
      public boolean hasTyped() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int32 typed = 4;</code>
       *
       * <pre>
       *牌型
       * </pre>
       */
      public int getTyped() {
        return typed_;
      }
      /**
       * <code>required int32 typed = 4;</code>
       *
       * <pre>
       *牌型
       * </pre>
       */
      public Builder setTyped(int value) {
        bitField0_ |= 0x00000008;
        typed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 typed = 4;</code>
       *
       * <pre>
       *牌型
       * </pre>
       */
      public Builder clearTyped() {
        bitField0_ = (bitField0_ & ~0x00000008);
        typed_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:proto.PBOXCPlayerCal)
    }

    static {
      defaultInstance = new PBOXCPlayerCal(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:proto.PBOXCPlayerCal)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_PBOXCGameStart_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_protobuf_PBOXCGameStart_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_PBOXCBanker_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_protobuf_PBOXCBanker_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_PBOXCDealCards_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_protobuf_PBOXCDealCards_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_PBOXCItemResult_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_protobuf_PBOXCItemResult_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_PBOXCGameEnd_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_protobuf_PBOXCGameEnd_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_PBOXCDeskInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_protobuf_PBOXCDeskInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_PBOXCPlayerDeskInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_protobuf_PBOXCPlayerDeskInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_PBOXCPlayerCal_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_protobuf_PBOXCPlayerCal_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\toxc.proto\022\010protobuf\032\014common.proto\"U\n\016P" +
      "BOXCGameStart\022\020\n\010firstPos\030\001 \002(\005\022\017\n\007playP" +
      "os\030\002 \003(\005\022\r\n\005cards\030\003 \003(\005\022\021\n\tcountDown\030\004 \002" +
      "(\005\"T\n\013PBOXCBanker\022\021\n\tbankerPos\030\001 \002(\005\022\037\n\005" +
      "times\030\002 \003(\0132\020.proto.PBPair\022\021\n\tcountDo" +
      "wn\030\003 \002(\005\"R\n\016PBOXCDealCards\022\r\n\005cards\030\001 \003(" +
      "\005\022\r\n\005typed\030\002 \001(\005\022\021\n\tcountDown\030\003 \002(\005\022\017\n\007c" +
      "ardNum\030\004 \002(\005\"c\n\017PBOXCItemResult\022\013\n\003pos\030\001" +
      " \002(\005\022\021\n\tcardsMain\030\002 \003(\005\022\020\n\010cardsAdd\030\003 \003(" +
      "\005\022\r\n\005typed\030\004 \002(\005\022\017\n\007winCoin\030\005 \002(\005\"L\n\014PBO",
      "XCGameEnd\022)\n\006result\030\001 \003(\0132\031.proto.PBO" +
      "XCItemResult\022\021\n\tcountDown\030\002 \002(\005\"\275\001\n\rPBOX" +
      "CDeskInfo\022/\n\013player_list\030\001 \002(\0132\032.protobu" +
      "f.PBPlayerInfoList\022\016\n\006roomId\030\002 \002(\005\022\021\n\tga" +
      "meState\030\003 \002(\005\022\022\n\nremainTime\030\004 \002(\005\0225\n\016pla" +
      "yerDeskInfo\030\005 \003(\0132\035.proto.PBOXCPlayer" +
      "DeskInfo\022\r\n\005round\030\006 \002(\005\"\261\001\n\023PBOXCPlayerD" +
      "eskInfo\022\013\n\003pos\030\001 \002(\005\022\020\n\010cardsNum\030\002 \002(\005\022\016" +
      "\n\006zhuang\030\003 \001(\010\022\021\n\tuserTimes\030\004 \001(\005\022\023\n\013ban" +
      "kerTimes\030\005 \001(\005\022\023\n\013playerCaled\030\006 \001(\010\022\r\n\005t",
      "yped\030\007 \001(\005\022\020\n\010cardsAdd\030\010 \003(\005\022\r\n\005cards\030\t " +
      "\003(\005\"Q\n\016PBOXCPlayerCal\022\013\n\003pos\030\001 \002(\005\022\021\n\tca" +
      "rdsMain\030\002 \003(\005\022\020\n\010cardsAdd\030\003 \003(\005\022\r\n\005typed" +
      "\030\004 \002(\005"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_protobuf_PBOXCGameStart_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_protobuf_PBOXCGameStart_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_protobuf_PBOXCGameStart_descriptor,
              new java.lang.String[] { "FirstPos", "PlayPos", "Cards", "CountDown", });
          internal_static_protobuf_PBOXCBanker_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_protobuf_PBOXCBanker_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_protobuf_PBOXCBanker_descriptor,
              new java.lang.String[] { "BankerPos", "Times", "CountDown", });
          internal_static_protobuf_PBOXCDealCards_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_protobuf_PBOXCDealCards_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_protobuf_PBOXCDealCards_descriptor,
              new java.lang.String[] { "Cards", "Typed", "CountDown", "CardNum", });
          internal_static_protobuf_PBOXCItemResult_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_protobuf_PBOXCItemResult_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_protobuf_PBOXCItemResult_descriptor,
              new java.lang.String[] { "Pos", "CardsMain", "CardsAdd", "Typed", "WinCoin", });
          internal_static_protobuf_PBOXCGameEnd_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_protobuf_PBOXCGameEnd_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_protobuf_PBOXCGameEnd_descriptor,
              new java.lang.String[] { "Result", "CountDown", });
          internal_static_protobuf_PBOXCDeskInfo_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_protobuf_PBOXCDeskInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_protobuf_PBOXCDeskInfo_descriptor,
              new java.lang.String[] { "PlayerList", "RoomId", "GameState", "RemainTime", "PlayerDeskInfo", "Round", });
          internal_static_protobuf_PBOXCPlayerDeskInfo_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_protobuf_PBOXCPlayerDeskInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_protobuf_PBOXCPlayerDeskInfo_descriptor,
              new java.lang.String[] { "Pos", "CardsNum", "Zhuang", "UserTimes", "BankerTimes", "PlayerCaled", "Typed", "CardsAdd", "Cards", });
          internal_static_protobuf_PBOXCPlayerCal_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_protobuf_PBOXCPlayerCal_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_protobuf_PBOXCPlayerCal_descriptor,
              new java.lang.String[] { "Pos", "CardsMain", "CardsAdd", "Typed", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          proto.Common.getDescriptor(),
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
