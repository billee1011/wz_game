// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ddz.proto

package proto;

public final class Ddz {
  private Ddz() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface PBDdzCalculateOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 run_pos = 1;
    /**
     * <code>required int32 run_pos = 1;</code>
     */
    boolean hasRunPos();
    /**
     * <code>required int32 run_pos = 1;</code>
     */
    int getRunPos();

    // repeated .proto.PBDdzCalculateItem player_cal = 2;
    /**
     * <code>repeated .proto.PBDdzCalculateItem player_cal = 2;</code>
     */
    java.util.List<PBDdzCalculateItem>
        getPlayerCalList();
    /**
     * <code>repeated .proto.PBDdzCalculateItem player_cal = 2;</code>
     */
    PBDdzCalculateItem getPlayerCal(int index);
    /**
     * <code>repeated .proto.PBDdzCalculateItem player_cal = 2;</code>
     */
    int getPlayerCalCount();
    /**
     * <code>repeated .proto.PBDdzCalculateItem player_cal = 2;</code>
     */
    java.util.List<? extends PBDdzCalculateItemOrBuilder>
        getPlayerCalOrBuilderList();
    /**
     * <code>repeated .proto.PBDdzCalculateItem player_cal = 2;</code>
     */
    PBDdzCalculateItemOrBuilder getPlayerCalOrBuilder(
			int index);

    // repeated .proto.PBIntIntList player_card = 3;
    /**
     * <code>repeated .proto.PBIntIntList player_card = 3;</code>
     */
    java.util.List<Common.PBIntIntList>
        getPlayerCardList();
    /**
     * <code>repeated .proto.PBIntIntList player_card = 3;</code>
     */
    Common.PBIntIntList getPlayerCard(int index);
    /**
     * <code>repeated .proto.PBIntIntList player_card = 3;</code>
     */
    int getPlayerCardCount();
    /**
     * <code>repeated .proto.PBIntIntList player_card = 3;</code>
     */
    java.util.List<? extends Common.PBIntIntListOrBuilder>
        getPlayerCardOrBuilderList();
    /**
     * <code>repeated .proto.PBIntIntList player_card = 3;</code>
     */
    Common.PBIntIntListOrBuilder getPlayerCardOrBuilder(
			int index);
  }
  /**
   * Protobuf type {@code proto.PBDdzCalculate}
   */
  public static final class PBDdzCalculate extends
      com.google.protobuf.GeneratedMessage
      implements PBDdzCalculateOrBuilder {
    // Use PBDdzCalculate.newBuilder() to construct.
    private PBDdzCalculate(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PBDdzCalculate(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PBDdzCalculate defaultInstance;
    public static PBDdzCalculate getDefaultInstance() {
      return defaultInstance;
    }

    public PBDdzCalculate getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PBDdzCalculate(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              runPos_ = input.readInt32();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                playerCal_ = new java.util.ArrayList<PBDdzCalculateItem>();
                mutable_bitField0_ |= 0x00000002;
              }
              playerCal_.add(input.readMessage(PBDdzCalculateItem.PARSER, extensionRegistry));
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                playerCard_ = new java.util.ArrayList<Common.PBIntIntList>();
                mutable_bitField0_ |= 0x00000004;
              }
              playerCard_.add(input.readMessage(Common.PBIntIntList.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          playerCal_ = java.util.Collections.unmodifiableList(playerCal_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          playerCard_ = java.util.Collections.unmodifiableList(playerCard_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Ddz.internal_static_protobuf_PBDdzCalculate_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Ddz.internal_static_protobuf_PBDdzCalculate_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              PBDdzCalculate.class, Builder.class);
    }

    public static com.google.protobuf.Parser<PBDdzCalculate> PARSER =
        new com.google.protobuf.AbstractParser<PBDdzCalculate>() {
      public PBDdzCalculate parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PBDdzCalculate(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<PBDdzCalculate> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 run_pos = 1;
    public static final int RUN_POS_FIELD_NUMBER = 1;
    private int runPos_;
    /**
     * <code>required int32 run_pos = 1;</code>
     */
    public boolean hasRunPos() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 run_pos = 1;</code>
     */
    public int getRunPos() {
      return runPos_;
    }

    // repeated .proto.PBDdzCalculateItem player_cal = 2;
    public static final int PLAYER_CAL_FIELD_NUMBER = 2;
    private java.util.List<PBDdzCalculateItem> playerCal_;
    /**
     * <code>repeated .proto.PBDdzCalculateItem player_cal = 2;</code>
     */
    public java.util.List<PBDdzCalculateItem> getPlayerCalList() {
      return playerCal_;
    }
    /**
     * <code>repeated .proto.PBDdzCalculateItem player_cal = 2;</code>
     */
    public java.util.List<? extends PBDdzCalculateItemOrBuilder>
        getPlayerCalOrBuilderList() {
      return playerCal_;
    }
    /**
     * <code>repeated .proto.PBDdzCalculateItem player_cal = 2;</code>
     */
    public int getPlayerCalCount() {
      return playerCal_.size();
    }
    /**
     * <code>repeated .proto.PBDdzCalculateItem player_cal = 2;</code>
     */
    public PBDdzCalculateItem getPlayerCal(int index) {
      return playerCal_.get(index);
    }
    /**
     * <code>repeated .proto.PBDdzCalculateItem player_cal = 2;</code>
     */
    public PBDdzCalculateItemOrBuilder getPlayerCalOrBuilder(
        int index) {
      return playerCal_.get(index);
    }

    // repeated .proto.PBIntIntList player_card = 3;
    public static final int PLAYER_CARD_FIELD_NUMBER = 3;
    private java.util.List<Common.PBIntIntList> playerCard_;
    /**
     * <code>repeated .proto.PBIntIntList player_card = 3;</code>
     */
    public java.util.List<Common.PBIntIntList> getPlayerCardList() {
      return playerCard_;
    }
    /**
     * <code>repeated .proto.PBIntIntList player_card = 3;</code>
     */
    public java.util.List<? extends Common.PBIntIntListOrBuilder>
        getPlayerCardOrBuilderList() {
      return playerCard_;
    }
    /**
     * <code>repeated .proto.PBIntIntList player_card = 3;</code>
     */
    public int getPlayerCardCount() {
      return playerCard_.size();
    }
    /**
     * <code>repeated .proto.PBIntIntList player_card = 3;</code>
     */
    public Common.PBIntIntList getPlayerCard(int index) {
      return playerCard_.get(index);
    }
    /**
     * <code>repeated .proto.PBIntIntList player_card = 3;</code>
     */
    public Common.PBIntIntListOrBuilder getPlayerCardOrBuilder(
        int index) {
      return playerCard_.get(index);
    }

    private void initFields() {
      runPos_ = 0;
      playerCal_ = java.util.Collections.emptyList();
      playerCard_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasRunPos()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getPlayerCalCount(); i++) {
        if (!getPlayerCal(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getPlayerCardCount(); i++) {
        if (!getPlayerCard(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, runPos_);
      }
      for (int i = 0; i < playerCal_.size(); i++) {
        output.writeMessage(2, playerCal_.get(i));
      }
      for (int i = 0; i < playerCard_.size(); i++) {
        output.writeMessage(3, playerCard_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, runPos_);
      }
      for (int i = 0; i < playerCal_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, playerCal_.get(i));
      }
      for (int i = 0; i < playerCard_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, playerCard_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static PBDdzCalculate parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static PBDdzCalculate parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static PBDdzCalculate parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static PBDdzCalculate parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static PBDdzCalculate parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static PBDdzCalculate parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static PBDdzCalculate parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static PBDdzCalculate parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static PBDdzCalculate parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static PBDdzCalculate parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(PBDdzCalculate prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code proto.PBDdzCalculate}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements PBDdzCalculateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Ddz.internal_static_protobuf_PBDdzCalculate_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Ddz.internal_static_protobuf_PBDdzCalculate_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                PBDdzCalculate.class, Builder.class);
      }

      // Construct using proto.Ddz.PBDdzCalculate.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getPlayerCalFieldBuilder();
          getPlayerCardFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        runPos_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (playerCalBuilder_ == null) {
          playerCal_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          playerCalBuilder_.clear();
        }
        if (playerCardBuilder_ == null) {
          playerCard_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          playerCardBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Ddz.internal_static_protobuf_PBDdzCalculate_descriptor;
      }

      public PBDdzCalculate getDefaultInstanceForType() {
        return PBDdzCalculate.getDefaultInstance();
      }

      public PBDdzCalculate build() {
        PBDdzCalculate result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public PBDdzCalculate buildPartial() {
        PBDdzCalculate result = new PBDdzCalculate(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.runPos_ = runPos_;
        if (playerCalBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            playerCal_ = java.util.Collections.unmodifiableList(playerCal_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.playerCal_ = playerCal_;
        } else {
          result.playerCal_ = playerCalBuilder_.build();
        }
        if (playerCardBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            playerCard_ = java.util.Collections.unmodifiableList(playerCard_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.playerCard_ = playerCard_;
        } else {
          result.playerCard_ = playerCardBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof PBDdzCalculate) {
          return mergeFrom((PBDdzCalculate)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(PBDdzCalculate other) {
        if (other == PBDdzCalculate.getDefaultInstance()) return this;
        if (other.hasRunPos()) {
          setRunPos(other.getRunPos());
        }
        if (playerCalBuilder_ == null) {
          if (!other.playerCal_.isEmpty()) {
            if (playerCal_.isEmpty()) {
              playerCal_ = other.playerCal_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensurePlayerCalIsMutable();
              playerCal_.addAll(other.playerCal_);
            }
            onChanged();
          }
        } else {
          if (!other.playerCal_.isEmpty()) {
            if (playerCalBuilder_.isEmpty()) {
              playerCalBuilder_.dispose();
              playerCalBuilder_ = null;
              playerCal_ = other.playerCal_;
              bitField0_ = (bitField0_ & ~0x00000002);
              playerCalBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPlayerCalFieldBuilder() : null;
            } else {
              playerCalBuilder_.addAllMessages(other.playerCal_);
            }
          }
        }
        if (playerCardBuilder_ == null) {
          if (!other.playerCard_.isEmpty()) {
            if (playerCard_.isEmpty()) {
              playerCard_ = other.playerCard_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensurePlayerCardIsMutable();
              playerCard_.addAll(other.playerCard_);
            }
            onChanged();
          }
        } else {
          if (!other.playerCard_.isEmpty()) {
            if (playerCardBuilder_.isEmpty()) {
              playerCardBuilder_.dispose();
              playerCardBuilder_ = null;
              playerCard_ = other.playerCard_;
              bitField0_ = (bitField0_ & ~0x00000004);
              playerCardBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPlayerCardFieldBuilder() : null;
            } else {
              playerCardBuilder_.addAllMessages(other.playerCard_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasRunPos()) {
          
          return false;
        }
        for (int i = 0; i < getPlayerCalCount(); i++) {
          if (!getPlayerCal(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getPlayerCardCount(); i++) {
          if (!getPlayerCard(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        PBDdzCalculate parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (PBDdzCalculate) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 run_pos = 1;
      private int runPos_ ;
      /**
       * <code>required int32 run_pos = 1;</code>
       */
      public boolean hasRunPos() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 run_pos = 1;</code>
       */
      public int getRunPos() {
        return runPos_;
      }
      /**
       * <code>required int32 run_pos = 1;</code>
       */
      public Builder setRunPos(int value) {
        bitField0_ |= 0x00000001;
        runPos_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 run_pos = 1;</code>
       */
      public Builder clearRunPos() {
        bitField0_ = (bitField0_ & ~0x00000001);
        runPos_ = 0;
        onChanged();
        return this;
      }

      // repeated .proto.PBDdzCalculateItem player_cal = 2;
      private java.util.List<PBDdzCalculateItem> playerCal_ =
        java.util.Collections.emptyList();
      private void ensurePlayerCalIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          playerCal_ = new java.util.ArrayList<PBDdzCalculateItem>(playerCal_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          PBDdzCalculateItem, PBDdzCalculateItem.Builder, PBDdzCalculateItemOrBuilder> playerCalBuilder_;

      /**
       * <code>repeated .proto.PBDdzCalculateItem player_cal = 2;</code>
       */
      public java.util.List<PBDdzCalculateItem> getPlayerCalList() {
        if (playerCalBuilder_ == null) {
          return java.util.Collections.unmodifiableList(playerCal_);
        } else {
          return playerCalBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .proto.PBDdzCalculateItem player_cal = 2;</code>
       */
      public int getPlayerCalCount() {
        if (playerCalBuilder_ == null) {
          return playerCal_.size();
        } else {
          return playerCalBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .proto.PBDdzCalculateItem player_cal = 2;</code>
       */
      public PBDdzCalculateItem getPlayerCal(int index) {
        if (playerCalBuilder_ == null) {
          return playerCal_.get(index);
        } else {
          return playerCalBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .proto.PBDdzCalculateItem player_cal = 2;</code>
       */
      public Builder setPlayerCal(
          int index, PBDdzCalculateItem value) {
        if (playerCalBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayerCalIsMutable();
          playerCal_.set(index, value);
          onChanged();
        } else {
          playerCalBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .proto.PBDdzCalculateItem player_cal = 2;</code>
       */
      public Builder setPlayerCal(
          int index, PBDdzCalculateItem.Builder builderForValue) {
        if (playerCalBuilder_ == null) {
          ensurePlayerCalIsMutable();
          playerCal_.set(index, builderForValue.build());
          onChanged();
        } else {
          playerCalBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .proto.PBDdzCalculateItem player_cal = 2;</code>
       */
      public Builder addPlayerCal(PBDdzCalculateItem value) {
        if (playerCalBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayerCalIsMutable();
          playerCal_.add(value);
          onChanged();
        } else {
          playerCalBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .proto.PBDdzCalculateItem player_cal = 2;</code>
       */
      public Builder addPlayerCal(
          int index, PBDdzCalculateItem value) {
        if (playerCalBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayerCalIsMutable();
          playerCal_.add(index, value);
          onChanged();
        } else {
          playerCalBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .proto.PBDdzCalculateItem player_cal = 2;</code>
       */
      public Builder addPlayerCal(
          PBDdzCalculateItem.Builder builderForValue) {
        if (playerCalBuilder_ == null) {
          ensurePlayerCalIsMutable();
          playerCal_.add(builderForValue.build());
          onChanged();
        } else {
          playerCalBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .proto.PBDdzCalculateItem player_cal = 2;</code>
       */
      public Builder addPlayerCal(
          int index, PBDdzCalculateItem.Builder builderForValue) {
        if (playerCalBuilder_ == null) {
          ensurePlayerCalIsMutable();
          playerCal_.add(index, builderForValue.build());
          onChanged();
        } else {
          playerCalBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .proto.PBDdzCalculateItem player_cal = 2;</code>
       */
      public Builder addAllPlayerCal(
          Iterable<? extends PBDdzCalculateItem> values) {
        if (playerCalBuilder_ == null) {
          ensurePlayerCalIsMutable();
          super.addAll(values, playerCal_);
          onChanged();
        } else {
          playerCalBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .proto.PBDdzCalculateItem player_cal = 2;</code>
       */
      public Builder clearPlayerCal() {
        if (playerCalBuilder_ == null) {
          playerCal_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          playerCalBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .proto.PBDdzCalculateItem player_cal = 2;</code>
       */
      public Builder removePlayerCal(int index) {
        if (playerCalBuilder_ == null) {
          ensurePlayerCalIsMutable();
          playerCal_.remove(index);
          onChanged();
        } else {
          playerCalBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .proto.PBDdzCalculateItem player_cal = 2;</code>
       */
      public PBDdzCalculateItem.Builder getPlayerCalBuilder(
          int index) {
        return getPlayerCalFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .proto.PBDdzCalculateItem player_cal = 2;</code>
       */
      public PBDdzCalculateItemOrBuilder getPlayerCalOrBuilder(
          int index) {
        if (playerCalBuilder_ == null) {
          return playerCal_.get(index);  } else {
          return playerCalBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .proto.PBDdzCalculateItem player_cal = 2;</code>
       */
      public java.util.List<? extends PBDdzCalculateItemOrBuilder>
           getPlayerCalOrBuilderList() {
        if (playerCalBuilder_ != null) {
          return playerCalBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(playerCal_);
        }
      }
      /**
       * <code>repeated .proto.PBDdzCalculateItem player_cal = 2;</code>
       */
      public PBDdzCalculateItem.Builder addPlayerCalBuilder() {
        return getPlayerCalFieldBuilder().addBuilder(
            PBDdzCalculateItem.getDefaultInstance());
      }
      /**
       * <code>repeated .proto.PBDdzCalculateItem player_cal = 2;</code>
       */
      public PBDdzCalculateItem.Builder addPlayerCalBuilder(
          int index) {
        return getPlayerCalFieldBuilder().addBuilder(
            index, PBDdzCalculateItem.getDefaultInstance());
      }
      /**
       * <code>repeated .proto.PBDdzCalculateItem player_cal = 2;</code>
       */
      public java.util.List<PBDdzCalculateItem.Builder>
           getPlayerCalBuilderList() {
        return getPlayerCalFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          PBDdzCalculateItem, PBDdzCalculateItem.Builder, PBDdzCalculateItemOrBuilder>
          getPlayerCalFieldBuilder() {
        if (playerCalBuilder_ == null) {
          playerCalBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              PBDdzCalculateItem, PBDdzCalculateItem.Builder, PBDdzCalculateItemOrBuilder>(
                  playerCal_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          playerCal_ = null;
        }
        return playerCalBuilder_;
      }

      // repeated .proto.PBIntIntList player_card = 3;
      private java.util.List<Common.PBIntIntList> playerCard_ =
        java.util.Collections.emptyList();
      private void ensurePlayerCardIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          playerCard_ = new java.util.ArrayList<Common.PBIntIntList>(playerCard_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          Common.PBIntIntList, Common.PBIntIntList.Builder, Common.PBIntIntListOrBuilder> playerCardBuilder_;

      /**
       * <code>repeated .proto.PBIntIntList player_card = 3;</code>
       */
      public java.util.List<Common.PBIntIntList> getPlayerCardList() {
        if (playerCardBuilder_ == null) {
          return java.util.Collections.unmodifiableList(playerCard_);
        } else {
          return playerCardBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .proto.PBIntIntList player_card = 3;</code>
       */
      public int getPlayerCardCount() {
        if (playerCardBuilder_ == null) {
          return playerCard_.size();
        } else {
          return playerCardBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .proto.PBIntIntList player_card = 3;</code>
       */
      public Common.PBIntIntList getPlayerCard(int index) {
        if (playerCardBuilder_ == null) {
          return playerCard_.get(index);
        } else {
          return playerCardBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .proto.PBIntIntList player_card = 3;</code>
       */
      public Builder setPlayerCard(
          int index, Common.PBIntIntList value) {
        if (playerCardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayerCardIsMutable();
          playerCard_.set(index, value);
          onChanged();
        } else {
          playerCardBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .proto.PBIntIntList player_card = 3;</code>
       */
      public Builder setPlayerCard(
          int index, Common.PBIntIntList.Builder builderForValue) {
        if (playerCardBuilder_ == null) {
          ensurePlayerCardIsMutable();
          playerCard_.set(index, builderForValue.build());
          onChanged();
        } else {
          playerCardBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .proto.PBIntIntList player_card = 3;</code>
       */
      public Builder addPlayerCard(Common.PBIntIntList value) {
        if (playerCardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayerCardIsMutable();
          playerCard_.add(value);
          onChanged();
        } else {
          playerCardBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .proto.PBIntIntList player_card = 3;</code>
       */
      public Builder addPlayerCard(
          int index, Common.PBIntIntList value) {
        if (playerCardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayerCardIsMutable();
          playerCard_.add(index, value);
          onChanged();
        } else {
          playerCardBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .proto.PBIntIntList player_card = 3;</code>
       */
      public Builder addPlayerCard(
          Common.PBIntIntList.Builder builderForValue) {
        if (playerCardBuilder_ == null) {
          ensurePlayerCardIsMutable();
          playerCard_.add(builderForValue.build());
          onChanged();
        } else {
          playerCardBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .proto.PBIntIntList player_card = 3;</code>
       */
      public Builder addPlayerCard(
          int index, Common.PBIntIntList.Builder builderForValue) {
        if (playerCardBuilder_ == null) {
          ensurePlayerCardIsMutable();
          playerCard_.add(index, builderForValue.build());
          onChanged();
        } else {
          playerCardBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .proto.PBIntIntList player_card = 3;</code>
       */
      public Builder addAllPlayerCard(
          Iterable<? extends Common.PBIntIntList> values) {
        if (playerCardBuilder_ == null) {
          ensurePlayerCardIsMutable();
          super.addAll(values, playerCard_);
          onChanged();
        } else {
          playerCardBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .proto.PBIntIntList player_card = 3;</code>
       */
      public Builder clearPlayerCard() {
        if (playerCardBuilder_ == null) {
          playerCard_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          playerCardBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .proto.PBIntIntList player_card = 3;</code>
       */
      public Builder removePlayerCard(int index) {
        if (playerCardBuilder_ == null) {
          ensurePlayerCardIsMutable();
          playerCard_.remove(index);
          onChanged();
        } else {
          playerCardBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .proto.PBIntIntList player_card = 3;</code>
       */
      public Common.PBIntIntList.Builder getPlayerCardBuilder(
          int index) {
        return getPlayerCardFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .proto.PBIntIntList player_card = 3;</code>
       */
      public Common.PBIntIntListOrBuilder getPlayerCardOrBuilder(
          int index) {
        if (playerCardBuilder_ == null) {
          return playerCard_.get(index);  } else {
          return playerCardBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .proto.PBIntIntList player_card = 3;</code>
       */
      public java.util.List<? extends Common.PBIntIntListOrBuilder>
           getPlayerCardOrBuilderList() {
        if (playerCardBuilder_ != null) {
          return playerCardBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(playerCard_);
        }
      }
      /**
       * <code>repeated .proto.PBIntIntList player_card = 3;</code>
       */
      public Common.PBIntIntList.Builder addPlayerCardBuilder() {
        return getPlayerCardFieldBuilder().addBuilder(
            Common.PBIntIntList.getDefaultInstance());
      }
      /**
       * <code>repeated .proto.PBIntIntList player_card = 3;</code>
       */
      public Common.PBIntIntList.Builder addPlayerCardBuilder(
          int index) {
        return getPlayerCardFieldBuilder().addBuilder(
            index, Common.PBIntIntList.getDefaultInstance());
      }
      /**
       * <code>repeated .proto.PBIntIntList player_card = 3;</code>
       */
      public java.util.List<Common.PBIntIntList.Builder>
           getPlayerCardBuilderList() {
        return getPlayerCardFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          Common.PBIntIntList, Common.PBIntIntList.Builder, Common.PBIntIntListOrBuilder>
          getPlayerCardFieldBuilder() {
        if (playerCardBuilder_ == null) {
          playerCardBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              Common.PBIntIntList, Common.PBIntIntList.Builder, Common.PBIntIntListOrBuilder>(
                  playerCard_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          playerCard_ = null;
        }
        return playerCardBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:proto.PBDdzCalculate)
    }

    static {
      defaultInstance = new PBDdzCalculate(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:proto.PBDdzCalculate)
  }

  public interface PBDdzCalculateItemOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 player_id = 1;
    /**
     * <code>required int32 player_id = 1;</code>
     *
     * <pre>
     * 玩家id
     * </pre>
     */
    boolean hasPlayerId();
    /**
     * <code>required int32 player_id = 1;</code>
     *
     * <pre>
     * 玩家id
     * </pre>
     */
    int getPlayerId();

    // required string name = 2;
    /**
     * <code>required string name = 2;</code>
     *
     * <pre>
     *玩家名 
     * </pre>
     */
    boolean hasName();
    /**
     * <code>required string name = 2;</code>
     *
     * <pre>
     *玩家名 
     * </pre>
     */
    String getName();
    /**
     * <code>required string name = 2;</code>
     *
     * <pre>
     *玩家名 
     * </pre>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    // required int32 times = 3;
    /**
     * <code>required int32 times = 3;</code>
     *
     * <pre>
     *倍数
     * </pre>
     */
    boolean hasTimes();
    /**
     * <code>required int32 times = 3;</code>
     *
     * <pre>
     *倍数
     * </pre>
     */
    int getTimes();

    // required int32 gain_lose = 4;
    /**
     * <code>required int32 gain_lose = 4;</code>
     *
     * <pre>
     *玩家输赢
     * </pre>
     */
    boolean hasGainLose();
    /**
     * <code>required int32 gain_lose = 4;</code>
     *
     * <pre>
     *玩家输赢
     * </pre>
     */
    int getGainLose();
  }
  /**
   * Protobuf type {@code proto.PBDdzCalculateItem}
   */
  public static final class PBDdzCalculateItem extends
      com.google.protobuf.GeneratedMessage
      implements PBDdzCalculateItemOrBuilder {
    // Use PBDdzCalculateItem.newBuilder() to construct.
    private PBDdzCalculateItem(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PBDdzCalculateItem(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PBDdzCalculateItem defaultInstance;
    public static PBDdzCalculateItem getDefaultInstance() {
      return defaultInstance;
    }

    public PBDdzCalculateItem getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PBDdzCalculateItem(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              playerId_ = input.readInt32();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              name_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              times_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              gainLose_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Ddz.internal_static_protobuf_PBDdzCalculateItem_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Ddz.internal_static_protobuf_PBDdzCalculateItem_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              PBDdzCalculateItem.class, Builder.class);
    }

    public static com.google.protobuf.Parser<PBDdzCalculateItem> PARSER =
        new com.google.protobuf.AbstractParser<PBDdzCalculateItem>() {
      public PBDdzCalculateItem parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PBDdzCalculateItem(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<PBDdzCalculateItem> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 player_id = 1;
    public static final int PLAYER_ID_FIELD_NUMBER = 1;
    private int playerId_;
    /**
     * <code>required int32 player_id = 1;</code>
     *
     * <pre>
     * 玩家id
     * </pre>
     */
    public boolean hasPlayerId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 player_id = 1;</code>
     *
     * <pre>
     * 玩家id
     * </pre>
     */
    public int getPlayerId() {
      return playerId_;
    }

    // required string name = 2;
    public static final int NAME_FIELD_NUMBER = 2;
    private Object name_;
    /**
     * <code>required string name = 2;</code>
     *
     * <pre>
     *玩家名 
     * </pre>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string name = 2;</code>
     *
     * <pre>
     *玩家名 
     * </pre>
     */
    public String getName() {
      Object ref = name_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string name = 2;</code>
     *
     * <pre>
     *玩家名 
     * </pre>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required int32 times = 3;
    public static final int TIMES_FIELD_NUMBER = 3;
    private int times_;
    /**
     * <code>required int32 times = 3;</code>
     *
     * <pre>
     *倍数
     * </pre>
     */
    public boolean hasTimes() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 times = 3;</code>
     *
     * <pre>
     *倍数
     * </pre>
     */
    public int getTimes() {
      return times_;
    }

    // required int32 gain_lose = 4;
    public static final int GAIN_LOSE_FIELD_NUMBER = 4;
    private int gainLose_;
    /**
     * <code>required int32 gain_lose = 4;</code>
     *
     * <pre>
     *玩家输赢
     * </pre>
     */
    public boolean hasGainLose() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int32 gain_lose = 4;</code>
     *
     * <pre>
     *玩家输赢
     * </pre>
     */
    public int getGainLose() {
      return gainLose_;
    }

    private void initFields() {
      playerId_ = 0;
      name_ = "";
      times_ = 0;
      gainLose_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasPlayerId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTimes()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasGainLose()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, playerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, times_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, gainLose_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, playerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, times_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, gainLose_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static PBDdzCalculateItem parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static PBDdzCalculateItem parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static PBDdzCalculateItem parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static PBDdzCalculateItem parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static PBDdzCalculateItem parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static PBDdzCalculateItem parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static PBDdzCalculateItem parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static PBDdzCalculateItem parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static PBDdzCalculateItem parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static PBDdzCalculateItem parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(PBDdzCalculateItem prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code proto.PBDdzCalculateItem}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements PBDdzCalculateItemOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Ddz.internal_static_protobuf_PBDdzCalculateItem_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Ddz.internal_static_protobuf_PBDdzCalculateItem_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                PBDdzCalculateItem.class, Builder.class);
      }

      // Construct using proto.Ddz.PBDdzCalculateItem.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        playerId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        times_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        gainLose_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Ddz.internal_static_protobuf_PBDdzCalculateItem_descriptor;
      }

      public PBDdzCalculateItem getDefaultInstanceForType() {
        return PBDdzCalculateItem.getDefaultInstance();
      }

      public PBDdzCalculateItem build() {
        PBDdzCalculateItem result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public PBDdzCalculateItem buildPartial() {
        PBDdzCalculateItem result = new PBDdzCalculateItem(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.playerId_ = playerId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.times_ = times_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.gainLose_ = gainLose_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof PBDdzCalculateItem) {
          return mergeFrom((PBDdzCalculateItem)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(PBDdzCalculateItem other) {
        if (other == PBDdzCalculateItem.getDefaultInstance()) return this;
        if (other.hasPlayerId()) {
          setPlayerId(other.getPlayerId());
        }
        if (other.hasName()) {
          bitField0_ |= 0x00000002;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasTimes()) {
          setTimes(other.getTimes());
        }
        if (other.hasGainLose()) {
          setGainLose(other.getGainLose());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasPlayerId()) {
          
          return false;
        }
        if (!hasName()) {
          
          return false;
        }
        if (!hasTimes()) {
          
          return false;
        }
        if (!hasGainLose()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        PBDdzCalculateItem parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (PBDdzCalculateItem) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 player_id = 1;
      private int playerId_ ;
      /**
       * <code>required int32 player_id = 1;</code>
       *
       * <pre>
       * 玩家id
       * </pre>
       */
      public boolean hasPlayerId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 player_id = 1;</code>
       *
       * <pre>
       * 玩家id
       * </pre>
       */
      public int getPlayerId() {
        return playerId_;
      }
      /**
       * <code>required int32 player_id = 1;</code>
       *
       * <pre>
       * 玩家id
       * </pre>
       */
      public Builder setPlayerId(int value) {
        bitField0_ |= 0x00000001;
        playerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 player_id = 1;</code>
       *
       * <pre>
       * 玩家id
       * </pre>
       */
      public Builder clearPlayerId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        playerId_ = 0;
        onChanged();
        return this;
      }

      // required string name = 2;
      private Object name_ = "";
      /**
       * <code>required string name = 2;</code>
       *
       * <pre>
       *玩家名 
       * </pre>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string name = 2;</code>
       *
       * <pre>
       *玩家名 
       * </pre>
       */
      public String getName() {
        Object ref = name_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>required string name = 2;</code>
       *
       * <pre>
       *玩家名 
       * </pre>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string name = 2;</code>
       *
       * <pre>
       *玩家名 
       * </pre>
       */
      public Builder setName(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 2;</code>
       *
       * <pre>
       *玩家名 
       * </pre>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 2;</code>
       *
       * <pre>
       *玩家名 
       * </pre>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }

      // required int32 times = 3;
      private int times_ ;
      /**
       * <code>required int32 times = 3;</code>
       *
       * <pre>
       *倍数
       * </pre>
       */
      public boolean hasTimes() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 times = 3;</code>
       *
       * <pre>
       *倍数
       * </pre>
       */
      public int getTimes() {
        return times_;
      }
      /**
       * <code>required int32 times = 3;</code>
       *
       * <pre>
       *倍数
       * </pre>
       */
      public Builder setTimes(int value) {
        bitField0_ |= 0x00000004;
        times_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 times = 3;</code>
       *
       * <pre>
       *倍数
       * </pre>
       */
      public Builder clearTimes() {
        bitField0_ = (bitField0_ & ~0x00000004);
        times_ = 0;
        onChanged();
        return this;
      }

      // required int32 gain_lose = 4;
      private int gainLose_ ;
      /**
       * <code>required int32 gain_lose = 4;</code>
       *
       * <pre>
       *玩家输赢
       * </pre>
       */
      public boolean hasGainLose() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int32 gain_lose = 4;</code>
       *
       * <pre>
       *玩家输赢
       * </pre>
       */
      public int getGainLose() {
        return gainLose_;
      }
      /**
       * <code>required int32 gain_lose = 4;</code>
       *
       * <pre>
       *玩家输赢
       * </pre>
       */
      public Builder setGainLose(int value) {
        bitField0_ |= 0x00000008;
        gainLose_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 gain_lose = 4;</code>
       *
       * <pre>
       *玩家输赢
       * </pre>
       */
      public Builder clearGainLose() {
        bitField0_ = (bitField0_ & ~0x00000008);
        gainLose_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:proto.PBDdzCalculateItem)
    }

    static {
      defaultInstance = new PBDdzCalculateItem(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:proto.PBDdzCalculateItem)
  }

  public interface PBDealLordCardOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated int32 card_list = 1;
    /**
     * <code>repeated int32 card_list = 1;</code>
     *
     * <pre>
     *地主牌 
     * </pre>
     */
    java.util.List<Integer> getCardListList();
    /**
     * <code>repeated int32 card_list = 1;</code>
     *
     * <pre>
     *地主牌 
     * </pre>
     */
    int getCardListCount();
    /**
     * <code>repeated int32 card_list = 1;</code>
     *
     * <pre>
     *地主牌 
     * </pre>
     */
    int getCardList(int index);

    // optional int32 lz_value = 2;
    /**
     * <code>optional int32 lz_value = 2;</code>
     *
     * <pre>
     *癞子
     * </pre>
     */
    boolean hasLzValue();
    /**
     * <code>optional int32 lz_value = 2;</code>
     *
     * <pre>
     *癞子
     * </pre>
     */
    int getLzValue();

    // required int32 pos = 3;
    /**
     * <code>required int32 pos = 3;</code>
     *
     * <pre>
     *地主的位置
     * </pre>
     */
    boolean hasPos();
    /**
     * <code>required int32 pos = 3;</code>
     *
     * <pre>
     *地主的位置
     * </pre>
     */
    int getPos();
  }
  /**
   * Protobuf type {@code proto.PBDealLordCard}
   */
  public static final class PBDealLordCard extends
      com.google.protobuf.GeneratedMessage
      implements PBDealLordCardOrBuilder {
    // Use PBDealLordCard.newBuilder() to construct.
    private PBDealLordCard(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PBDealLordCard(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PBDealLordCard defaultInstance;
    public static PBDealLordCard getDefaultInstance() {
      return defaultInstance;
    }

    public PBDealLordCard getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PBDealLordCard(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                cardList_ = new java.util.ArrayList<Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              cardList_.add(input.readInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                cardList_ = new java.util.ArrayList<Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                cardList_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 16: {
              bitField0_ |= 0x00000001;
              lzValue_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              pos_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          cardList_ = java.util.Collections.unmodifiableList(cardList_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Ddz.internal_static_protobuf_PBDealLordCard_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Ddz.internal_static_protobuf_PBDealLordCard_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              PBDealLordCard.class, Builder.class);
    }

    public static com.google.protobuf.Parser<PBDealLordCard> PARSER =
        new com.google.protobuf.AbstractParser<PBDealLordCard>() {
      public PBDealLordCard parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PBDealLordCard(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<PBDealLordCard> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // repeated int32 card_list = 1;
    public static final int CARD_LIST_FIELD_NUMBER = 1;
    private java.util.List<Integer> cardList_;
    /**
     * <code>repeated int32 card_list = 1;</code>
     *
     * <pre>
     *地主牌 
     * </pre>
     */
    public java.util.List<Integer>
        getCardListList() {
      return cardList_;
    }
    /**
     * <code>repeated int32 card_list = 1;</code>
     *
     * <pre>
     *地主牌 
     * </pre>
     */
    public int getCardListCount() {
      return cardList_.size();
    }
    /**
     * <code>repeated int32 card_list = 1;</code>
     *
     * <pre>
     *地主牌 
     * </pre>
     */
    public int getCardList(int index) {
      return cardList_.get(index);
    }

    // optional int32 lz_value = 2;
    public static final int LZ_VALUE_FIELD_NUMBER = 2;
    private int lzValue_;
    /**
     * <code>optional int32 lz_value = 2;</code>
     *
     * <pre>
     *癞子
     * </pre>
     */
    public boolean hasLzValue() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 lz_value = 2;</code>
     *
     * <pre>
     *癞子
     * </pre>
     */
    public int getLzValue() {
      return lzValue_;
    }

    // required int32 pos = 3;
    public static final int POS_FIELD_NUMBER = 3;
    private int pos_;
    /**
     * <code>required int32 pos = 3;</code>
     *
     * <pre>
     *地主的位置
     * </pre>
     */
    public boolean hasPos() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 pos = 3;</code>
     *
     * <pre>
     *地主的位置
     * </pre>
     */
    public int getPos() {
      return pos_;
    }

    private void initFields() {
      cardList_ = java.util.Collections.emptyList();
      lzValue_ = 0;
      pos_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasPos()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < cardList_.size(); i++) {
        output.writeInt32(1, cardList_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(2, lzValue_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(3, pos_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < cardList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(cardList_.get(i));
        }
        size += dataSize;
        size += 1 * getCardListList().size();
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, lzValue_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, pos_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static PBDealLordCard parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static PBDealLordCard parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static PBDealLordCard parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static PBDealLordCard parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static PBDealLordCard parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static PBDealLordCard parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static PBDealLordCard parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static PBDealLordCard parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static PBDealLordCard parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static PBDealLordCard parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(PBDealLordCard prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code proto.PBDealLordCard}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements PBDealLordCardOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Ddz.internal_static_protobuf_PBDealLordCard_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Ddz.internal_static_protobuf_PBDealLordCard_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                PBDealLordCard.class, Builder.class);
      }

      // Construct using proto.Ddz.PBDealLordCard.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        cardList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        lzValue_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        pos_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Ddz.internal_static_protobuf_PBDealLordCard_descriptor;
      }

      public PBDealLordCard getDefaultInstanceForType() {
        return PBDealLordCard.getDefaultInstance();
      }

      public PBDealLordCard build() {
        PBDealLordCard result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public PBDealLordCard buildPartial() {
        PBDealLordCard result = new PBDealLordCard(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          cardList_ = java.util.Collections.unmodifiableList(cardList_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.cardList_ = cardList_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000001;
        }
        result.lzValue_ = lzValue_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.pos_ = pos_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof PBDealLordCard) {
          return mergeFrom((PBDealLordCard)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(PBDealLordCard other) {
        if (other == PBDealLordCard.getDefaultInstance()) return this;
        if (!other.cardList_.isEmpty()) {
          if (cardList_.isEmpty()) {
            cardList_ = other.cardList_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureCardListIsMutable();
            cardList_.addAll(other.cardList_);
          }
          onChanged();
        }
        if (other.hasLzValue()) {
          setLzValue(other.getLzValue());
        }
        if (other.hasPos()) {
          setPos(other.getPos());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasPos()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        PBDealLordCard parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (PBDealLordCard) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated int32 card_list = 1;
      private java.util.List<Integer> cardList_ = java.util.Collections.emptyList();
      private void ensureCardListIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          cardList_ = new java.util.ArrayList<Integer>(cardList_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated int32 card_list = 1;</code>
       *
       * <pre>
       *地主牌 
       * </pre>
       */
      public java.util.List<Integer>
          getCardListList() {
        return java.util.Collections.unmodifiableList(cardList_);
      }
      /**
       * <code>repeated int32 card_list = 1;</code>
       *
       * <pre>
       *地主牌 
       * </pre>
       */
      public int getCardListCount() {
        return cardList_.size();
      }
      /**
       * <code>repeated int32 card_list = 1;</code>
       *
       * <pre>
       *地主牌 
       * </pre>
       */
      public int getCardList(int index) {
        return cardList_.get(index);
      }
      /**
       * <code>repeated int32 card_list = 1;</code>
       *
       * <pre>
       *地主牌 
       * </pre>
       */
      public Builder setCardList(
          int index, int value) {
        ensureCardListIsMutable();
        cardList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_list = 1;</code>
       *
       * <pre>
       *地主牌 
       * </pre>
       */
      public Builder addCardList(int value) {
        ensureCardListIsMutable();
        cardList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_list = 1;</code>
       *
       * <pre>
       *地主牌 
       * </pre>
       */
      public Builder addAllCardList(
          Iterable<? extends Integer> values) {
        ensureCardListIsMutable();
        super.addAll(values, cardList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_list = 1;</code>
       *
       * <pre>
       *地主牌 
       * </pre>
       */
      public Builder clearCardList() {
        cardList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      // optional int32 lz_value = 2;
      private int lzValue_ ;
      /**
       * <code>optional int32 lz_value = 2;</code>
       *
       * <pre>
       *癞子
       * </pre>
       */
      public boolean hasLzValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 lz_value = 2;</code>
       *
       * <pre>
       *癞子
       * </pre>
       */
      public int getLzValue() {
        return lzValue_;
      }
      /**
       * <code>optional int32 lz_value = 2;</code>
       *
       * <pre>
       *癞子
       * </pre>
       */
      public Builder setLzValue(int value) {
        bitField0_ |= 0x00000002;
        lzValue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 lz_value = 2;</code>
       *
       * <pre>
       *癞子
       * </pre>
       */
      public Builder clearLzValue() {
        bitField0_ = (bitField0_ & ~0x00000002);
        lzValue_ = 0;
        onChanged();
        return this;
      }

      // required int32 pos = 3;
      private int pos_ ;
      /**
       * <code>required int32 pos = 3;</code>
       *
       * <pre>
       *地主的位置
       * </pre>
       */
      public boolean hasPos() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 pos = 3;</code>
       *
       * <pre>
       *地主的位置
       * </pre>
       */
      public int getPos() {
        return pos_;
      }
      /**
       * <code>required int32 pos = 3;</code>
       *
       * <pre>
       *地主的位置
       * </pre>
       */
      public Builder setPos(int value) {
        bitField0_ |= 0x00000004;
        pos_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 pos = 3;</code>
       *
       * <pre>
       *地主的位置
       * </pre>
       */
      public Builder clearPos() {
        bitField0_ = (bitField0_ & ~0x00000004);
        pos_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:proto.PBDealLordCard)
    }

    static {
      defaultInstance = new PBDealLordCard(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:proto.PBDealLordCard)
  }

  public interface PBDdzDiscardOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 type = 1;
    /**
     * <code>required int32 type = 1;</code>
     *
     * <pre>
     *出牌类型
     * </pre>
     */
    boolean hasType();
    /**
     * <code>required int32 type = 1;</code>
     *
     * <pre>
     *出牌类型
     * </pre>
     */
    int getType();

    // required int32 pos = 2;
    /**
     * <code>required int32 pos = 2;</code>
     *
     * <pre>
     *位置
     * </pre>
     */
    boolean hasPos();
    /**
     * <code>required int32 pos = 2;</code>
     *
     * <pre>
     *位置
     * </pre>
     */
    int getPos();

    // repeated int32 card_list = 3;
    /**
     * <code>repeated int32 card_list = 3;</code>
     *
     * <pre>
     *出牌类
     * </pre>
     */
    java.util.List<Integer> getCardListList();
    /**
     * <code>repeated int32 card_list = 3;</code>
     *
     * <pre>
     *出牌类
     * </pre>
     */
    int getCardListCount();
    /**
     * <code>repeated int32 card_list = 3;</code>
     *
     * <pre>
     *出牌类
     * </pre>
     */
    int getCardList(int index);
  }
  /**
   * Protobuf type {@code proto.PBDdzDiscard}
   */
  public static final class PBDdzDiscard extends
      com.google.protobuf.GeneratedMessage
      implements PBDdzDiscardOrBuilder {
    // Use PBDdzDiscard.newBuilder() to construct.
    private PBDdzDiscard(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PBDdzDiscard(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PBDdzDiscard defaultInstance;
    public static PBDdzDiscard getDefaultInstance() {
      return defaultInstance;
    }

    public PBDdzDiscard getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PBDdzDiscard(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              type_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              pos_ = input.readInt32();
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                cardList_ = new java.util.ArrayList<Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              cardList_.add(input.readInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                cardList_ = new java.util.ArrayList<Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                cardList_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          cardList_ = java.util.Collections.unmodifiableList(cardList_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Ddz.internal_static_protobuf_PBDdzDiscard_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Ddz.internal_static_protobuf_PBDdzDiscard_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              PBDdzDiscard.class, Builder.class);
    }

    public static com.google.protobuf.Parser<PBDdzDiscard> PARSER =
        new com.google.protobuf.AbstractParser<PBDdzDiscard>() {
      public PBDdzDiscard parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PBDdzDiscard(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<PBDdzDiscard> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 type = 1;
    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <code>required int32 type = 1;</code>
     *
     * <pre>
     *出牌类型
     * </pre>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 type = 1;</code>
     *
     * <pre>
     *出牌类型
     * </pre>
     */
    public int getType() {
      return type_;
    }

    // required int32 pos = 2;
    public static final int POS_FIELD_NUMBER = 2;
    private int pos_;
    /**
     * <code>required int32 pos = 2;</code>
     *
     * <pre>
     *位置
     * </pre>
     */
    public boolean hasPos() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 pos = 2;</code>
     *
     * <pre>
     *位置
     * </pre>
     */
    public int getPos() {
      return pos_;
    }

    // repeated int32 card_list = 3;
    public static final int CARD_LIST_FIELD_NUMBER = 3;
    private java.util.List<Integer> cardList_;
    /**
     * <code>repeated int32 card_list = 3;</code>
     *
     * <pre>
     *出牌类
     * </pre>
     */
    public java.util.List<Integer>
        getCardListList() {
      return cardList_;
    }
    /**
     * <code>repeated int32 card_list = 3;</code>
     *
     * <pre>
     *出牌类
     * </pre>
     */
    public int getCardListCount() {
      return cardList_.size();
    }
    /**
     * <code>repeated int32 card_list = 3;</code>
     *
     * <pre>
     *出牌类
     * </pre>
     */
    public int getCardList(int index) {
      return cardList_.get(index);
    }

    private void initFields() {
      type_ = 0;
      pos_ = 0;
      cardList_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPos()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, type_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, pos_);
      }
      for (int i = 0; i < cardList_.size(); i++) {
        output.writeInt32(3, cardList_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, type_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, pos_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cardList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(cardList_.get(i));
        }
        size += dataSize;
        size += 1 * getCardListList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static PBDdzDiscard parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static PBDdzDiscard parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static PBDdzDiscard parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static PBDdzDiscard parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static PBDdzDiscard parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static PBDdzDiscard parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static PBDdzDiscard parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static PBDdzDiscard parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static PBDdzDiscard parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static PBDdzDiscard parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(PBDdzDiscard prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code proto.PBDdzDiscard}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements PBDdzDiscardOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Ddz.internal_static_protobuf_PBDdzDiscard_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Ddz.internal_static_protobuf_PBDdzDiscard_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                PBDdzDiscard.class, Builder.class);
      }

      // Construct using proto.Ddz.PBDdzDiscard.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        type_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        pos_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        cardList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Ddz.internal_static_protobuf_PBDdzDiscard_descriptor;
      }

      public PBDdzDiscard getDefaultInstanceForType() {
        return PBDdzDiscard.getDefaultInstance();
      }

      public PBDdzDiscard build() {
        PBDdzDiscard result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public PBDdzDiscard buildPartial() {
        PBDdzDiscard result = new PBDdzDiscard(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.pos_ = pos_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          cardList_ = java.util.Collections.unmodifiableList(cardList_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.cardList_ = cardList_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof PBDdzDiscard) {
          return mergeFrom((PBDdzDiscard)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(PBDdzDiscard other) {
        if (other == PBDdzDiscard.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasPos()) {
          setPos(other.getPos());
        }
        if (!other.cardList_.isEmpty()) {
          if (cardList_.isEmpty()) {
            cardList_ = other.cardList_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureCardListIsMutable();
            cardList_.addAll(other.cardList_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasType()) {
          
          return false;
        }
        if (!hasPos()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        PBDdzDiscard parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (PBDdzDiscard) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 type = 1;
      private int type_ ;
      /**
       * <code>required int32 type = 1;</code>
       *
       * <pre>
       *出牌类型
       * </pre>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 type = 1;</code>
       *
       * <pre>
       *出牌类型
       * </pre>
       */
      public int getType() {
        return type_;
      }
      /**
       * <code>required int32 type = 1;</code>
       *
       * <pre>
       *出牌类型
       * </pre>
       */
      public Builder setType(int value) {
        bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 type = 1;</code>
       *
       * <pre>
       *出牌类型
       * </pre>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = 0;
        onChanged();
        return this;
      }

      // required int32 pos = 2;
      private int pos_ ;
      /**
       * <code>required int32 pos = 2;</code>
       *
       * <pre>
       *位置
       * </pre>
       */
      public boolean hasPos() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 pos = 2;</code>
       *
       * <pre>
       *位置
       * </pre>
       */
      public int getPos() {
        return pos_;
      }
      /**
       * <code>required int32 pos = 2;</code>
       *
       * <pre>
       *位置
       * </pre>
       */
      public Builder setPos(int value) {
        bitField0_ |= 0x00000002;
        pos_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 pos = 2;</code>
       *
       * <pre>
       *位置
       * </pre>
       */
      public Builder clearPos() {
        bitField0_ = (bitField0_ & ~0x00000002);
        pos_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 card_list = 3;
      private java.util.List<Integer> cardList_ = java.util.Collections.emptyList();
      private void ensureCardListIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          cardList_ = new java.util.ArrayList<Integer>(cardList_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated int32 card_list = 3;</code>
       *
       * <pre>
       *出牌类
       * </pre>
       */
      public java.util.List<Integer>
          getCardListList() {
        return java.util.Collections.unmodifiableList(cardList_);
      }
      /**
       * <code>repeated int32 card_list = 3;</code>
       *
       * <pre>
       *出牌类
       * </pre>
       */
      public int getCardListCount() {
        return cardList_.size();
      }
      /**
       * <code>repeated int32 card_list = 3;</code>
       *
       * <pre>
       *出牌类
       * </pre>
       */
      public int getCardList(int index) {
        return cardList_.get(index);
      }
      /**
       * <code>repeated int32 card_list = 3;</code>
       *
       * <pre>
       *出牌类
       * </pre>
       */
      public Builder setCardList(
          int index, int value) {
        ensureCardListIsMutable();
        cardList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_list = 3;</code>
       *
       * <pre>
       *出牌类
       * </pre>
       */
      public Builder addCardList(int value) {
        ensureCardListIsMutable();
        cardList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_list = 3;</code>
       *
       * <pre>
       *出牌类
       * </pre>
       */
      public Builder addAllCardList(
          Iterable<? extends Integer> values) {
        ensureCardListIsMutable();
        super.addAll(values, cardList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 card_list = 3;</code>
       *
       * <pre>
       *出牌类
       * </pre>
       */
      public Builder clearCardList() {
        cardList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:proto.PBDdzDiscard)
    }

    static {
      defaultInstance = new PBDdzDiscard(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:proto.PBDdzDiscard)
  }

  public interface PBDdzResetGameOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required .proto.PBPlayerInfoList player_list = 1;
    /**
     * <code>required .proto.PBPlayerInfoList player_list = 1;</code>
     *
     * <pre>
     *所有玩家的信息
     * </pre>
     */
    boolean hasPlayerList();
    /**
     * <code>required .proto.PBPlayerInfoList player_list = 1;</code>
     *
     * <pre>
     *所有玩家的信息
     * </pre>
     */
    Common.PBPlayerInfoList getPlayerList();
    /**
     * <code>required .proto.PBPlayerInfoList player_list = 1;</code>
     *
     * <pre>
     *所有玩家的信息
     * </pre>
     */
    Common.PBPlayerInfoListOrBuilder getPlayerListOrBuilder();

    // required int32 roomId = 2;
    /**
     * <code>required int32 roomId = 2;</code>
     *
     * <pre>
     *房间号
     * </pre>
     */
    boolean hasRoomId();
    /**
     * <code>required int32 roomId = 2;</code>
     *
     * <pre>
     *房间号
     * </pre>
     */
    int getRoomId();

    // repeated int32 self_cards = 3;
    /**
     * <code>repeated int32 self_cards = 3;</code>
     *
     * <pre>
     *自己手牌
     * </pre>
     */
    java.util.List<Integer> getSelfCardsList();
    /**
     * <code>repeated int32 self_cards = 3;</code>
     *
     * <pre>
     *自己手牌
     * </pre>
     */
    int getSelfCardsCount();
    /**
     * <code>repeated int32 self_cards = 3;</code>
     *
     * <pre>
     *自己手牌
     * </pre>
     */
    int getSelfCards(int index);

    // repeated int32 buttom_cards = 4;
    /**
     * <code>repeated int32 buttom_cards = 4;</code>
     *
     * <pre>
     *底牌
     * </pre>
     */
    java.util.List<Integer> getButtomCardsList();
    /**
     * <code>repeated int32 buttom_cards = 4;</code>
     *
     * <pre>
     *底牌
     * </pre>
     */
    int getButtomCardsCount();
    /**
     * <code>repeated int32 buttom_cards = 4;</code>
     *
     * <pre>
     *底牌
     * </pre>
     */
    int getButtomCards(int index);

    // required int32 lord_pos = 5;
    /**
     * <code>required int32 lord_pos = 5;</code>
     *
     * <pre>
     *地主位置
     * </pre>
     */
    boolean hasLordPos();
    /**
     * <code>required int32 lord_pos = 5;</code>
     *
     * <pre>
     *地主位置
     * </pre>
     */
    int getLordPos();

    // required int32 bonus = 6;
    /**
     * <code>required int32 bonus = 6;</code>
     *
     * <pre>
     *倍数
     * </pre>
     */
    boolean hasBonus();
    /**
     * <code>required int32 bonus = 6;</code>
     *
     * <pre>
     *倍数
     * </pre>
     */
    int getBonus();

    // repeated .proto.PBPair other_card_num = 7;
    /**
     * <code>repeated .proto.PBPair other_card_num = 7;</code>
     *
     * <pre>
     *别人的排数 key:pos  value:cardnum
     * </pre>
     */
    java.util.List<Common.PBPair>
        getOtherCardNumList();
    /**
     * <code>repeated .proto.PBPair other_card_num = 7;</code>
     *
     * <pre>
     *别人的排数 key:pos  value:cardnum
     * </pre>
     */
    Common.PBPair getOtherCardNum(int index);
    /**
     * <code>repeated .proto.PBPair other_card_num = 7;</code>
     *
     * <pre>
     *别人的排数 key:pos  value:cardnum
     * </pre>
     */
    int getOtherCardNumCount();
    /**
     * <code>repeated .proto.PBPair other_card_num = 7;</code>
     *
     * <pre>
     *别人的排数 key:pos  value:cardnum
     * </pre>
     */
    java.util.List<? extends Common.PBPairOrBuilder>
        getOtherCardNumOrBuilderList();
    /**
     * <code>repeated .proto.PBPair other_card_num = 7;</code>
     *
     * <pre>
     *别人的排数 key:pos  value:cardnum
     * </pre>
     */
    Common.PBPairOrBuilder getOtherCardNumOrBuilder(
			int index);

    // repeated int32 desk_top_list = 8;
    /**
     * <code>repeated int32 desk_top_list = 8;</code>
     *
     * <pre>
     *已经出过得所有牌
     * </pre>
     */
    java.util.List<Integer> getDeskTopListList();
    /**
     * <code>repeated int32 desk_top_list = 8;</code>
     *
     * <pre>
     *已经出过得所有牌
     * </pre>
     */
    int getDeskTopListCount();
    /**
     * <code>repeated int32 desk_top_list = 8;</code>
     *
     * <pre>
     *已经出过得所有牌
     * </pre>
     */
    int getDeskTopList(int index);

    // repeated .proto.PBIntIntList other_last_discard = 9;
    /**
     * <code>repeated .proto.PBIntIntList other_last_discard = 9;</code>
     *
     * <pre>
     *其他玩家上把出牌
     * </pre>
     */
    java.util.List<Common.PBIntIntList>
        getOtherLastDiscardList();
    /**
     * <code>repeated .proto.PBIntIntList other_last_discard = 9;</code>
     *
     * <pre>
     *其他玩家上把出牌
     * </pre>
     */
    Common.PBIntIntList getOtherLastDiscard(int index);
    /**
     * <code>repeated .proto.PBIntIntList other_last_discard = 9;</code>
     *
     * <pre>
     *其他玩家上把出牌
     * </pre>
     */
    int getOtherLastDiscardCount();
    /**
     * <code>repeated .proto.PBIntIntList other_last_discard = 9;</code>
     *
     * <pre>
     *其他玩家上把出牌
     * </pre>
     */
    java.util.List<? extends Common.PBIntIntListOrBuilder>
        getOtherLastDiscardOrBuilderList();
    /**
     * <code>repeated .proto.PBIntIntList other_last_discard = 9;</code>
     *
     * <pre>
     *其他玩家上把出牌
     * </pre>
     */
    Common.PBIntIntListOrBuilder getOtherLastDiscardOrBuilder(
			int index);

    // required int32 current_pos = 10;
    /**
     * <code>required int32 current_pos = 10;</code>
     *
     * <pre>
     *当前出牌的玩家
     * </pre>
     */
    boolean hasCurrentPos();
    /**
     * <code>required int32 current_pos = 10;</code>
     *
     * <pre>
     *当前出牌的玩家
     * </pre>
     */
    int getCurrentPos();

    // required int32 current_state = 11;
    /**
     * <code>required int32 current_state = 11;</code>
     *
     * <pre>
     *当前状态
     * </pre>
     */
    boolean hasCurrentState();
    /**
     * <code>required int32 current_state = 11;</code>
     *
     * <pre>
     *当前状态
     * </pre>
     */
    int getCurrentState();

    // required int32 current_remain_time = 12;
    /**
     * <code>required int32 current_remain_time = 12;</code>
     *
     * <pre>
     *当前操作剩余时间
     * </pre>
     */
    boolean hasCurrentRemainTime();
    /**
     * <code>required int32 current_remain_time = 12;</code>
     *
     * <pre>
     *当前操作剩余时间
     * </pre>
     */
    int getCurrentRemainTime();

    // optional int32 rangpai_count = 13;
    /**
     * <code>optional int32 rangpai_count = 13;</code>
     *
     * <pre>
     *二人斗地主让牌数量
     * </pre>
     */
    boolean hasRangpaiCount();
    /**
     * <code>optional int32 rangpai_count = 13;</code>
     *
     * <pre>
     *二人斗地主让牌数量
     * </pre>
     */
    int getRangpaiCount();

    // optional int32 laizi_value = 14;
    /**
     * <code>optional int32 laizi_value = 14;</code>
     *
     * <pre>
     *癞子斗地主 癞子  值 ， 应该不需要制定红心梅方
     * </pre>
     */
    boolean hasLaiziValue();
    /**
     * <code>optional int32 laizi_value = 14;</code>
     *
     * <pre>
     *癞子斗地主 癞子  值 ， 应该不需要制定红心梅方
     * </pre>
     */
    int getLaiziValue();

    // repeated .proto.PBPair tuoguan_state = 15;
    /**
     * <code>repeated .proto.PBPair tuoguan_state = 15;</code>
     *
     * <pre>
     *当前托管状态 key : 位置, value : 1托管， 0 非托管
     * </pre>
     */
    java.util.List<Common.PBPair>
        getTuoguanStateList();
    /**
     * <code>repeated .proto.PBPair tuoguan_state = 15;</code>
     *
     * <pre>
     *当前托管状态 key : 位置, value : 1托管， 0 非托管
     * </pre>
     */
    Common.PBPair getTuoguanState(int index);
    /**
     * <code>repeated .proto.PBPair tuoguan_state = 15;</code>
     *
     * <pre>
     *当前托管状态 key : 位置, value : 1托管， 0 非托管
     * </pre>
     */
    int getTuoguanStateCount();
    /**
     * <code>repeated .proto.PBPair tuoguan_state = 15;</code>
     *
     * <pre>
     *当前托管状态 key : 位置, value : 1托管， 0 非托管
     * </pre>
     */
    java.util.List<? extends Common.PBPairOrBuilder>
        getTuoguanStateOrBuilderList();
    /**
     * <code>repeated .proto.PBPair tuoguan_state = 15;</code>
     *
     * <pre>
     *当前托管状态 key : 位置, value : 1托管， 0 非托管
     * </pre>
     */
    Common.PBPairOrBuilder getTuoguanStateOrBuilder(
			int index);
  }
  /**
   * Protobuf type {@code proto.PBDdzResetGame}
   */
  public static final class PBDdzResetGame extends
      com.google.protobuf.GeneratedMessage
      implements PBDdzResetGameOrBuilder {
    // Use PBDdzResetGame.newBuilder() to construct.
    private PBDdzResetGame(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PBDdzResetGame(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PBDdzResetGame defaultInstance;
    public static PBDdzResetGame getDefaultInstance() {
      return defaultInstance;
    }

    public PBDdzResetGame getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PBDdzResetGame(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              Common.PBPlayerInfoList.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = playerList_.toBuilder();
              }
              playerList_ = input.readMessage(Common.PBPlayerInfoList.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(playerList_);
                playerList_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              roomId_ = input.readInt32();
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                selfCards_ = new java.util.ArrayList<Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              selfCards_.add(input.readInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                selfCards_ = new java.util.ArrayList<Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                selfCards_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 32: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                buttomCards_ = new java.util.ArrayList<Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              buttomCards_.add(input.readInt32());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                buttomCards_ = new java.util.ArrayList<Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                buttomCards_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 40: {
              bitField0_ |= 0x00000004;
              lordPos_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000008;
              bonus_ = input.readInt32();
              break;
            }
            case 58: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                otherCardNum_ = new java.util.ArrayList<Common.PBPair>();
                mutable_bitField0_ |= 0x00000040;
              }
              otherCardNum_.add(input.readMessage(Common.PBPair.PARSER, extensionRegistry));
              break;
            }
            case 64: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                deskTopList_ = new java.util.ArrayList<Integer>();
                mutable_bitField0_ |= 0x00000080;
              }
              deskTopList_.add(input.readInt32());
              break;
            }
            case 66: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080) && input.getBytesUntilLimit() > 0) {
                deskTopList_ = new java.util.ArrayList<Integer>();
                mutable_bitField0_ |= 0x00000080;
              }
              while (input.getBytesUntilLimit() > 0) {
                deskTopList_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 74: {
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                otherLastDiscard_ = new java.util.ArrayList<Common.PBIntIntList>();
                mutable_bitField0_ |= 0x00000100;
              }
              otherLastDiscard_.add(input.readMessage(Common.PBIntIntList.PARSER, extensionRegistry));
              break;
            }
            case 80: {
              bitField0_ |= 0x00000010;
              currentPos_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000020;
              currentState_ = input.readInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000040;
              currentRemainTime_ = input.readInt32();
              break;
            }
            case 104: {
              bitField0_ |= 0x00000080;
              rangpaiCount_ = input.readInt32();
              break;
            }
            case 112: {
              bitField0_ |= 0x00000100;
              laiziValue_ = input.readInt32();
              break;
            }
            case 122: {
              if (!((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
                tuoguanState_ = new java.util.ArrayList<Common.PBPair>();
                mutable_bitField0_ |= 0x00004000;
              }
              tuoguanState_.add(input.readMessage(Common.PBPair.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          selfCards_ = java.util.Collections.unmodifiableList(selfCards_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          buttomCards_ = java.util.Collections.unmodifiableList(buttomCards_);
        }
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          otherCardNum_ = java.util.Collections.unmodifiableList(otherCardNum_);
        }
        if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
          deskTopList_ = java.util.Collections.unmodifiableList(deskTopList_);
        }
        if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
          otherLastDiscard_ = java.util.Collections.unmodifiableList(otherLastDiscard_);
        }
        if (((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
          tuoguanState_ = java.util.Collections.unmodifiableList(tuoguanState_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Ddz.internal_static_protobuf_PBDdzResetGame_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Ddz.internal_static_protobuf_PBDdzResetGame_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              PBDdzResetGame.class, Builder.class);
    }

    public static com.google.protobuf.Parser<PBDdzResetGame> PARSER =
        new com.google.protobuf.AbstractParser<PBDdzResetGame>() {
      public PBDdzResetGame parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PBDdzResetGame(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<PBDdzResetGame> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required .proto.PBPlayerInfoList player_list = 1;
    public static final int PLAYER_LIST_FIELD_NUMBER = 1;
    private Common.PBPlayerInfoList playerList_;
    /**
     * <code>required .proto.PBPlayerInfoList player_list = 1;</code>
     *
     * <pre>
     *所有玩家的信息
     * </pre>
     */
    public boolean hasPlayerList() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .proto.PBPlayerInfoList player_list = 1;</code>
     *
     * <pre>
     *所有玩家的信息
     * </pre>
     */
    public Common.PBPlayerInfoList getPlayerList() {
      return playerList_;
    }
    /**
     * <code>required .proto.PBPlayerInfoList player_list = 1;</code>
     *
     * <pre>
     *所有玩家的信息
     * </pre>
     */
    public Common.PBPlayerInfoListOrBuilder getPlayerListOrBuilder() {
      return playerList_;
    }

    // required int32 roomId = 2;
    public static final int ROOMID_FIELD_NUMBER = 2;
    private int roomId_;
    /**
     * <code>required int32 roomId = 2;</code>
     *
     * <pre>
     *房间号
     * </pre>
     */
    public boolean hasRoomId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 roomId = 2;</code>
     *
     * <pre>
     *房间号
     * </pre>
     */
    public int getRoomId() {
      return roomId_;
    }

    // repeated int32 self_cards = 3;
    public static final int SELF_CARDS_FIELD_NUMBER = 3;
    private java.util.List<Integer> selfCards_;
    /**
     * <code>repeated int32 self_cards = 3;</code>
     *
     * <pre>
     *自己手牌
     * </pre>
     */
    public java.util.List<Integer>
        getSelfCardsList() {
      return selfCards_;
    }
    /**
     * <code>repeated int32 self_cards = 3;</code>
     *
     * <pre>
     *自己手牌
     * </pre>
     */
    public int getSelfCardsCount() {
      return selfCards_.size();
    }
    /**
     * <code>repeated int32 self_cards = 3;</code>
     *
     * <pre>
     *自己手牌
     * </pre>
     */
    public int getSelfCards(int index) {
      return selfCards_.get(index);
    }

    // repeated int32 buttom_cards = 4;
    public static final int BUTTOM_CARDS_FIELD_NUMBER = 4;
    private java.util.List<Integer> buttomCards_;
    /**
     * <code>repeated int32 buttom_cards = 4;</code>
     *
     * <pre>
     *底牌
     * </pre>
     */
    public java.util.List<Integer>
        getButtomCardsList() {
      return buttomCards_;
    }
    /**
     * <code>repeated int32 buttom_cards = 4;</code>
     *
     * <pre>
     *底牌
     * </pre>
     */
    public int getButtomCardsCount() {
      return buttomCards_.size();
    }
    /**
     * <code>repeated int32 buttom_cards = 4;</code>
     *
     * <pre>
     *底牌
     * </pre>
     */
    public int getButtomCards(int index) {
      return buttomCards_.get(index);
    }

    // required int32 lord_pos = 5;
    public static final int LORD_POS_FIELD_NUMBER = 5;
    private int lordPos_;
    /**
     * <code>required int32 lord_pos = 5;</code>
     *
     * <pre>
     *地主位置
     * </pre>
     */
    public boolean hasLordPos() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 lord_pos = 5;</code>
     *
     * <pre>
     *地主位置
     * </pre>
     */
    public int getLordPos() {
      return lordPos_;
    }

    // required int32 bonus = 6;
    public static final int BONUS_FIELD_NUMBER = 6;
    private int bonus_;
    /**
     * <code>required int32 bonus = 6;</code>
     *
     * <pre>
     *倍数
     * </pre>
     */
    public boolean hasBonus() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int32 bonus = 6;</code>
     *
     * <pre>
     *倍数
     * </pre>
     */
    public int getBonus() {
      return bonus_;
    }

    // repeated .proto.PBPair other_card_num = 7;
    public static final int OTHER_CARD_NUM_FIELD_NUMBER = 7;
    private java.util.List<Common.PBPair> otherCardNum_;
    /**
     * <code>repeated .proto.PBPair other_card_num = 7;</code>
     *
     * <pre>
     *别人的排数 key:pos  value:cardnum
     * </pre>
     */
    public java.util.List<Common.PBPair> getOtherCardNumList() {
      return otherCardNum_;
    }
    /**
     * <code>repeated .proto.PBPair other_card_num = 7;</code>
     *
     * <pre>
     *别人的排数 key:pos  value:cardnum
     * </pre>
     */
    public java.util.List<? extends Common.PBPairOrBuilder>
        getOtherCardNumOrBuilderList() {
      return otherCardNum_;
    }
    /**
     * <code>repeated .proto.PBPair other_card_num = 7;</code>
     *
     * <pre>
     *别人的排数 key:pos  value:cardnum
     * </pre>
     */
    public int getOtherCardNumCount() {
      return otherCardNum_.size();
    }
    /**
     * <code>repeated .proto.PBPair other_card_num = 7;</code>
     *
     * <pre>
     *别人的排数 key:pos  value:cardnum
     * </pre>
     */
    public Common.PBPair getOtherCardNum(int index) {
      return otherCardNum_.get(index);
    }
    /**
     * <code>repeated .proto.PBPair other_card_num = 7;</code>
     *
     * <pre>
     *别人的排数 key:pos  value:cardnum
     * </pre>
     */
    public Common.PBPairOrBuilder getOtherCardNumOrBuilder(
        int index) {
      return otherCardNum_.get(index);
    }

    // repeated int32 desk_top_list = 8;
    public static final int DESK_TOP_LIST_FIELD_NUMBER = 8;
    private java.util.List<Integer> deskTopList_;
    /**
     * <code>repeated int32 desk_top_list = 8;</code>
     *
     * <pre>
     *已经出过得所有牌
     * </pre>
     */
    public java.util.List<Integer>
        getDeskTopListList() {
      return deskTopList_;
    }
    /**
     * <code>repeated int32 desk_top_list = 8;</code>
     *
     * <pre>
     *已经出过得所有牌
     * </pre>
     */
    public int getDeskTopListCount() {
      return deskTopList_.size();
    }
    /**
     * <code>repeated int32 desk_top_list = 8;</code>
     *
     * <pre>
     *已经出过得所有牌
     * </pre>
     */
    public int getDeskTopList(int index) {
      return deskTopList_.get(index);
    }

    // repeated .proto.PBIntIntList other_last_discard = 9;
    public static final int OTHER_LAST_DISCARD_FIELD_NUMBER = 9;
    private java.util.List<Common.PBIntIntList> otherLastDiscard_;
    /**
     * <code>repeated .proto.PBIntIntList other_last_discard = 9;</code>
     *
     * <pre>
     *其他玩家上把出牌
     * </pre>
     */
    public java.util.List<Common.PBIntIntList> getOtherLastDiscardList() {
      return otherLastDiscard_;
    }
    /**
     * <code>repeated .proto.PBIntIntList other_last_discard = 9;</code>
     *
     * <pre>
     *其他玩家上把出牌
     * </pre>
     */
    public java.util.List<? extends Common.PBIntIntListOrBuilder>
        getOtherLastDiscardOrBuilderList() {
      return otherLastDiscard_;
    }
    /**
     * <code>repeated .proto.PBIntIntList other_last_discard = 9;</code>
     *
     * <pre>
     *其他玩家上把出牌
     * </pre>
     */
    public int getOtherLastDiscardCount() {
      return otherLastDiscard_.size();
    }
    /**
     * <code>repeated .proto.PBIntIntList other_last_discard = 9;</code>
     *
     * <pre>
     *其他玩家上把出牌
     * </pre>
     */
    public Common.PBIntIntList getOtherLastDiscard(int index) {
      return otherLastDiscard_.get(index);
    }
    /**
     * <code>repeated .proto.PBIntIntList other_last_discard = 9;</code>
     *
     * <pre>
     *其他玩家上把出牌
     * </pre>
     */
    public Common.PBIntIntListOrBuilder getOtherLastDiscardOrBuilder(
        int index) {
      return otherLastDiscard_.get(index);
    }

    // required int32 current_pos = 10;
    public static final int CURRENT_POS_FIELD_NUMBER = 10;
    private int currentPos_;
    /**
     * <code>required int32 current_pos = 10;</code>
     *
     * <pre>
     *当前出牌的玩家
     * </pre>
     */
    public boolean hasCurrentPos() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int32 current_pos = 10;</code>
     *
     * <pre>
     *当前出牌的玩家
     * </pre>
     */
    public int getCurrentPos() {
      return currentPos_;
    }

    // required int32 current_state = 11;
    public static final int CURRENT_STATE_FIELD_NUMBER = 11;
    private int currentState_;
    /**
     * <code>required int32 current_state = 11;</code>
     *
     * <pre>
     *当前状态
     * </pre>
     */
    public boolean hasCurrentState() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required int32 current_state = 11;</code>
     *
     * <pre>
     *当前状态
     * </pre>
     */
    public int getCurrentState() {
      return currentState_;
    }

    // required int32 current_remain_time = 12;
    public static final int CURRENT_REMAIN_TIME_FIELD_NUMBER = 12;
    private int currentRemainTime_;
    /**
     * <code>required int32 current_remain_time = 12;</code>
     *
     * <pre>
     *当前操作剩余时间
     * </pre>
     */
    public boolean hasCurrentRemainTime() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required int32 current_remain_time = 12;</code>
     *
     * <pre>
     *当前操作剩余时间
     * </pre>
     */
    public int getCurrentRemainTime() {
      return currentRemainTime_;
    }

    // optional int32 rangpai_count = 13;
    public static final int RANGPAI_COUNT_FIELD_NUMBER = 13;
    private int rangpaiCount_;
    /**
     * <code>optional int32 rangpai_count = 13;</code>
     *
     * <pre>
     *二人斗地主让牌数量
     * </pre>
     */
    public boolean hasRangpaiCount() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 rangpai_count = 13;</code>
     *
     * <pre>
     *二人斗地主让牌数量
     * </pre>
     */
    public int getRangpaiCount() {
      return rangpaiCount_;
    }

    // optional int32 laizi_value = 14;
    public static final int LAIZI_VALUE_FIELD_NUMBER = 14;
    private int laiziValue_;
    /**
     * <code>optional int32 laizi_value = 14;</code>
     *
     * <pre>
     *癞子斗地主 癞子  值 ， 应该不需要制定红心梅方
     * </pre>
     */
    public boolean hasLaiziValue() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 laizi_value = 14;</code>
     *
     * <pre>
     *癞子斗地主 癞子  值 ， 应该不需要制定红心梅方
     * </pre>
     */
    public int getLaiziValue() {
      return laiziValue_;
    }

    // repeated .proto.PBPair tuoguan_state = 15;
    public static final int TUOGUAN_STATE_FIELD_NUMBER = 15;
    private java.util.List<Common.PBPair> tuoguanState_;
    /**
     * <code>repeated .proto.PBPair tuoguan_state = 15;</code>
     *
     * <pre>
     *当前托管状态 key : 位置, value : 1托管， 0 非托管
     * </pre>
     */
    public java.util.List<Common.PBPair> getTuoguanStateList() {
      return tuoguanState_;
    }
    /**
     * <code>repeated .proto.PBPair tuoguan_state = 15;</code>
     *
     * <pre>
     *当前托管状态 key : 位置, value : 1托管， 0 非托管
     * </pre>
     */
    public java.util.List<? extends Common.PBPairOrBuilder>
        getTuoguanStateOrBuilderList() {
      return tuoguanState_;
    }
    /**
     * <code>repeated .proto.PBPair tuoguan_state = 15;</code>
     *
     * <pre>
     *当前托管状态 key : 位置, value : 1托管， 0 非托管
     * </pre>
     */
    public int getTuoguanStateCount() {
      return tuoguanState_.size();
    }
    /**
     * <code>repeated .proto.PBPair tuoguan_state = 15;</code>
     *
     * <pre>
     *当前托管状态 key : 位置, value : 1托管， 0 非托管
     * </pre>
     */
    public Common.PBPair getTuoguanState(int index) {
      return tuoguanState_.get(index);
    }
    /**
     * <code>repeated .proto.PBPair tuoguan_state = 15;</code>
     *
     * <pre>
     *当前托管状态 key : 位置, value : 1托管， 0 非托管
     * </pre>
     */
    public Common.PBPairOrBuilder getTuoguanStateOrBuilder(
        int index) {
      return tuoguanState_.get(index);
    }

    private void initFields() {
      playerList_ = Common.PBPlayerInfoList.getDefaultInstance();
      roomId_ = 0;
      selfCards_ = java.util.Collections.emptyList();
      buttomCards_ = java.util.Collections.emptyList();
      lordPos_ = 0;
      bonus_ = 0;
      otherCardNum_ = java.util.Collections.emptyList();
      deskTopList_ = java.util.Collections.emptyList();
      otherLastDiscard_ = java.util.Collections.emptyList();
      currentPos_ = 0;
      currentState_ = 0;
      currentRemainTime_ = 0;
      rangpaiCount_ = 0;
      laiziValue_ = 0;
      tuoguanState_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasPlayerList()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRoomId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLordPos()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasBonus()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCurrentPos()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCurrentState()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCurrentRemainTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getPlayerList().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getOtherCardNumCount(); i++) {
        if (!getOtherCardNum(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getOtherLastDiscardCount(); i++) {
        if (!getOtherLastDiscard(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getTuoguanStateCount(); i++) {
        if (!getTuoguanState(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, playerList_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, roomId_);
      }
      for (int i = 0; i < selfCards_.size(); i++) {
        output.writeInt32(3, selfCards_.get(i));
      }
      for (int i = 0; i < buttomCards_.size(); i++) {
        output.writeInt32(4, buttomCards_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(5, lordPos_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(6, bonus_);
      }
      for (int i = 0; i < otherCardNum_.size(); i++) {
        output.writeMessage(7, otherCardNum_.get(i));
      }
      for (int i = 0; i < deskTopList_.size(); i++) {
        output.writeInt32(8, deskTopList_.get(i));
      }
      for (int i = 0; i < otherLastDiscard_.size(); i++) {
        output.writeMessage(9, otherLastDiscard_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(10, currentPos_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(11, currentState_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(12, currentRemainTime_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(13, rangpaiCount_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(14, laiziValue_);
      }
      for (int i = 0; i < tuoguanState_.size(); i++) {
        output.writeMessage(15, tuoguanState_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, playerList_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, roomId_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < selfCards_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(selfCards_.get(i));
        }
        size += dataSize;
        size += 1 * getSelfCardsList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < buttomCards_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(buttomCards_.get(i));
        }
        size += dataSize;
        size += 1 * getButtomCardsList().size();
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, lordPos_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, bonus_);
      }
      for (int i = 0; i < otherCardNum_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, otherCardNum_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < deskTopList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(deskTopList_.get(i));
        }
        size += dataSize;
        size += 1 * getDeskTopListList().size();
      }
      for (int i = 0; i < otherLastDiscard_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, otherLastDiscard_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, currentPos_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, currentState_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, currentRemainTime_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, rangpaiCount_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, laiziValue_);
      }
      for (int i = 0; i < tuoguanState_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(15, tuoguanState_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static PBDdzResetGame parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static PBDdzResetGame parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static PBDdzResetGame parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static PBDdzResetGame parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static PBDdzResetGame parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static PBDdzResetGame parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static PBDdzResetGame parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static PBDdzResetGame parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static PBDdzResetGame parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static PBDdzResetGame parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(PBDdzResetGame prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code proto.PBDdzResetGame}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements PBDdzResetGameOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Ddz.internal_static_protobuf_PBDdzResetGame_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Ddz.internal_static_protobuf_PBDdzResetGame_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                PBDdzResetGame.class, Builder.class);
      }

      // Construct using proto.Ddz.PBDdzResetGame.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getPlayerListFieldBuilder();
          getOtherCardNumFieldBuilder();
          getOtherLastDiscardFieldBuilder();
          getTuoguanStateFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (playerListBuilder_ == null) {
          playerList_ = Common.PBPlayerInfoList.getDefaultInstance();
        } else {
          playerListBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        roomId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        selfCards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        buttomCards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        lordPos_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        bonus_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        if (otherCardNumBuilder_ == null) {
          otherCardNum_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
        } else {
          otherCardNumBuilder_.clear();
        }
        deskTopList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        if (otherLastDiscardBuilder_ == null) {
          otherLastDiscard_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
        } else {
          otherLastDiscardBuilder_.clear();
        }
        currentPos_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        currentState_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        currentRemainTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        rangpaiCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        laiziValue_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        if (tuoguanStateBuilder_ == null) {
          tuoguanState_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00004000);
        } else {
          tuoguanStateBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Ddz.internal_static_protobuf_PBDdzResetGame_descriptor;
      }

      public PBDdzResetGame getDefaultInstanceForType() {
        return PBDdzResetGame.getDefaultInstance();
      }

      public PBDdzResetGame build() {
        PBDdzResetGame result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public PBDdzResetGame buildPartial() {
        PBDdzResetGame result = new PBDdzResetGame(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (playerListBuilder_ == null) {
          result.playerList_ = playerList_;
        } else {
          result.playerList_ = playerListBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.roomId_ = roomId_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          selfCards_ = java.util.Collections.unmodifiableList(selfCards_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.selfCards_ = selfCards_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          buttomCards_ = java.util.Collections.unmodifiableList(buttomCards_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.buttomCards_ = buttomCards_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000004;
        }
        result.lordPos_ = lordPos_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000008;
        }
        result.bonus_ = bonus_;
        if (otherCardNumBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040)) {
            otherCardNum_ = java.util.Collections.unmodifiableList(otherCardNum_);
            bitField0_ = (bitField0_ & ~0x00000040);
          }
          result.otherCardNum_ = otherCardNum_;
        } else {
          result.otherCardNum_ = otherCardNumBuilder_.build();
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          deskTopList_ = java.util.Collections.unmodifiableList(deskTopList_);
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.deskTopList_ = deskTopList_;
        if (otherLastDiscardBuilder_ == null) {
          if (((bitField0_ & 0x00000100) == 0x00000100)) {
            otherLastDiscard_ = java.util.Collections.unmodifiableList(otherLastDiscard_);
            bitField0_ = (bitField0_ & ~0x00000100);
          }
          result.otherLastDiscard_ = otherLastDiscard_;
        } else {
          result.otherLastDiscard_ = otherLastDiscardBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000010;
        }
        result.currentPos_ = currentPos_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000020;
        }
        result.currentState_ = currentState_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000040;
        }
        result.currentRemainTime_ = currentRemainTime_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00000080;
        }
        result.rangpaiCount_ = rangpaiCount_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00000100;
        }
        result.laiziValue_ = laiziValue_;
        if (tuoguanStateBuilder_ == null) {
          if (((bitField0_ & 0x00004000) == 0x00004000)) {
            tuoguanState_ = java.util.Collections.unmodifiableList(tuoguanState_);
            bitField0_ = (bitField0_ & ~0x00004000);
          }
          result.tuoguanState_ = tuoguanState_;
        } else {
          result.tuoguanState_ = tuoguanStateBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof PBDdzResetGame) {
          return mergeFrom((PBDdzResetGame)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(PBDdzResetGame other) {
        if (other == PBDdzResetGame.getDefaultInstance()) return this;
        if (other.hasPlayerList()) {
          mergePlayerList(other.getPlayerList());
        }
        if (other.hasRoomId()) {
          setRoomId(other.getRoomId());
        }
        if (!other.selfCards_.isEmpty()) {
          if (selfCards_.isEmpty()) {
            selfCards_ = other.selfCards_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureSelfCardsIsMutable();
            selfCards_.addAll(other.selfCards_);
          }
          onChanged();
        }
        if (!other.buttomCards_.isEmpty()) {
          if (buttomCards_.isEmpty()) {
            buttomCards_ = other.buttomCards_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureButtomCardsIsMutable();
            buttomCards_.addAll(other.buttomCards_);
          }
          onChanged();
        }
        if (other.hasLordPos()) {
          setLordPos(other.getLordPos());
        }
        if (other.hasBonus()) {
          setBonus(other.getBonus());
        }
        if (otherCardNumBuilder_ == null) {
          if (!other.otherCardNum_.isEmpty()) {
            if (otherCardNum_.isEmpty()) {
              otherCardNum_ = other.otherCardNum_;
              bitField0_ = (bitField0_ & ~0x00000040);
            } else {
              ensureOtherCardNumIsMutable();
              otherCardNum_.addAll(other.otherCardNum_);
            }
            onChanged();
          }
        } else {
          if (!other.otherCardNum_.isEmpty()) {
            if (otherCardNumBuilder_.isEmpty()) {
              otherCardNumBuilder_.dispose();
              otherCardNumBuilder_ = null;
              otherCardNum_ = other.otherCardNum_;
              bitField0_ = (bitField0_ & ~0x00000040);
              otherCardNumBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getOtherCardNumFieldBuilder() : null;
            } else {
              otherCardNumBuilder_.addAllMessages(other.otherCardNum_);
            }
          }
        }
        if (!other.deskTopList_.isEmpty()) {
          if (deskTopList_.isEmpty()) {
            deskTopList_ = other.deskTopList_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensureDeskTopListIsMutable();
            deskTopList_.addAll(other.deskTopList_);
          }
          onChanged();
        }
        if (otherLastDiscardBuilder_ == null) {
          if (!other.otherLastDiscard_.isEmpty()) {
            if (otherLastDiscard_.isEmpty()) {
              otherLastDiscard_ = other.otherLastDiscard_;
              bitField0_ = (bitField0_ & ~0x00000100);
            } else {
              ensureOtherLastDiscardIsMutable();
              otherLastDiscard_.addAll(other.otherLastDiscard_);
            }
            onChanged();
          }
        } else {
          if (!other.otherLastDiscard_.isEmpty()) {
            if (otherLastDiscardBuilder_.isEmpty()) {
              otherLastDiscardBuilder_.dispose();
              otherLastDiscardBuilder_ = null;
              otherLastDiscard_ = other.otherLastDiscard_;
              bitField0_ = (bitField0_ & ~0x00000100);
              otherLastDiscardBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getOtherLastDiscardFieldBuilder() : null;
            } else {
              otherLastDiscardBuilder_.addAllMessages(other.otherLastDiscard_);
            }
          }
        }
        if (other.hasCurrentPos()) {
          setCurrentPos(other.getCurrentPos());
        }
        if (other.hasCurrentState()) {
          setCurrentState(other.getCurrentState());
        }
        if (other.hasCurrentRemainTime()) {
          setCurrentRemainTime(other.getCurrentRemainTime());
        }
        if (other.hasRangpaiCount()) {
          setRangpaiCount(other.getRangpaiCount());
        }
        if (other.hasLaiziValue()) {
          setLaiziValue(other.getLaiziValue());
        }
        if (tuoguanStateBuilder_ == null) {
          if (!other.tuoguanState_.isEmpty()) {
            if (tuoguanState_.isEmpty()) {
              tuoguanState_ = other.tuoguanState_;
              bitField0_ = (bitField0_ & ~0x00004000);
            } else {
              ensureTuoguanStateIsMutable();
              tuoguanState_.addAll(other.tuoguanState_);
            }
            onChanged();
          }
        } else {
          if (!other.tuoguanState_.isEmpty()) {
            if (tuoguanStateBuilder_.isEmpty()) {
              tuoguanStateBuilder_.dispose();
              tuoguanStateBuilder_ = null;
              tuoguanState_ = other.tuoguanState_;
              bitField0_ = (bitField0_ & ~0x00004000);
              tuoguanStateBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getTuoguanStateFieldBuilder() : null;
            } else {
              tuoguanStateBuilder_.addAllMessages(other.tuoguanState_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasPlayerList()) {
          
          return false;
        }
        if (!hasRoomId()) {
          
          return false;
        }
        if (!hasLordPos()) {
          
          return false;
        }
        if (!hasBonus()) {
          
          return false;
        }
        if (!hasCurrentPos()) {
          
          return false;
        }
        if (!hasCurrentState()) {
          
          return false;
        }
        if (!hasCurrentRemainTime()) {
          
          return false;
        }
        if (!getPlayerList().isInitialized()) {
          
          return false;
        }
        for (int i = 0; i < getOtherCardNumCount(); i++) {
          if (!getOtherCardNum(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getOtherLastDiscardCount(); i++) {
          if (!getOtherLastDiscard(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getTuoguanStateCount(); i++) {
          if (!getTuoguanState(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        PBDdzResetGame parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (PBDdzResetGame) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required .proto.PBPlayerInfoList player_list = 1;
      private Common.PBPlayerInfoList playerList_ = Common.PBPlayerInfoList.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          Common.PBPlayerInfoList, Common.PBPlayerInfoList.Builder, Common.PBPlayerInfoListOrBuilder> playerListBuilder_;
      /**
       * <code>required .proto.PBPlayerInfoList player_list = 1;</code>
       *
       * <pre>
       *所有玩家的信息
       * </pre>
       */
      public boolean hasPlayerList() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .proto.PBPlayerInfoList player_list = 1;</code>
       *
       * <pre>
       *所有玩家的信息
       * </pre>
       */
      public Common.PBPlayerInfoList getPlayerList() {
        if (playerListBuilder_ == null) {
          return playerList_;
        } else {
          return playerListBuilder_.getMessage();
        }
      }
      /**
       * <code>required .proto.PBPlayerInfoList player_list = 1;</code>
       *
       * <pre>
       *所有玩家的信息
       * </pre>
       */
      public Builder setPlayerList(Common.PBPlayerInfoList value) {
        if (playerListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          playerList_ = value;
          onChanged();
        } else {
          playerListBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .proto.PBPlayerInfoList player_list = 1;</code>
       *
       * <pre>
       *所有玩家的信息
       * </pre>
       */
      public Builder setPlayerList(
          Common.PBPlayerInfoList.Builder builderForValue) {
        if (playerListBuilder_ == null) {
          playerList_ = builderForValue.build();
          onChanged();
        } else {
          playerListBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .proto.PBPlayerInfoList player_list = 1;</code>
       *
       * <pre>
       *所有玩家的信息
       * </pre>
       */
      public Builder mergePlayerList(Common.PBPlayerInfoList value) {
        if (playerListBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              playerList_ != Common.PBPlayerInfoList.getDefaultInstance()) {
            playerList_ =
              Common.PBPlayerInfoList.newBuilder(playerList_).mergeFrom(value).buildPartial();
          } else {
            playerList_ = value;
          }
          onChanged();
        } else {
          playerListBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .proto.PBPlayerInfoList player_list = 1;</code>
       *
       * <pre>
       *所有玩家的信息
       * </pre>
       */
      public Builder clearPlayerList() {
        if (playerListBuilder_ == null) {
          playerList_ = Common.PBPlayerInfoList.getDefaultInstance();
          onChanged();
        } else {
          playerListBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>required .proto.PBPlayerInfoList player_list = 1;</code>
       *
       * <pre>
       *所有玩家的信息
       * </pre>
       */
      public Common.PBPlayerInfoList.Builder getPlayerListBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getPlayerListFieldBuilder().getBuilder();
      }
      /**
       * <code>required .proto.PBPlayerInfoList player_list = 1;</code>
       *
       * <pre>
       *所有玩家的信息
       * </pre>
       */
      public Common.PBPlayerInfoListOrBuilder getPlayerListOrBuilder() {
        if (playerListBuilder_ != null) {
          return playerListBuilder_.getMessageOrBuilder();
        } else {
          return playerList_;
        }
      }
      /**
       * <code>required .proto.PBPlayerInfoList player_list = 1;</code>
       *
       * <pre>
       *所有玩家的信息
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          Common.PBPlayerInfoList, Common.PBPlayerInfoList.Builder, Common.PBPlayerInfoListOrBuilder>
          getPlayerListFieldBuilder() {
        if (playerListBuilder_ == null) {
          playerListBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              Common.PBPlayerInfoList, Common.PBPlayerInfoList.Builder, Common.PBPlayerInfoListOrBuilder>(
                  playerList_,
                  getParentForChildren(),
                  isClean());
          playerList_ = null;
        }
        return playerListBuilder_;
      }

      // required int32 roomId = 2;
      private int roomId_ ;
      /**
       * <code>required int32 roomId = 2;</code>
       *
       * <pre>
       *房间号
       * </pre>
       */
      public boolean hasRoomId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 roomId = 2;</code>
       *
       * <pre>
       *房间号
       * </pre>
       */
      public int getRoomId() {
        return roomId_;
      }
      /**
       * <code>required int32 roomId = 2;</code>
       *
       * <pre>
       *房间号
       * </pre>
       */
      public Builder setRoomId(int value) {
        bitField0_ |= 0x00000002;
        roomId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 roomId = 2;</code>
       *
       * <pre>
       *房间号
       * </pre>
       */
      public Builder clearRoomId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        roomId_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 self_cards = 3;
      private java.util.List<Integer> selfCards_ = java.util.Collections.emptyList();
      private void ensureSelfCardsIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          selfCards_ = new java.util.ArrayList<Integer>(selfCards_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated int32 self_cards = 3;</code>
       *
       * <pre>
       *自己手牌
       * </pre>
       */
      public java.util.List<Integer>
          getSelfCardsList() {
        return java.util.Collections.unmodifiableList(selfCards_);
      }
      /**
       * <code>repeated int32 self_cards = 3;</code>
       *
       * <pre>
       *自己手牌
       * </pre>
       */
      public int getSelfCardsCount() {
        return selfCards_.size();
      }
      /**
       * <code>repeated int32 self_cards = 3;</code>
       *
       * <pre>
       *自己手牌
       * </pre>
       */
      public int getSelfCards(int index) {
        return selfCards_.get(index);
      }
      /**
       * <code>repeated int32 self_cards = 3;</code>
       *
       * <pre>
       *自己手牌
       * </pre>
       */
      public Builder setSelfCards(
          int index, int value) {
        ensureSelfCardsIsMutable();
        selfCards_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 self_cards = 3;</code>
       *
       * <pre>
       *自己手牌
       * </pre>
       */
      public Builder addSelfCards(int value) {
        ensureSelfCardsIsMutable();
        selfCards_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 self_cards = 3;</code>
       *
       * <pre>
       *自己手牌
       * </pre>
       */
      public Builder addAllSelfCards(
          Iterable<? extends Integer> values) {
        ensureSelfCardsIsMutable();
        super.addAll(values, selfCards_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 self_cards = 3;</code>
       *
       * <pre>
       *自己手牌
       * </pre>
       */
      public Builder clearSelfCards() {
        selfCards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      // repeated int32 buttom_cards = 4;
      private java.util.List<Integer> buttomCards_ = java.util.Collections.emptyList();
      private void ensureButtomCardsIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          buttomCards_ = new java.util.ArrayList<Integer>(buttomCards_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated int32 buttom_cards = 4;</code>
       *
       * <pre>
       *底牌
       * </pre>
       */
      public java.util.List<Integer>
          getButtomCardsList() {
        return java.util.Collections.unmodifiableList(buttomCards_);
      }
      /**
       * <code>repeated int32 buttom_cards = 4;</code>
       *
       * <pre>
       *底牌
       * </pre>
       */
      public int getButtomCardsCount() {
        return buttomCards_.size();
      }
      /**
       * <code>repeated int32 buttom_cards = 4;</code>
       *
       * <pre>
       *底牌
       * </pre>
       */
      public int getButtomCards(int index) {
        return buttomCards_.get(index);
      }
      /**
       * <code>repeated int32 buttom_cards = 4;</code>
       *
       * <pre>
       *底牌
       * </pre>
       */
      public Builder setButtomCards(
          int index, int value) {
        ensureButtomCardsIsMutable();
        buttomCards_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 buttom_cards = 4;</code>
       *
       * <pre>
       *底牌
       * </pre>
       */
      public Builder addButtomCards(int value) {
        ensureButtomCardsIsMutable();
        buttomCards_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 buttom_cards = 4;</code>
       *
       * <pre>
       *底牌
       * </pre>
       */
      public Builder addAllButtomCards(
          Iterable<? extends Integer> values) {
        ensureButtomCardsIsMutable();
        super.addAll(values, buttomCards_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 buttom_cards = 4;</code>
       *
       * <pre>
       *底牌
       * </pre>
       */
      public Builder clearButtomCards() {
        buttomCards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      // required int32 lord_pos = 5;
      private int lordPos_ ;
      /**
       * <code>required int32 lord_pos = 5;</code>
       *
       * <pre>
       *地主位置
       * </pre>
       */
      public boolean hasLordPos() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required int32 lord_pos = 5;</code>
       *
       * <pre>
       *地主位置
       * </pre>
       */
      public int getLordPos() {
        return lordPos_;
      }
      /**
       * <code>required int32 lord_pos = 5;</code>
       *
       * <pre>
       *地主位置
       * </pre>
       */
      public Builder setLordPos(int value) {
        bitField0_ |= 0x00000010;
        lordPos_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 lord_pos = 5;</code>
       *
       * <pre>
       *地主位置
       * </pre>
       */
      public Builder clearLordPos() {
        bitField0_ = (bitField0_ & ~0x00000010);
        lordPos_ = 0;
        onChanged();
        return this;
      }

      // required int32 bonus = 6;
      private int bonus_ ;
      /**
       * <code>required int32 bonus = 6;</code>
       *
       * <pre>
       *倍数
       * </pre>
       */
      public boolean hasBonus() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required int32 bonus = 6;</code>
       *
       * <pre>
       *倍数
       * </pre>
       */
      public int getBonus() {
        return bonus_;
      }
      /**
       * <code>required int32 bonus = 6;</code>
       *
       * <pre>
       *倍数
       * </pre>
       */
      public Builder setBonus(int value) {
        bitField0_ |= 0x00000020;
        bonus_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 bonus = 6;</code>
       *
       * <pre>
       *倍数
       * </pre>
       */
      public Builder clearBonus() {
        bitField0_ = (bitField0_ & ~0x00000020);
        bonus_ = 0;
        onChanged();
        return this;
      }

      // repeated .proto.PBPair other_card_num = 7;
      private java.util.List<Common.PBPair> otherCardNum_ =
        java.util.Collections.emptyList();
      private void ensureOtherCardNumIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          otherCardNum_ = new java.util.ArrayList<Common.PBPair>(otherCardNum_);
          bitField0_ |= 0x00000040;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          Common.PBPair, Common.PBPair.Builder, Common.PBPairOrBuilder> otherCardNumBuilder_;

      /**
       * <code>repeated .proto.PBPair other_card_num = 7;</code>
       *
       * <pre>
       *别人的排数 key:pos  value:cardnum
       * </pre>
       */
      public java.util.List<Common.PBPair> getOtherCardNumList() {
        if (otherCardNumBuilder_ == null) {
          return java.util.Collections.unmodifiableList(otherCardNum_);
        } else {
          return otherCardNumBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .proto.PBPair other_card_num = 7;</code>
       *
       * <pre>
       *别人的排数 key:pos  value:cardnum
       * </pre>
       */
      public int getOtherCardNumCount() {
        if (otherCardNumBuilder_ == null) {
          return otherCardNum_.size();
        } else {
          return otherCardNumBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .proto.PBPair other_card_num = 7;</code>
       *
       * <pre>
       *别人的排数 key:pos  value:cardnum
       * </pre>
       */
      public Common.PBPair getOtherCardNum(int index) {
        if (otherCardNumBuilder_ == null) {
          return otherCardNum_.get(index);
        } else {
          return otherCardNumBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .proto.PBPair other_card_num = 7;</code>
       *
       * <pre>
       *别人的排数 key:pos  value:cardnum
       * </pre>
       */
      public Builder setOtherCardNum(
          int index, Common.PBPair value) {
        if (otherCardNumBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOtherCardNumIsMutable();
          otherCardNum_.set(index, value);
          onChanged();
        } else {
          otherCardNumBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .proto.PBPair other_card_num = 7;</code>
       *
       * <pre>
       *别人的排数 key:pos  value:cardnum
       * </pre>
       */
      public Builder setOtherCardNum(
          int index, Common.PBPair.Builder builderForValue) {
        if (otherCardNumBuilder_ == null) {
          ensureOtherCardNumIsMutable();
          otherCardNum_.set(index, builderForValue.build());
          onChanged();
        } else {
          otherCardNumBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .proto.PBPair other_card_num = 7;</code>
       *
       * <pre>
       *别人的排数 key:pos  value:cardnum
       * </pre>
       */
      public Builder addOtherCardNum(Common.PBPair value) {
        if (otherCardNumBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOtherCardNumIsMutable();
          otherCardNum_.add(value);
          onChanged();
        } else {
          otherCardNumBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .proto.PBPair other_card_num = 7;</code>
       *
       * <pre>
       *别人的排数 key:pos  value:cardnum
       * </pre>
       */
      public Builder addOtherCardNum(
          int index, Common.PBPair value) {
        if (otherCardNumBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOtherCardNumIsMutable();
          otherCardNum_.add(index, value);
          onChanged();
        } else {
          otherCardNumBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .proto.PBPair other_card_num = 7;</code>
       *
       * <pre>
       *别人的排数 key:pos  value:cardnum
       * </pre>
       */
      public Builder addOtherCardNum(
          Common.PBPair.Builder builderForValue) {
        if (otherCardNumBuilder_ == null) {
          ensureOtherCardNumIsMutable();
          otherCardNum_.add(builderForValue.build());
          onChanged();
        } else {
          otherCardNumBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .proto.PBPair other_card_num = 7;</code>
       *
       * <pre>
       *别人的排数 key:pos  value:cardnum
       * </pre>
       */
      public Builder addOtherCardNum(
          int index, Common.PBPair.Builder builderForValue) {
        if (otherCardNumBuilder_ == null) {
          ensureOtherCardNumIsMutable();
          otherCardNum_.add(index, builderForValue.build());
          onChanged();
        } else {
          otherCardNumBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .proto.PBPair other_card_num = 7;</code>
       *
       * <pre>
       *别人的排数 key:pos  value:cardnum
       * </pre>
       */
      public Builder addAllOtherCardNum(
          Iterable<? extends Common.PBPair> values) {
        if (otherCardNumBuilder_ == null) {
          ensureOtherCardNumIsMutable();
          super.addAll(values, otherCardNum_);
          onChanged();
        } else {
          otherCardNumBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .proto.PBPair other_card_num = 7;</code>
       *
       * <pre>
       *别人的排数 key:pos  value:cardnum
       * </pre>
       */
      public Builder clearOtherCardNum() {
        if (otherCardNumBuilder_ == null) {
          otherCardNum_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
        } else {
          otherCardNumBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .proto.PBPair other_card_num = 7;</code>
       *
       * <pre>
       *别人的排数 key:pos  value:cardnum
       * </pre>
       */
      public Builder removeOtherCardNum(int index) {
        if (otherCardNumBuilder_ == null) {
          ensureOtherCardNumIsMutable();
          otherCardNum_.remove(index);
          onChanged();
        } else {
          otherCardNumBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .proto.PBPair other_card_num = 7;</code>
       *
       * <pre>
       *别人的排数 key:pos  value:cardnum
       * </pre>
       */
      public Common.PBPair.Builder getOtherCardNumBuilder(
          int index) {
        return getOtherCardNumFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .proto.PBPair other_card_num = 7;</code>
       *
       * <pre>
       *别人的排数 key:pos  value:cardnum
       * </pre>
       */
      public Common.PBPairOrBuilder getOtherCardNumOrBuilder(
          int index) {
        if (otherCardNumBuilder_ == null) {
          return otherCardNum_.get(index);  } else {
          return otherCardNumBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .proto.PBPair other_card_num = 7;</code>
       *
       * <pre>
       *别人的排数 key:pos  value:cardnum
       * </pre>
       */
      public java.util.List<? extends Common.PBPairOrBuilder>
           getOtherCardNumOrBuilderList() {
        if (otherCardNumBuilder_ != null) {
          return otherCardNumBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(otherCardNum_);
        }
      }
      /**
       * <code>repeated .proto.PBPair other_card_num = 7;</code>
       *
       * <pre>
       *别人的排数 key:pos  value:cardnum
       * </pre>
       */
      public Common.PBPair.Builder addOtherCardNumBuilder() {
        return getOtherCardNumFieldBuilder().addBuilder(
            Common.PBPair.getDefaultInstance());
      }
      /**
       * <code>repeated .proto.PBPair other_card_num = 7;</code>
       *
       * <pre>
       *别人的排数 key:pos  value:cardnum
       * </pre>
       */
      public Common.PBPair.Builder addOtherCardNumBuilder(
          int index) {
        return getOtherCardNumFieldBuilder().addBuilder(
            index, Common.PBPair.getDefaultInstance());
      }
      /**
       * <code>repeated .proto.PBPair other_card_num = 7;</code>
       *
       * <pre>
       *别人的排数 key:pos  value:cardnum
       * </pre>
       */
      public java.util.List<Common.PBPair.Builder>
           getOtherCardNumBuilderList() {
        return getOtherCardNumFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          Common.PBPair, Common.PBPair.Builder, Common.PBPairOrBuilder>
          getOtherCardNumFieldBuilder() {
        if (otherCardNumBuilder_ == null) {
          otherCardNumBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              Common.PBPair, Common.PBPair.Builder, Common.PBPairOrBuilder>(
                  otherCardNum_,
                  ((bitField0_ & 0x00000040) == 0x00000040),
                  getParentForChildren(),
                  isClean());
          otherCardNum_ = null;
        }
        return otherCardNumBuilder_;
      }

      // repeated int32 desk_top_list = 8;
      private java.util.List<Integer> deskTopList_ = java.util.Collections.emptyList();
      private void ensureDeskTopListIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          deskTopList_ = new java.util.ArrayList<Integer>(deskTopList_);
          bitField0_ |= 0x00000080;
         }
      }
      /**
       * <code>repeated int32 desk_top_list = 8;</code>
       *
       * <pre>
       *已经出过得所有牌
       * </pre>
       */
      public java.util.List<Integer>
          getDeskTopListList() {
        return java.util.Collections.unmodifiableList(deskTopList_);
      }
      /**
       * <code>repeated int32 desk_top_list = 8;</code>
       *
       * <pre>
       *已经出过得所有牌
       * </pre>
       */
      public int getDeskTopListCount() {
        return deskTopList_.size();
      }
      /**
       * <code>repeated int32 desk_top_list = 8;</code>
       *
       * <pre>
       *已经出过得所有牌
       * </pre>
       */
      public int getDeskTopList(int index) {
        return deskTopList_.get(index);
      }
      /**
       * <code>repeated int32 desk_top_list = 8;</code>
       *
       * <pre>
       *已经出过得所有牌
       * </pre>
       */
      public Builder setDeskTopList(
          int index, int value) {
        ensureDeskTopListIsMutable();
        deskTopList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 desk_top_list = 8;</code>
       *
       * <pre>
       *已经出过得所有牌
       * </pre>
       */
      public Builder addDeskTopList(int value) {
        ensureDeskTopListIsMutable();
        deskTopList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 desk_top_list = 8;</code>
       *
       * <pre>
       *已经出过得所有牌
       * </pre>
       */
      public Builder addAllDeskTopList(
          Iterable<? extends Integer> values) {
        ensureDeskTopListIsMutable();
        super.addAll(values, deskTopList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 desk_top_list = 8;</code>
       *
       * <pre>
       *已经出过得所有牌
       * </pre>
       */
      public Builder clearDeskTopList() {
        deskTopList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
        return this;
      }

      // repeated .proto.PBIntIntList other_last_discard = 9;
      private java.util.List<Common.PBIntIntList> otherLastDiscard_ =
        java.util.Collections.emptyList();
      private void ensureOtherLastDiscardIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          otherLastDiscard_ = new java.util.ArrayList<Common.PBIntIntList>(otherLastDiscard_);
          bitField0_ |= 0x00000100;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          Common.PBIntIntList, Common.PBIntIntList.Builder, Common.PBIntIntListOrBuilder> otherLastDiscardBuilder_;

      /**
       * <code>repeated .proto.PBIntIntList other_last_discard = 9;</code>
       *
       * <pre>
       *其他玩家上把出牌
       * </pre>
       */
      public java.util.List<Common.PBIntIntList> getOtherLastDiscardList() {
        if (otherLastDiscardBuilder_ == null) {
          return java.util.Collections.unmodifiableList(otherLastDiscard_);
        } else {
          return otherLastDiscardBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .proto.PBIntIntList other_last_discard = 9;</code>
       *
       * <pre>
       *其他玩家上把出牌
       * </pre>
       */
      public int getOtherLastDiscardCount() {
        if (otherLastDiscardBuilder_ == null) {
          return otherLastDiscard_.size();
        } else {
          return otherLastDiscardBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .proto.PBIntIntList other_last_discard = 9;</code>
       *
       * <pre>
       *其他玩家上把出牌
       * </pre>
       */
      public Common.PBIntIntList getOtherLastDiscard(int index) {
        if (otherLastDiscardBuilder_ == null) {
          return otherLastDiscard_.get(index);
        } else {
          return otherLastDiscardBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .proto.PBIntIntList other_last_discard = 9;</code>
       *
       * <pre>
       *其他玩家上把出牌
       * </pre>
       */
      public Builder setOtherLastDiscard(
          int index, Common.PBIntIntList value) {
        if (otherLastDiscardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOtherLastDiscardIsMutable();
          otherLastDiscard_.set(index, value);
          onChanged();
        } else {
          otherLastDiscardBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .proto.PBIntIntList other_last_discard = 9;</code>
       *
       * <pre>
       *其他玩家上把出牌
       * </pre>
       */
      public Builder setOtherLastDiscard(
          int index, Common.PBIntIntList.Builder builderForValue) {
        if (otherLastDiscardBuilder_ == null) {
          ensureOtherLastDiscardIsMutable();
          otherLastDiscard_.set(index, builderForValue.build());
          onChanged();
        } else {
          otherLastDiscardBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .proto.PBIntIntList other_last_discard = 9;</code>
       *
       * <pre>
       *其他玩家上把出牌
       * </pre>
       */
      public Builder addOtherLastDiscard(Common.PBIntIntList value) {
        if (otherLastDiscardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOtherLastDiscardIsMutable();
          otherLastDiscard_.add(value);
          onChanged();
        } else {
          otherLastDiscardBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .proto.PBIntIntList other_last_discard = 9;</code>
       *
       * <pre>
       *其他玩家上把出牌
       * </pre>
       */
      public Builder addOtherLastDiscard(
          int index, Common.PBIntIntList value) {
        if (otherLastDiscardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOtherLastDiscardIsMutable();
          otherLastDiscard_.add(index, value);
          onChanged();
        } else {
          otherLastDiscardBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .proto.PBIntIntList other_last_discard = 9;</code>
       *
       * <pre>
       *其他玩家上把出牌
       * </pre>
       */
      public Builder addOtherLastDiscard(
          Common.PBIntIntList.Builder builderForValue) {
        if (otherLastDiscardBuilder_ == null) {
          ensureOtherLastDiscardIsMutable();
          otherLastDiscard_.add(builderForValue.build());
          onChanged();
        } else {
          otherLastDiscardBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .proto.PBIntIntList other_last_discard = 9;</code>
       *
       * <pre>
       *其他玩家上把出牌
       * </pre>
       */
      public Builder addOtherLastDiscard(
          int index, Common.PBIntIntList.Builder builderForValue) {
        if (otherLastDiscardBuilder_ == null) {
          ensureOtherLastDiscardIsMutable();
          otherLastDiscard_.add(index, builderForValue.build());
          onChanged();
        } else {
          otherLastDiscardBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .proto.PBIntIntList other_last_discard = 9;</code>
       *
       * <pre>
       *其他玩家上把出牌
       * </pre>
       */
      public Builder addAllOtherLastDiscard(
          Iterable<? extends Common.PBIntIntList> values) {
        if (otherLastDiscardBuilder_ == null) {
          ensureOtherLastDiscardIsMutable();
          super.addAll(values, otherLastDiscard_);
          onChanged();
        } else {
          otherLastDiscardBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .proto.PBIntIntList other_last_discard = 9;</code>
       *
       * <pre>
       *其他玩家上把出牌
       * </pre>
       */
      public Builder clearOtherLastDiscard() {
        if (otherLastDiscardBuilder_ == null) {
          otherLastDiscard_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
          onChanged();
        } else {
          otherLastDiscardBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .proto.PBIntIntList other_last_discard = 9;</code>
       *
       * <pre>
       *其他玩家上把出牌
       * </pre>
       */
      public Builder removeOtherLastDiscard(int index) {
        if (otherLastDiscardBuilder_ == null) {
          ensureOtherLastDiscardIsMutable();
          otherLastDiscard_.remove(index);
          onChanged();
        } else {
          otherLastDiscardBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .proto.PBIntIntList other_last_discard = 9;</code>
       *
       * <pre>
       *其他玩家上把出牌
       * </pre>
       */
      public Common.PBIntIntList.Builder getOtherLastDiscardBuilder(
          int index) {
        return getOtherLastDiscardFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .proto.PBIntIntList other_last_discard = 9;</code>
       *
       * <pre>
       *其他玩家上把出牌
       * </pre>
       */
      public Common.PBIntIntListOrBuilder getOtherLastDiscardOrBuilder(
          int index) {
        if (otherLastDiscardBuilder_ == null) {
          return otherLastDiscard_.get(index);  } else {
          return otherLastDiscardBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .proto.PBIntIntList other_last_discard = 9;</code>
       *
       * <pre>
       *其他玩家上把出牌
       * </pre>
       */
      public java.util.List<? extends Common.PBIntIntListOrBuilder>
           getOtherLastDiscardOrBuilderList() {
        if (otherLastDiscardBuilder_ != null) {
          return otherLastDiscardBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(otherLastDiscard_);
        }
      }
      /**
       * <code>repeated .proto.PBIntIntList other_last_discard = 9;</code>
       *
       * <pre>
       *其他玩家上把出牌
       * </pre>
       */
      public Common.PBIntIntList.Builder addOtherLastDiscardBuilder() {
        return getOtherLastDiscardFieldBuilder().addBuilder(
            Common.PBIntIntList.getDefaultInstance());
      }
      /**
       * <code>repeated .proto.PBIntIntList other_last_discard = 9;</code>
       *
       * <pre>
       *其他玩家上把出牌
       * </pre>
       */
      public Common.PBIntIntList.Builder addOtherLastDiscardBuilder(
          int index) {
        return getOtherLastDiscardFieldBuilder().addBuilder(
            index, Common.PBIntIntList.getDefaultInstance());
      }
      /**
       * <code>repeated .proto.PBIntIntList other_last_discard = 9;</code>
       *
       * <pre>
       *其他玩家上把出牌
       * </pre>
       */
      public java.util.List<Common.PBIntIntList.Builder>
           getOtherLastDiscardBuilderList() {
        return getOtherLastDiscardFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          Common.PBIntIntList, Common.PBIntIntList.Builder, Common.PBIntIntListOrBuilder>
          getOtherLastDiscardFieldBuilder() {
        if (otherLastDiscardBuilder_ == null) {
          otherLastDiscardBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              Common.PBIntIntList, Common.PBIntIntList.Builder, Common.PBIntIntListOrBuilder>(
                  otherLastDiscard_,
                  ((bitField0_ & 0x00000100) == 0x00000100),
                  getParentForChildren(),
                  isClean());
          otherLastDiscard_ = null;
        }
        return otherLastDiscardBuilder_;
      }

      // required int32 current_pos = 10;
      private int currentPos_ ;
      /**
       * <code>required int32 current_pos = 10;</code>
       *
       * <pre>
       *当前出牌的玩家
       * </pre>
       */
      public boolean hasCurrentPos() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>required int32 current_pos = 10;</code>
       *
       * <pre>
       *当前出牌的玩家
       * </pre>
       */
      public int getCurrentPos() {
        return currentPos_;
      }
      /**
       * <code>required int32 current_pos = 10;</code>
       *
       * <pre>
       *当前出牌的玩家
       * </pre>
       */
      public Builder setCurrentPos(int value) {
        bitField0_ |= 0x00000200;
        currentPos_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 current_pos = 10;</code>
       *
       * <pre>
       *当前出牌的玩家
       * </pre>
       */
      public Builder clearCurrentPos() {
        bitField0_ = (bitField0_ & ~0x00000200);
        currentPos_ = 0;
        onChanged();
        return this;
      }

      // required int32 current_state = 11;
      private int currentState_ ;
      /**
       * <code>required int32 current_state = 11;</code>
       *
       * <pre>
       *当前状态
       * </pre>
       */
      public boolean hasCurrentState() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>required int32 current_state = 11;</code>
       *
       * <pre>
       *当前状态
       * </pre>
       */
      public int getCurrentState() {
        return currentState_;
      }
      /**
       * <code>required int32 current_state = 11;</code>
       *
       * <pre>
       *当前状态
       * </pre>
       */
      public Builder setCurrentState(int value) {
        bitField0_ |= 0x00000400;
        currentState_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 current_state = 11;</code>
       *
       * <pre>
       *当前状态
       * </pre>
       */
      public Builder clearCurrentState() {
        bitField0_ = (bitField0_ & ~0x00000400);
        currentState_ = 0;
        onChanged();
        return this;
      }

      // required int32 current_remain_time = 12;
      private int currentRemainTime_ ;
      /**
       * <code>required int32 current_remain_time = 12;</code>
       *
       * <pre>
       *当前操作剩余时间
       * </pre>
       */
      public boolean hasCurrentRemainTime() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>required int32 current_remain_time = 12;</code>
       *
       * <pre>
       *当前操作剩余时间
       * </pre>
       */
      public int getCurrentRemainTime() {
        return currentRemainTime_;
      }
      /**
       * <code>required int32 current_remain_time = 12;</code>
       *
       * <pre>
       *当前操作剩余时间
       * </pre>
       */
      public Builder setCurrentRemainTime(int value) {
        bitField0_ |= 0x00000800;
        currentRemainTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 current_remain_time = 12;</code>
       *
       * <pre>
       *当前操作剩余时间
       * </pre>
       */
      public Builder clearCurrentRemainTime() {
        bitField0_ = (bitField0_ & ~0x00000800);
        currentRemainTime_ = 0;
        onChanged();
        return this;
      }

      // optional int32 rangpai_count = 13;
      private int rangpaiCount_ ;
      /**
       * <code>optional int32 rangpai_count = 13;</code>
       *
       * <pre>
       *二人斗地主让牌数量
       * </pre>
       */
      public boolean hasRangpaiCount() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional int32 rangpai_count = 13;</code>
       *
       * <pre>
       *二人斗地主让牌数量
       * </pre>
       */
      public int getRangpaiCount() {
        return rangpaiCount_;
      }
      /**
       * <code>optional int32 rangpai_count = 13;</code>
       *
       * <pre>
       *二人斗地主让牌数量
       * </pre>
       */
      public Builder setRangpaiCount(int value) {
        bitField0_ |= 0x00001000;
        rangpaiCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 rangpai_count = 13;</code>
       *
       * <pre>
       *二人斗地主让牌数量
       * </pre>
       */
      public Builder clearRangpaiCount() {
        bitField0_ = (bitField0_ & ~0x00001000);
        rangpaiCount_ = 0;
        onChanged();
        return this;
      }

      // optional int32 laizi_value = 14;
      private int laiziValue_ ;
      /**
       * <code>optional int32 laizi_value = 14;</code>
       *
       * <pre>
       *癞子斗地主 癞子  值 ， 应该不需要制定红心梅方
       * </pre>
       */
      public boolean hasLaiziValue() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional int32 laizi_value = 14;</code>
       *
       * <pre>
       *癞子斗地主 癞子  值 ， 应该不需要制定红心梅方
       * </pre>
       */
      public int getLaiziValue() {
        return laiziValue_;
      }
      /**
       * <code>optional int32 laizi_value = 14;</code>
       *
       * <pre>
       *癞子斗地主 癞子  值 ， 应该不需要制定红心梅方
       * </pre>
       */
      public Builder setLaiziValue(int value) {
        bitField0_ |= 0x00002000;
        laiziValue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 laizi_value = 14;</code>
       *
       * <pre>
       *癞子斗地主 癞子  值 ， 应该不需要制定红心梅方
       * </pre>
       */
      public Builder clearLaiziValue() {
        bitField0_ = (bitField0_ & ~0x00002000);
        laiziValue_ = 0;
        onChanged();
        return this;
      }

      // repeated .proto.PBPair tuoguan_state = 15;
      private java.util.List<Common.PBPair> tuoguanState_ =
        java.util.Collections.emptyList();
      private void ensureTuoguanStateIsMutable() {
        if (!((bitField0_ & 0x00004000) == 0x00004000)) {
          tuoguanState_ = new java.util.ArrayList<Common.PBPair>(tuoguanState_);
          bitField0_ |= 0x00004000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          Common.PBPair, Common.PBPair.Builder, Common.PBPairOrBuilder> tuoguanStateBuilder_;

      /**
       * <code>repeated .proto.PBPair tuoguan_state = 15;</code>
       *
       * <pre>
       *当前托管状态 key : 位置, value : 1托管， 0 非托管
       * </pre>
       */
      public java.util.List<Common.PBPair> getTuoguanStateList() {
        if (tuoguanStateBuilder_ == null) {
          return java.util.Collections.unmodifiableList(tuoguanState_);
        } else {
          return tuoguanStateBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .proto.PBPair tuoguan_state = 15;</code>
       *
       * <pre>
       *当前托管状态 key : 位置, value : 1托管， 0 非托管
       * </pre>
       */
      public int getTuoguanStateCount() {
        if (tuoguanStateBuilder_ == null) {
          return tuoguanState_.size();
        } else {
          return tuoguanStateBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .proto.PBPair tuoguan_state = 15;</code>
       *
       * <pre>
       *当前托管状态 key : 位置, value : 1托管， 0 非托管
       * </pre>
       */
      public Common.PBPair getTuoguanState(int index) {
        if (tuoguanStateBuilder_ == null) {
          return tuoguanState_.get(index);
        } else {
          return tuoguanStateBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .proto.PBPair tuoguan_state = 15;</code>
       *
       * <pre>
       *当前托管状态 key : 位置, value : 1托管， 0 非托管
       * </pre>
       */
      public Builder setTuoguanState(
          int index, Common.PBPair value) {
        if (tuoguanStateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTuoguanStateIsMutable();
          tuoguanState_.set(index, value);
          onChanged();
        } else {
          tuoguanStateBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .proto.PBPair tuoguan_state = 15;</code>
       *
       * <pre>
       *当前托管状态 key : 位置, value : 1托管， 0 非托管
       * </pre>
       */
      public Builder setTuoguanState(
          int index, Common.PBPair.Builder builderForValue) {
        if (tuoguanStateBuilder_ == null) {
          ensureTuoguanStateIsMutable();
          tuoguanState_.set(index, builderForValue.build());
          onChanged();
        } else {
          tuoguanStateBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .proto.PBPair tuoguan_state = 15;</code>
       *
       * <pre>
       *当前托管状态 key : 位置, value : 1托管， 0 非托管
       * </pre>
       */
      public Builder addTuoguanState(Common.PBPair value) {
        if (tuoguanStateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTuoguanStateIsMutable();
          tuoguanState_.add(value);
          onChanged();
        } else {
          tuoguanStateBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .proto.PBPair tuoguan_state = 15;</code>
       *
       * <pre>
       *当前托管状态 key : 位置, value : 1托管， 0 非托管
       * </pre>
       */
      public Builder addTuoguanState(
          int index, Common.PBPair value) {
        if (tuoguanStateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTuoguanStateIsMutable();
          tuoguanState_.add(index, value);
          onChanged();
        } else {
          tuoguanStateBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .proto.PBPair tuoguan_state = 15;</code>
       *
       * <pre>
       *当前托管状态 key : 位置, value : 1托管， 0 非托管
       * </pre>
       */
      public Builder addTuoguanState(
          Common.PBPair.Builder builderForValue) {
        if (tuoguanStateBuilder_ == null) {
          ensureTuoguanStateIsMutable();
          tuoguanState_.add(builderForValue.build());
          onChanged();
        } else {
          tuoguanStateBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .proto.PBPair tuoguan_state = 15;</code>
       *
       * <pre>
       *当前托管状态 key : 位置, value : 1托管， 0 非托管
       * </pre>
       */
      public Builder addTuoguanState(
          int index, Common.PBPair.Builder builderForValue) {
        if (tuoguanStateBuilder_ == null) {
          ensureTuoguanStateIsMutable();
          tuoguanState_.add(index, builderForValue.build());
          onChanged();
        } else {
          tuoguanStateBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .proto.PBPair tuoguan_state = 15;</code>
       *
       * <pre>
       *当前托管状态 key : 位置, value : 1托管， 0 非托管
       * </pre>
       */
      public Builder addAllTuoguanState(
          Iterable<? extends Common.PBPair> values) {
        if (tuoguanStateBuilder_ == null) {
          ensureTuoguanStateIsMutable();
          super.addAll(values, tuoguanState_);
          onChanged();
        } else {
          tuoguanStateBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .proto.PBPair tuoguan_state = 15;</code>
       *
       * <pre>
       *当前托管状态 key : 位置, value : 1托管， 0 非托管
       * </pre>
       */
      public Builder clearTuoguanState() {
        if (tuoguanStateBuilder_ == null) {
          tuoguanState_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00004000);
          onChanged();
        } else {
          tuoguanStateBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .proto.PBPair tuoguan_state = 15;</code>
       *
       * <pre>
       *当前托管状态 key : 位置, value : 1托管， 0 非托管
       * </pre>
       */
      public Builder removeTuoguanState(int index) {
        if (tuoguanStateBuilder_ == null) {
          ensureTuoguanStateIsMutable();
          tuoguanState_.remove(index);
          onChanged();
        } else {
          tuoguanStateBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .proto.PBPair tuoguan_state = 15;</code>
       *
       * <pre>
       *当前托管状态 key : 位置, value : 1托管， 0 非托管
       * </pre>
       */
      public Common.PBPair.Builder getTuoguanStateBuilder(
          int index) {
        return getTuoguanStateFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .proto.PBPair tuoguan_state = 15;</code>
       *
       * <pre>
       *当前托管状态 key : 位置, value : 1托管， 0 非托管
       * </pre>
       */
      public Common.PBPairOrBuilder getTuoguanStateOrBuilder(
          int index) {
        if (tuoguanStateBuilder_ == null) {
          return tuoguanState_.get(index);  } else {
          return tuoguanStateBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .proto.PBPair tuoguan_state = 15;</code>
       *
       * <pre>
       *当前托管状态 key : 位置, value : 1托管， 0 非托管
       * </pre>
       */
      public java.util.List<? extends Common.PBPairOrBuilder>
           getTuoguanStateOrBuilderList() {
        if (tuoguanStateBuilder_ != null) {
          return tuoguanStateBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(tuoguanState_);
        }
      }
      /**
       * <code>repeated .proto.PBPair tuoguan_state = 15;</code>
       *
       * <pre>
       *当前托管状态 key : 位置, value : 1托管， 0 非托管
       * </pre>
       */
      public Common.PBPair.Builder addTuoguanStateBuilder() {
        return getTuoguanStateFieldBuilder().addBuilder(
            Common.PBPair.getDefaultInstance());
      }
      /**
       * <code>repeated .proto.PBPair tuoguan_state = 15;</code>
       *
       * <pre>
       *当前托管状态 key : 位置, value : 1托管， 0 非托管
       * </pre>
       */
      public Common.PBPair.Builder addTuoguanStateBuilder(
          int index) {
        return getTuoguanStateFieldBuilder().addBuilder(
            index, Common.PBPair.getDefaultInstance());
      }
      /**
       * <code>repeated .proto.PBPair tuoguan_state = 15;</code>
       *
       * <pre>
       *当前托管状态 key : 位置, value : 1托管， 0 非托管
       * </pre>
       */
      public java.util.List<Common.PBPair.Builder>
           getTuoguanStateBuilderList() {
        return getTuoguanStateFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          Common.PBPair, Common.PBPair.Builder, Common.PBPairOrBuilder>
          getTuoguanStateFieldBuilder() {
        if (tuoguanStateBuilder_ == null) {
          tuoguanStateBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              Common.PBPair, Common.PBPair.Builder, Common.PBPairOrBuilder>(
                  tuoguanState_,
                  ((bitField0_ & 0x00004000) == 0x00004000),
                  getParentForChildren(),
                  isClean());
          tuoguanState_ = null;
        }
        return tuoguanStateBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:proto.PBDdzResetGame)
    }

    static {
      defaultInstance = new PBDdzResetGame(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:proto.PBDdzResetGame)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_PBDdzCalculate_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_protobuf_PBDdzCalculate_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_PBDdzCalculateItem_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_protobuf_PBDdzCalculateItem_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_PBDealLordCard_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_protobuf_PBDealLordCard_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_PBDdzDiscard_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_protobuf_PBDdzDiscard_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_PBDdzResetGame_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_protobuf_PBDdzResetGame_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\tddz.proto\022\010protobuf\032\014common.proto\"\200\001\n\016" +
      "PBDdzCalculate\022\017\n\007run_pos\030\001 \002(\005\0220\n\nplaye" +
      "r_cal\030\002 \003(\0132\034.proto.PBDdzCalculateIte" +
      "m\022+\n\013player_card\030\003 \003(\0132\026.proto.PBIntI" +
      "ntList\"W\n\022PBDdzCalculateItem\022\021\n\tplayer_i" +
      "d\030\001 \002(\005\022\014\n\004name\030\002 \002(\t\022\r\n\005times\030\003 \002(\005\022\021\n\t" +
      "gain_lose\030\004 \002(\005\"B\n\016PBDealLordCard\022\021\n\tcar" +
      "d_list\030\001 \003(\005\022\020\n\010lz_value\030\002 \001(\005\022\013\n\003pos\030\003 " +
      "\002(\005\"<\n\014PBDdzDiscard\022\014\n\004type\030\001 \002(\005\022\013\n\003pos" +
      "\030\002 \002(\005\022\021\n\tcard_list\030\003 \003(\005\"\257\003\n\016PBDdzReset",
      "Game\022/\n\013player_list\030\001 \002(\0132\032.proto.PBP" +
      "layerInfoList\022\016\n\006roomId\030\002 \002(\005\022\022\n\nself_ca" +
      "rds\030\003 \003(\005\022\024\n\014buttom_cards\030\004 \003(\005\022\020\n\010lord_" +
      "pos\030\005 \002(\005\022\r\n\005bonus\030\006 \002(\005\022(\n\016other_card_n" +
      "um\030\007 \003(\0132\020.proto.PBPair\022\025\n\rdesk_top_l" +
      "ist\030\010 \003(\005\0222\n\022other_last_discard\030\t \003(\0132\026." +
      "proto.PBIntIntList\022\023\n\013current_pos\030\n \002" +
      "(\005\022\025\n\rcurrent_state\030\013 \002(\005\022\033\n\023current_rem" +
      "ain_time\030\014 \002(\005\022\025\n\rrangpai_count\030\r \001(\005\022\023\n" +
      "\013laizi_value\030\016 \001(\005\022\'\n\rtuoguan_state\030\017 \003(",
      "\0132\020.proto.PBPair"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_protobuf_PBDdzCalculate_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_protobuf_PBDdzCalculate_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_protobuf_PBDdzCalculate_descriptor,
              new String[] { "RunPos", "PlayerCal", "PlayerCard", });
          internal_static_protobuf_PBDdzCalculateItem_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_protobuf_PBDdzCalculateItem_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_protobuf_PBDdzCalculateItem_descriptor,
              new String[] { "PlayerId", "Name", "Times", "GainLose", });
          internal_static_protobuf_PBDealLordCard_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_protobuf_PBDealLordCard_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_protobuf_PBDealLordCard_descriptor,
              new String[] { "CardList", "LzValue", "Pos", });
          internal_static_protobuf_PBDdzDiscard_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_protobuf_PBDdzDiscard_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_protobuf_PBDdzDiscard_descriptor,
              new String[] { "Type", "Pos", "CardList", });
          internal_static_protobuf_PBDdzResetGame_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_protobuf_PBDdzResetGame_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_protobuf_PBDdzResetGame_descriptor,
              new String[] { "PlayerList", "RoomId", "SelfCards", "ButtomCards", "LordPos", "Bonus", "OtherCardNum", "DeskTopList", "OtherLastDiscard", "CurrentPos", "CurrentState", "CurrentRemainTime", "RangpaiCount", "LaiziValue", "TuoguanState", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          Common.getDescriptor(),
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
